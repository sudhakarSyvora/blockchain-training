{
  "0x7250588229d622e38a9df12adfb983673e76a850ca68e95d644369cc85541ced": {
    "name": "GameItems",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "GameItems",
      "sourceName": "contracts/mock/GameItems.sol",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ERC1155InsufficientBalance",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "name": "ERC1155InvalidApprover",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "idsLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "valuesLength",
              "type": "uint256"
            }
          ],
          "name": "ERC1155InvalidArrayLength",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "ERC1155InvalidOperator",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "name": "ERC1155InvalidReceiver",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "ERC1155InvalidSender",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "ERC1155MissingApprovalForAll",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "GOLD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "SHIELD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "SILVER",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "SWORD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "THORS_HAMMER",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x60806040523480156200001157600080fd5b50604051806060016040528060278152602001620032b0602791396200003d816200011560201b60201c565b506200006a336000670de0b6b3a7640000604051806020016040528060008152506200012a60201b60201c565b6200009a3360016b033b2e3c9fd0803ce8000000604051806020016040528060008152506200012a60201b60201c565b620000bf3360026001604051806020016040528060008152506200012a60201b60201c565b620000e7336003633b9aca00604051806020016040528060008152506200012a60201b60201c565b6200010f336004633b9aca00604051806020016040528060008152506200012a60201b60201c565b62001265565b806002908162000126919062000ccd565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036200019f5760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000196919062000df9565b60405180910390fd5b600080620001b48585620001d660201b60201c565b91509150620001ce6000878484876200020660201b60201c565b505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6200021a85858585620002df60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620002d857600062000261620006b160201b60201c565b90506001845103620002bf57600062000285600086620006b960201b90919060201c565b905060006200029f600086620006b960201b90919060201c565b9050620002b7838989858589620006cd60201b60201c565b5050620002d6565b620002d58187878787876200089060201b60201c565b5b505b5050505050565b80518251146200032c57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016200032392919062000e27565b60405180910390fd5b60006200033e620006b160201b60201c565b905060005b835181101562000562576000620003648286620006b960201b90919060201c565b905060006200037d8386620006b960201b90919060201c565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614620004ae57600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156200045657888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016200044d949392919062000e54565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146200054c578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000544919062000ed0565b925050819055505b5050806200055a9062000f0b565b905062000343565b5060018351036200062957600062000585600085620006b960201b90919060201c565b905060006200059f600085620006b960201b90919060201c565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516200061992919062000e27565b60405180910390a45050620006aa565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051620006a192919062001026565b60405180910390a45b5050505050565b600033905090565b600060208202602084010151905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111562000888578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040162000731959493929190620010fb565b6020604051808303816000875af19250505080156200077057506040513d601f19601f820116820180604052508101906200076d9190620011c1565b60015b620007fa573d8060008114620007a3576040519150601f19603f3d011682016040523d82523d6000602084013e620007a8565b606091505b506000815103620007f257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401620007e9919062000df9565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146200088657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016200087d919062000df9565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111562000a4b578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401620008f4959493929190620011f3565b6020604051808303816000875af19250505080156200093357506040513d601f19601f82011682018060405250810190620009309190620011c1565b60015b620009bd573d806000811462000966576040519150601f19603f3d011682016040523d82523d6000602084013e6200096b565b606091505b506000815103620009b557846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401620009ac919062000df9565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161462000a4957846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000a40919062000df9565b60405180910390fd5b505b505050505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000ad557607f821691505b60208210810362000aeb5762000aea62000a8d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000b557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000b16565b62000b61868362000b16565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000bae62000ba862000ba28462000b79565b62000b83565b62000b79565b9050919050565b6000819050919050565b62000bca8362000b8d565b62000be262000bd98262000bb5565b84845462000b23565b825550505050565b600090565b62000bf962000bea565b62000c0681848462000bbf565b505050565b5b8181101562000c2e5762000c2260008262000bef565b60018101905062000c0c565b5050565b601f82111562000c7d5762000c478162000af1565b62000c528462000b06565b8101602085101562000c62578190505b62000c7a62000c718562000b06565b83018262000c0b565b50505b505050565b600082821c905092915050565b600062000ca26000198460080262000c82565b1980831691505092915050565b600062000cbd838362000c8f565b9150826002028217905092915050565b62000cd88262000a53565b67ffffffffffffffff81111562000cf45762000cf362000a5e565b5b62000d00825462000abc565b62000d0d82828562000c32565b600060209050601f83116001811462000d45576000841562000d30578287015190505b62000d3c858262000caf565b86555062000dac565b601f19841662000d558662000af1565b60005b8281101562000d7f5784890151825560018201915060208501945060208101905062000d58565b8683101562000d9f578489015162000d9b601f89168262000c8f565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000de18262000db4565b9050919050565b62000df38162000dd4565b82525050565b600060208201905062000e10600083018462000de8565b92915050565b62000e218162000b79565b82525050565b600060408201905062000e3e600083018562000e16565b62000e4d602083018462000e16565b9392505050565b600060808201905062000e6b600083018762000de8565b62000e7a602083018662000e16565b62000e89604083018562000e16565b62000e98606083018462000e16565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000edd8262000b79565b915062000eea8362000b79565b925082820190508082111562000f055762000f0462000ea1565b5b92915050565b600062000f188262000b79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000f4d5762000f4c62000ea1565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b62000f8f8162000b79565b82525050565b600062000fa3838362000f84565b60208301905092915050565b6000602082019050919050565b600062000fc98262000f58565b62000fd5818562000f63565b935062000fe28362000f74565b8060005b838110156200101957815162000ffd888262000f95565b97506200100a8362000faf565b92505060018101905062000fe6565b5085935050505092915050565b6000604082019050818103600083015262001042818562000fbc565b9050818103602083015262001058818462000fbc565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200109d57808201518184015260208101905062001080565b60008484015250505050565b6000601f19601f8301169050919050565b6000620010c78262001061565b620010d381856200106c565b9350620010e58185602086016200107d565b620010f081620010a9565b840191505092915050565b600060a08201905062001112600083018862000de8565b62001121602083018762000de8565b62001130604083018662000e16565b6200113f606083018562000e16565b8181036080830152620011538184620010ba565b90509695505050505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6200119b8162001164565b8114620011a757600080fd5b50565b600081519050620011bb8162001190565b92915050565b600060208284031215620011da57620011d96200115f565b5b6000620011ea84828501620011aa565b91505092915050565b600060a0820190506200120a600083018862000de8565b62001219602083018762000de8565b81810360408301526200122d818662000fbc565b9050818103606083015262001243818562000fbc565b90508181036080830152620012598184620010ba565b90509695505050505050565b61203b80620012756000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063d562e20411610066578063d562e20414610225578063e3e55f0814610243578063e985e9c514610261578063f242432a14610291576100ce565b80634e1273f4146101bb5780635b2725ed146101eb578063a22cb46514610209576100ce565b8062fdd58e146100d357806301ffc9a7146101035780630e89341c1461013357806313dc989f146101635780632eb2c2d6146101815780633e4bee381461019d575b600080fd5b6100ed60048036038101906100e8919061144c565b6102ad565b6040516100fa919061149b565b60405180910390f35b61011d6004803603810190610118919061150e565b610307565b60405161012a9190611556565b60405180910390f35b61014d60048036038101906101489190611571565b6103e9565b60405161015a919061162e565b60405180910390f35b61016b61047d565b604051610178919061149b565b60405180910390f35b61019b6004803603810190610196919061184d565b610482565b005b6101a561052a565b6040516101b2919061149b565b60405180910390f35b6101d560048036038101906101d091906119df565b61052f565b6040516101e29190611b15565b60405180910390f35b6101f361063e565b604051610200919061149b565b60405180910390f35b610223600480360381019061021e9190611b63565b610643565b005b61022d610659565b60405161023a919061149b565b60405180910390f35b61024b61065e565b604051610258919061149b565b60405180910390f35b61027b60048036038101906102769190611ba3565b610663565b6040516102889190611556565b60405180910390f35b6102ab60048036038101906102a69190611be3565b6106f7565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d257507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e257506103e18261079f565b5b9050919050565b6060600280546103f890611ca9565b80601f016020809104026020016040519081016040528092919081815260200182805461042490611ca9565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b50505050509050919050565b600381565b600061048c610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104d157506104cf8682610663565b155b156105155780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161050c929190611ce9565b60405180910390fd5b6105228686868686610811565b505050505050565b600081565b6060815183511461057b57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610572929190611d12565b60405180910390fd5b6000835167ffffffffffffffff81111561059857610597611655565b5b6040519080825280602002602001820160405280156105c65781602001602082028036833780820191505090505b50905060005b8451811015610633576106036105eb828761090990919063ffffffff16565b6105fe838761091d90919063ffffffff16565b6102ad565b82828151811061061657610615611d3b565b5b6020026020010181815250508061062c90611d99565b90506105cc565b508091505092915050565b600481565b61065561064e610809565b8383610931565b5050565b600281565b600181565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610701610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561074657506107448682610663565b155b1561078a5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610781929190611ce9565b60405180910390fd5b6107978686868686610aa1565b505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108835760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161087a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108f55760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108ec9190611de1565b60405180910390fd5b6109028585858585610bac565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a35760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161099a9190611de1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a949190611556565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b135760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b0a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b855760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b7c9190611de1565b60405180910390fd5b600080610b928585610c5e565b91509150610ba38787848487610bac565b50505050505050565b610bb885858585610c8e565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610c57576000610bf6610809565b90506001845103610c46576000610c1760008661091d90919063ffffffff16565b90506000610c2f60008661091d90919063ffffffff16565b9050610c3f83898985858961103c565b5050610c55565b610c548187878787876111f0565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610cd857815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ccf929190611d12565b60405180910390fd5b6000610ce2610809565b905060005b8351811015610ef7576000610d05828661091d90919063ffffffff16565b90506000610d1c838661091d90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610e4957600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610df157888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610de89493929190611dfc565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610ee4578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610edc9190611e41565b925050819055505b505080610ef090611d99565b9050610ce7565b506001835103610fb6576000610f1760008561091d90919063ffffffff16565b90506000610f2f60008561091d90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610fa7929190611d12565b60405180910390a45050611035565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161102c929190611e75565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156111e8578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161109d959493929190611f01565b6020604051808303816000875af19250505080156110d957506040513d601f19601f820116820180604052508101906110d69190611f70565b60015b61115d573d8060008114611109576040519150601f19603f3d011682016040523d82523d6000602084013e61110e565b606091505b50600081510361115557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161114c9190611de1565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111dd9190611de1565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561139c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611251959493929190611f9d565b6020604051808303816000875af192505050801561128d57506040513d601f19601f8201168201806040525081019061128a9190611f70565b60015b611311573d80600081146112bd576040519150601f19603f3d011682016040523d82523d6000602084013e6112c2565b606091505b50600081510361130957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113009190611de1565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461139a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113919190611de1565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113e3826113b8565b9050919050565b6113f3816113d8565b81146113fe57600080fd5b50565b600081359050611410816113ea565b92915050565b6000819050919050565b61142981611416565b811461143457600080fd5b50565b60008135905061144681611420565b92915050565b60008060408385031215611463576114626113ae565b5b600061147185828601611401565b925050602061148285828601611437565b9150509250929050565b61149581611416565b82525050565b60006020820190506114b0600083018461148c565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114eb816114b6565b81146114f657600080fd5b50565b600081359050611508816114e2565b92915050565b600060208284031215611524576115236113ae565b5b6000611532848285016114f9565b91505092915050565b60008115159050919050565b6115508161153b565b82525050565b600060208201905061156b6000830184611547565b92915050565b600060208284031215611587576115866113ae565b5b600061159584828501611437565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115d85780820151818401526020810190506115bd565b60008484015250505050565b6000601f19601f8301169050919050565b60006116008261159e565b61160a81856115a9565b935061161a8185602086016115ba565b611623816115e4565b840191505092915050565b6000602082019050818103600083015261164881846115f5565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61168d826115e4565b810181811067ffffffffffffffff821117156116ac576116ab611655565b5b80604052505050565b60006116bf6113a4565b90506116cb8282611684565b919050565b600067ffffffffffffffff8211156116eb576116ea611655565b5b602082029050602081019050919050565b600080fd5b600061171461170f846116d0565b6116b5565b90508083825260208201905060208402830185811115611737576117366116fc565b5b835b81811015611760578061174c8882611437565b845260208401935050602081019050611739565b5050509392505050565b600082601f83011261177f5761177e611650565b5b813561178f848260208601611701565b91505092915050565b600080fd5b600067ffffffffffffffff8211156117b8576117b7611655565b5b6117c1826115e4565b9050602081019050919050565b82818337600083830152505050565b60006117f06117eb8461179d565b6116b5565b90508281526020810184848401111561180c5761180b611798565b5b6118178482856117ce565b509392505050565b600082601f83011261183457611833611650565b5b81356118448482602086016117dd565b91505092915050565b600080600080600060a08688031215611869576118686113ae565b5b600061187788828901611401565b955050602061188888828901611401565b945050604086013567ffffffffffffffff8111156118a9576118a86113b3565b5b6118b58882890161176a565b935050606086013567ffffffffffffffff8111156118d6576118d56113b3565b5b6118e28882890161176a565b925050608086013567ffffffffffffffff811115611903576119026113b3565b5b61190f8882890161181f565b9150509295509295909350565b600067ffffffffffffffff82111561193757611936611655565b5b602082029050602081019050919050565b600061195b6119568461191c565b6116b5565b9050808382526020820190506020840283018581111561197e5761197d6116fc565b5b835b818110156119a757806119938882611401565b845260208401935050602081019050611980565b5050509392505050565b600082601f8301126119c6576119c5611650565b5b81356119d6848260208601611948565b91505092915050565b600080604083850312156119f6576119f56113ae565b5b600083013567ffffffffffffffff811115611a1457611a136113b3565b5b611a20858286016119b1565b925050602083013567ffffffffffffffff811115611a4157611a406113b3565b5b611a4d8582860161176a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a8c81611416565b82525050565b6000611a9e8383611a83565b60208301905092915050565b6000602082019050919050565b6000611ac282611a57565b611acc8185611a62565b9350611ad783611a73565b8060005b83811015611b08578151611aef8882611a92565b9750611afa83611aaa565b925050600181019050611adb565b5085935050505092915050565b60006020820190508181036000830152611b2f8184611ab7565b905092915050565b611b408161153b565b8114611b4b57600080fd5b50565b600081359050611b5d81611b37565b92915050565b60008060408385031215611b7a57611b796113ae565b5b6000611b8885828601611401565b9250506020611b9985828601611b4e565b9150509250929050565b60008060408385031215611bba57611bb96113ae565b5b6000611bc885828601611401565b9250506020611bd985828601611401565b9150509250929050565b600080600080600060a08688031215611bff57611bfe6113ae565b5b6000611c0d88828901611401565b9550506020611c1e88828901611401565b9450506040611c2f88828901611437565b9350506060611c4088828901611437565b925050608086013567ffffffffffffffff811115611c6157611c606113b3565b5b611c6d8882890161181f565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc157607f821691505b602082108103611cd457611cd3611c7a565b5b50919050565b611ce3816113d8565b82525050565b6000604082019050611cfe6000830185611cda565b611d0b6020830184611cda565b9392505050565b6000604082019050611d27600083018561148c565b611d34602083018461148c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611da482611416565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dd657611dd5611d6a565b5b600182019050919050565b6000602082019050611df66000830184611cda565b92915050565b6000608082019050611e116000830187611cda565b611e1e602083018661148c565b611e2b604083018561148c565b611e38606083018461148c565b95945050505050565b6000611e4c82611416565b9150611e5783611416565b9250828201905080821115611e6f57611e6e611d6a565b5b92915050565b60006040820190508181036000830152611e8f8185611ab7565b90508181036020830152611ea38184611ab7565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000611ed382611eac565b611edd8185611eb7565b9350611eed8185602086016115ba565b611ef6816115e4565b840191505092915050565b600060a082019050611f166000830188611cda565b611f236020830187611cda565b611f30604083018661148c565b611f3d606083018561148c565b8181036080830152611f4f8184611ec8565b90509695505050505050565b600081519050611f6a816114e2565b92915050565b600060208284031215611f8657611f856113ae565b5b6000611f9484828501611f5b565b91505092915050565b600060a082019050611fb26000830188611cda565b611fbf6020830187611cda565b8181036040830152611fd18186611ab7565b90508181036060830152611fe58185611ab7565b90508181036080830152611ff98184611ec8565b9050969550505050505056fea2646970667358221220685abd9d40300b98b3e3c754e946b49782ed1825c4e8366f2cd49a37e3302fe964736f6c6343000814003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063d562e20411610066578063d562e20414610225578063e3e55f0814610243578063e985e9c514610261578063f242432a14610291576100ce565b80634e1273f4146101bb5780635b2725ed146101eb578063a22cb46514610209576100ce565b8062fdd58e146100d357806301ffc9a7146101035780630e89341c1461013357806313dc989f146101635780632eb2c2d6146101815780633e4bee381461019d575b600080fd5b6100ed60048036038101906100e8919061144c565b6102ad565b6040516100fa919061149b565b60405180910390f35b61011d6004803603810190610118919061150e565b610307565b60405161012a9190611556565b60405180910390f35b61014d60048036038101906101489190611571565b6103e9565b60405161015a919061162e565b60405180910390f35b61016b61047d565b604051610178919061149b565b60405180910390f35b61019b6004803603810190610196919061184d565b610482565b005b6101a561052a565b6040516101b2919061149b565b60405180910390f35b6101d560048036038101906101d091906119df565b61052f565b6040516101e29190611b15565b60405180910390f35b6101f361063e565b604051610200919061149b565b60405180910390f35b610223600480360381019061021e9190611b63565b610643565b005b61022d610659565b60405161023a919061149b565b60405180910390f35b61024b61065e565b604051610258919061149b565b60405180910390f35b61027b60048036038101906102769190611ba3565b610663565b6040516102889190611556565b60405180910390f35b6102ab60048036038101906102a69190611be3565b6106f7565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d257507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e257506103e18261079f565b5b9050919050565b6060600280546103f890611ca9565b80601f016020809104026020016040519081016040528092919081815260200182805461042490611ca9565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b50505050509050919050565b600381565b600061048c610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104d157506104cf8682610663565b155b156105155780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161050c929190611ce9565b60405180910390fd5b6105228686868686610811565b505050505050565b600081565b6060815183511461057b57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610572929190611d12565b60405180910390fd5b6000835167ffffffffffffffff81111561059857610597611655565b5b6040519080825280602002602001820160405280156105c65781602001602082028036833780820191505090505b50905060005b8451811015610633576106036105eb828761090990919063ffffffff16565b6105fe838761091d90919063ffffffff16565b6102ad565b82828151811061061657610615611d3b565b5b6020026020010181815250508061062c90611d99565b90506105cc565b508091505092915050565b600481565b61065561064e610809565b8383610931565b5050565b600281565b600181565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610701610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561074657506107448682610663565b155b1561078a5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610781929190611ce9565b60405180910390fd5b6107978686868686610aa1565b505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108835760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161087a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108f55760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108ec9190611de1565b60405180910390fd5b6109028585858585610bac565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a35760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161099a9190611de1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a949190611556565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b135760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b0a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b855760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b7c9190611de1565b60405180910390fd5b600080610b928585610c5e565b91509150610ba38787848487610bac565b50505050505050565b610bb885858585610c8e565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610c57576000610bf6610809565b90506001845103610c46576000610c1760008661091d90919063ffffffff16565b90506000610c2f60008661091d90919063ffffffff16565b9050610c3f83898985858961103c565b5050610c55565b610c548187878787876111f0565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610cd857815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ccf929190611d12565b60405180910390fd5b6000610ce2610809565b905060005b8351811015610ef7576000610d05828661091d90919063ffffffff16565b90506000610d1c838661091d90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610e4957600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610df157888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610de89493929190611dfc565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610ee4578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610edc9190611e41565b925050819055505b505080610ef090611d99565b9050610ce7565b506001835103610fb6576000610f1760008561091d90919063ffffffff16565b90506000610f2f60008561091d90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610fa7929190611d12565b60405180910390a45050611035565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161102c929190611e75565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156111e8578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161109d959493929190611f01565b6020604051808303816000875af19250505080156110d957506040513d601f19601f820116820180604052508101906110d69190611f70565b60015b61115d573d8060008114611109576040519150601f19603f3d011682016040523d82523d6000602084013e61110e565b606091505b50600081510361115557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161114c9190611de1565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111dd9190611de1565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561139c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611251959493929190611f9d565b6020604051808303816000875af192505050801561128d57506040513d601f19601f8201168201806040525081019061128a9190611f70565b60015b611311573d80600081146112bd576040519150601f19603f3d011682016040523d82523d6000602084013e6112c2565b606091505b50600081510361130957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113009190611de1565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461139a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113919190611de1565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113e3826113b8565b9050919050565b6113f3816113d8565b81146113fe57600080fd5b50565b600081359050611410816113ea565b92915050565b6000819050919050565b61142981611416565b811461143457600080fd5b50565b60008135905061144681611420565b92915050565b60008060408385031215611463576114626113ae565b5b600061147185828601611401565b925050602061148285828601611437565b9150509250929050565b61149581611416565b82525050565b60006020820190506114b0600083018461148c565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114eb816114b6565b81146114f657600080fd5b50565b600081359050611508816114e2565b92915050565b600060208284031215611524576115236113ae565b5b6000611532848285016114f9565b91505092915050565b60008115159050919050565b6115508161153b565b82525050565b600060208201905061156b6000830184611547565b92915050565b600060208284031215611587576115866113ae565b5b600061159584828501611437565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115d85780820151818401526020810190506115bd565b60008484015250505050565b6000601f19601f8301169050919050565b60006116008261159e565b61160a81856115a9565b935061161a8185602086016115ba565b611623816115e4565b840191505092915050565b6000602082019050818103600083015261164881846115f5565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61168d826115e4565b810181811067ffffffffffffffff821117156116ac576116ab611655565b5b80604052505050565b60006116bf6113a4565b90506116cb8282611684565b919050565b600067ffffffffffffffff8211156116eb576116ea611655565b5b602082029050602081019050919050565b600080fd5b600061171461170f846116d0565b6116b5565b90508083825260208201905060208402830185811115611737576117366116fc565b5b835b81811015611760578061174c8882611437565b845260208401935050602081019050611739565b5050509392505050565b600082601f83011261177f5761177e611650565b5b813561178f848260208601611701565b91505092915050565b600080fd5b600067ffffffffffffffff8211156117b8576117b7611655565b5b6117c1826115e4565b9050602081019050919050565b82818337600083830152505050565b60006117f06117eb8461179d565b6116b5565b90508281526020810184848401111561180c5761180b611798565b5b6118178482856117ce565b509392505050565b600082601f83011261183457611833611650565b5b81356118448482602086016117dd565b91505092915050565b600080600080600060a08688031215611869576118686113ae565b5b600061187788828901611401565b955050602061188888828901611401565b945050604086013567ffffffffffffffff8111156118a9576118a86113b3565b5b6118b58882890161176a565b935050606086013567ffffffffffffffff8111156118d6576118d56113b3565b5b6118e28882890161176a565b925050608086013567ffffffffffffffff811115611903576119026113b3565b5b61190f8882890161181f565b9150509295509295909350565b600067ffffffffffffffff82111561193757611936611655565b5b602082029050602081019050919050565b600061195b6119568461191c565b6116b5565b9050808382526020820190506020840283018581111561197e5761197d6116fc565b5b835b818110156119a757806119938882611401565b845260208401935050602081019050611980565b5050509392505050565b600082601f8301126119c6576119c5611650565b5b81356119d6848260208601611948565b91505092915050565b600080604083850312156119f6576119f56113ae565b5b600083013567ffffffffffffffff811115611a1457611a136113b3565b5b611a20858286016119b1565b925050602083013567ffffffffffffffff811115611a4157611a406113b3565b5b611a4d8582860161176a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a8c81611416565b82525050565b6000611a9e8383611a83565b60208301905092915050565b6000602082019050919050565b6000611ac282611a57565b611acc8185611a62565b9350611ad783611a73565b8060005b83811015611b08578151611aef8882611a92565b9750611afa83611aaa565b925050600181019050611adb565b5085935050505092915050565b60006020820190508181036000830152611b2f8184611ab7565b905092915050565b611b408161153b565b8114611b4b57600080fd5b50565b600081359050611b5d81611b37565b92915050565b60008060408385031215611b7a57611b796113ae565b5b6000611b8885828601611401565b9250506020611b9985828601611b4e565b9150509250929050565b60008060408385031215611bba57611bb96113ae565b5b6000611bc885828601611401565b9250506020611bd985828601611401565b9150509250929050565b600080600080600060a08688031215611bff57611bfe6113ae565b5b6000611c0d88828901611401565b9550506020611c1e88828901611401565b9450506040611c2f88828901611437565b9350506060611c4088828901611437565b925050608086013567ffffffffffffffff811115611c6157611c606113b3565b5b611c6d8882890161181f565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc157607f821691505b602082108103611cd457611cd3611c7a565b5b50919050565b611ce3816113d8565b82525050565b6000604082019050611cfe6000830185611cda565b611d0b6020830184611cda565b9392505050565b6000604082019050611d27600083018561148c565b611d34602083018461148c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611da482611416565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dd657611dd5611d6a565b5b600182019050919050565b6000602082019050611df66000830184611cda565b92915050565b6000608082019050611e116000830187611cda565b611e1e602083018661148c565b611e2b604083018561148c565b611e38606083018461148c565b95945050505050565b6000611e4c82611416565b9150611e5783611416565b9250828201905080821115611e6f57611e6e611d6a565b5b92915050565b60006040820190508181036000830152611e8f8185611ab7565b90508181036020830152611ea38184611ab7565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000611ed382611eac565b611edd8185611eb7565b9350611eed8185602086016115ba565b611ef6816115e4565b840191505092915050565b600060a082019050611f166000830188611cda565b611f236020830187611cda565b611f30604083018661148c565b611f3d606083018561148c565b8181036080830152611f4f8184611ec8565b90509695505050505050565b600081519050611f6a816114e2565b92915050565b600060208284031215611f8657611f856113ae565b5b6000611f9484828501611f5b565b91505092915050565b600060a082019050611fb26000830188611cda565b611fbf6020830187611cda565b8181036040830152611fd18186611ab7565b90508181036060830152611fe58185611ab7565b90508181036080830152611ff98184611ec8565b9050969550505050505056fea2646970667358221220685abd9d40300b98b3e3c754e946b49782ed1825c4e8366f2cd49a37e3302fe964736f6c63430008140033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "errors": {
          "ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
            {
              "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
              "params": {
                "balance": "Current balance for the interacting account.",
                "needed": "Minimum amount required to perform a transfer.",
                "sender": "Address whose tokens are being transferred.",
                "tokenId": "Identifier number of a token."
              }
            }
          ],
          "ERC1155InvalidApprover(address)": [
            {
              "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
              "params": {
                "approver": "Address initiating an approval operation."
              }
            }
          ],
          "ERC1155InvalidArrayLength(uint256,uint256)": [
            {
              "details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
              "params": {
                "idsLength": "Length of the array of token identifiers",
                "valuesLength": "Length of the array of token amounts"
              }
            }
          ],
          "ERC1155InvalidOperator(address)": [
            {
              "details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
              "params": {
                "operator": "Address that may be allowed to operate on tokens without being their owner."
              }
            }
          ],
          "ERC1155InvalidReceiver(address)": [
            {
              "details": "Indicates a failure with the token `receiver`. Used in transfers.",
              "params": {
                "receiver": "Address to which tokens are being transferred."
              }
            }
          ],
          "ERC1155InvalidSender(address)": [
            {
              "details": "Indicates a failure with the token `sender`. Used in transfers.",
              "params": {
                "sender": "Address whose tokens are being transferred."
              }
            }
          ],
          "ERC1155MissingApprovalForAll(address,address)": [
            {
              "details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
              "params": {
                "operator": "Address that may be allowed to operate on tokens without being their owner.",
                "owner": "Address of the current owner of a token."
              }
            }
          ]
        },
        "events": {
          "ApprovalForAll(address,address,bool)": {
            "details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
          },
          "TransferBatch(address,address,address,uint256[],uint256[])": {
            "details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
          },
          "TransferSingle(address,address,address,uint256,uint256)": {
            "details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
          },
          "URI(string,uint256)": {
            "details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
          }
        },
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC1155-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "uri(uint256)": {
            "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
          }
        },
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {
            "@_197": {
              "entryPoint": null,
              "id": 197,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_3473": {
              "entryPoint": null,
              "id": 3473,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_asSingletonArrays_1186": {
              "entryPoint": 470,
              "id": 1186,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "@_doSafeBatchTransferAcceptanceCheck_1170": {
              "entryPoint": 2192,
              "id": 1170,
              "parameterSlots": 6,
              "returnSlots": 0
            },
            "@_doSafeTransferAcceptanceCheck_1100": {
              "entryPoint": 1741,
              "id": 1100,
              "parameterSlots": 6,
              "returnSlots": 0
            },
            "@_mint_862": {
              "entryPoint": 298,
              "id": 862,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@_msgSender_1758": {
              "entryPoint": 1713,
              "id": 1758,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_setURI_810": {
              "entryPoint": 277,
              "id": 810,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_updateWithAcceptanceCheck_678": {
              "entryPoint": 518,
              "id": 678,
              "parameterSlots": 5,
              "returnSlots": 0
            },
            "@_update_602": {
              "entryPoint": 735,
              "id": 602,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@unsafeMemoryAccess_1732": {
              "entryPoint": 1721,
              "id": 1732,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bytes4_fromMemory": {
              "entryPoint": 4522,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_bytes4_fromMemory": {
              "entryPoint": 4545,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
              "entryPoint": 3989,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_address_to_t_address_fromStack": {
              "entryPoint": 3560,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
              "entryPoint": 4028,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
              "entryPoint": 4282,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_uint256_to_t_uint256": {
              "entryPoint": 3972,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_uint256_to_t_uint256_fromStack": {
              "entryPoint": 3606,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": 3577,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
              "entryPoint": 4595,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
              "entryPoint": 4347,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": 3668,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
              "entryPoint": 4134,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": 3623,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "allocate_unbounded": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 3956,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_dataslot_t_string_storage": {
              "entryPoint": 2801,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 3928,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_bytes_memory_ptr": {
              "entryPoint": 4193,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_string_memory_ptr": {
              "entryPoint": 2643,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 4015,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
              "entryPoint": 3939,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
              "entryPoint": 4204,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint256": {
              "entryPoint": 3792,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "clean_up_bytearray_end_slots_t_string_storage": {
              "entryPoint": 3122,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "cleanup_t_address": {
              "entryPoint": 3540,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_bytes4": {
              "entryPoint": 4452,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint160": {
              "entryPoint": 3508,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint256": {
              "entryPoint": 2937,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "clear_storage_range_t_bytes1": {
              "entryPoint": 3083,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "convert_t_uint256_to_t_uint256": {
              "entryPoint": 2957,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
              "entryPoint": 3277,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "copy_memory_to_memory_with_cleanup": {
              "entryPoint": 4221,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "divide_by_32_ceil": {
              "entryPoint": 2822,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "extract_byte_array_length": {
              "entryPoint": 2748,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "extract_used_part_and_set_length_of_short_byte_array": {
              "entryPoint": 3247,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "identity": {
              "entryPoint": 2947,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "increment_t_uint256": {
              "entryPoint": 3851,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "mask_bytes_dynamic": {
              "entryPoint": 3215,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "panic_error_0x11": {
              "entryPoint": 3745,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x22": {
              "entryPoint": 2701,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 2654,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "prepare_store_t_uint256": {
              "entryPoint": 2997,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
              "entryPoint": 4447,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "round_up_to_mul_of_32": {
              "entryPoint": 4265,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "shift_left_dynamic": {
              "entryPoint": 2838,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "shift_right_unsigned_dynamic": {
              "entryPoint": 3202,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "storage_set_to_zero_t_uint256": {
              "entryPoint": 3055,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "update_byte_slice_dynamic32": {
              "entryPoint": 2851,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "update_storage_value_t_uint256_to_t_uint256": {
              "entryPoint": 3007,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "validator_revert_t_bytes4": {
              "entryPoint": 4496,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "zero_value_for_split_t_uint256": {
              "entryPoint": 3050,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:13677:15",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "66:40:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "77:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "87:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "87:12:15"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "77:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "49:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "59:6:15",
                        "type": ""
                      }
                    ],
                    "src": "7:99:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "140:152:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "157:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "160:77:15",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "150:88:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "150:88:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "254:1:15",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "257:4:15",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "247:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "247:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "247:15:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "278:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "281:4:15",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "271:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "271:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "271:15:15"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nodeType": "YulFunctionDefinition",
                    "src": "112:180:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "326:152:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "343:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "346:77:15",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "336:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "336:88:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "336:88:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "440:1:15",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "443:4:15",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "433:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "433:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "433:15:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "464:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "467:4:15",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "457:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "457:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "457:15:15"
                        }
                      ]
                    },
                    "name": "panic_error_0x22",
                    "nodeType": "YulFunctionDefinition",
                    "src": "298:180:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "535:269:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "545:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "559:4:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "565:1:15",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "555:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "555:12:15"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "545:6:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "576:38:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "606:4:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "612:1:15",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:12:15"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "580:18:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "653:51:15",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "667:27:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "681:6:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "689:4:15",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "677:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "677:17:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "667:6:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "633:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "626:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "626:26:15"
                          },
                          "nodeType": "YulIf",
                          "src": "623:81:15"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "756:42:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x22",
                                    "nodeType": "YulIdentifier",
                                    "src": "770:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "770:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "770:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "720:18:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "743:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "751:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "740:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "740:14:15"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "717:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "717:38:15"
                          },
                          "nodeType": "YulIf",
                          "src": "714:84:15"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "519:4:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "528:6:15",
                        "type": ""
                      }
                    ],
                    "src": "484:320:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "864:87:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "874:11:15",
                          "value": {
                            "name": "ptr",
                            "nodeType": "YulIdentifier",
                            "src": "882:3:15"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "874:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "902:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "905:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "895:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "895:14:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "895:14:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "918:26:15",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "936:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "939:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "keccak256",
                              "nodeType": "YulIdentifier",
                              "src": "926:9:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "926:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "918:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_dataslot_t_string_storage",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "ptr",
                        "nodeType": "YulTypedName",
                        "src": "851:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "859:4:15",
                        "type": ""
                      }
                    ],
                    "src": "810:141:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1001:49:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1011:33:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1029:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1036:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1025:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1025:14:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1041:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "1021:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1021:23:15"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "1011:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "divide_by_32_ceil",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "984:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "994:6:15",
                        "type": ""
                      }
                    ],
                    "src": "957:93:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1109:54:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1119:37:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "bits",
                                "nodeType": "YulIdentifier",
                                "src": "1144:4:15"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1150:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1140:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1140:16:15"
                          },
                          "variableNames": [
                            {
                              "name": "newValue",
                              "nodeType": "YulIdentifier",
                              "src": "1119:8:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "shift_left_dynamic",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "bits",
                        "nodeType": "YulTypedName",
                        "src": "1084:4:15",
                        "type": ""
                      },
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1090:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "newValue",
                        "nodeType": "YulTypedName",
                        "src": "1100:8:15",
                        "type": ""
                      }
                    ],
                    "src": "1056:107:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1245:317:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1255:35:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "shiftBytes",
                                "nodeType": "YulIdentifier",
                                "src": "1276:10:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1288:1:15",
                                "type": "",
                                "value": "8"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "1272:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1272:18:15"
                          },
                          "variables": [
                            {
                              "name": "shiftBits",
                              "nodeType": "YulTypedName",
                              "src": "1259:9:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1299:109:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "shiftBits",
                                "nodeType": "YulIdentifier",
                                "src": "1330:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1341:66:15",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shift_left_dynamic",
                              "nodeType": "YulIdentifier",
                              "src": "1311:18:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1311:97:15"
                          },
                          "variables": [
                            {
                              "name": "mask",
                              "nodeType": "YulTypedName",
                              "src": "1303:4:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1417:51:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "shiftBits",
                                "nodeType": "YulIdentifier",
                                "src": "1448:9:15"
                              },
                              {
                                "name": "toInsert",
                                "nodeType": "YulIdentifier",
                                "src": "1459:8:15"
                              }
                            ],
                            "functionName": {
                              "name": "shift_left_dynamic",
                              "nodeType": "YulIdentifier",
                              "src": "1429:18:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1429:39:15"
                          },
                          "variableNames": [
                            {
                              "name": "toInsert",
                              "nodeType": "YulIdentifier",
                              "src": "1417:8:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1477:30:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1490:5:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "mask",
                                    "nodeType": "YulIdentifier",
                                    "src": "1501:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1497:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1497:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1486:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1486:21:15"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1477:5:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1516:40:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1529:5:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "toInsert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1540:8:15"
                                  },
                                  {
                                    "name": "mask",
                                    "nodeType": "YulIdentifier",
                                    "src": "1550:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1536:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1536:19:15"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "1526:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1526:30:15"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "1516:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "update_byte_slice_dynamic32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1206:5:15",
                        "type": ""
                      },
                      {
                        "name": "shiftBytes",
                        "nodeType": "YulTypedName",
                        "src": "1213:10:15",
                        "type": ""
                      },
                      {
                        "name": "toInsert",
                        "nodeType": "YulTypedName",
                        "src": "1225:8:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "1238:6:15",
                        "type": ""
                      }
                    ],
                    "src": "1169:393:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1613:32:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1623:16:15",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1634:5:15"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "1623:7:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1595:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "1605:7:15",
                        "type": ""
                      }
                    ],
                    "src": "1568:77:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1683:28:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1693:12:15",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1700:5:15"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "1693:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "identity",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1669:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "1679:3:15",
                        "type": ""
                      }
                    ],
                    "src": "1651:60:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1777:82:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1787:66:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1845:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1827:17:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1827:24:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "identity",
                                  "nodeType": "YulIdentifier",
                                  "src": "1818:8:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1818:34:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1800:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1800:53:15"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nodeType": "YulIdentifier",
                              "src": "1787:9:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_uint256_to_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1757:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nodeType": "YulTypedName",
                        "src": "1767:9:15",
                        "type": ""
                      }
                    ],
                    "src": "1717:142:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1912:28:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1922:12:15",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1929:5:15"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "1922:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "prepare_store_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1898:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "1908:3:15",
                        "type": ""
                      }
                    ],
                    "src": "1865:75:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2022:193:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2032:63:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value_0",
                                "nodeType": "YulIdentifier",
                                "src": "2087:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_uint256_to_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2056:30:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2056:39:15"
                          },
                          "variables": [
                            {
                              "name": "convertedValue_0",
                              "nodeType": "YulTypedName",
                              "src": "2036:16:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2111:4:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot",
                                        "nodeType": "YulIdentifier",
                                        "src": "2151:4:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2145:5:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2145:11:15"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2158:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "convertedValue_0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2190:16:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "prepare_store_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2166:23:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2166:41:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "update_byte_slice_dynamic32",
                                  "nodeType": "YulIdentifier",
                                  "src": "2117:27:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2117:91:15"
                              }
                            ],
                            "functionName": {
                              "name": "sstore",
                              "nodeType": "YulIdentifier",
                              "src": "2104:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2104:105:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2104:105:15"
                        }
                      ]
                    },
                    "name": "update_storage_value_t_uint256_to_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nodeType": "YulTypedName",
                        "src": "1999:4:15",
                        "type": ""
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2005:6:15",
                        "type": ""
                      },
                      {
                        "name": "value_0",
                        "nodeType": "YulTypedName",
                        "src": "2013:7:15",
                        "type": ""
                      }
                    ],
                    "src": "1946:269:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2270:24:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2280:8:15",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2287:1:15",
                            "type": "",
                            "value": "0"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "zero_value_for_split_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "2266:3:15",
                        "type": ""
                      }
                    ],
                    "src": "2221:73:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2353:136:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2363:46:15",
                          "value": {
                            "arguments": [],
                            "functionName": {
                              "name": "zero_value_for_split_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2377:30:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2377:32:15"
                          },
                          "variables": [
                            {
                              "name": "zero_0",
                              "nodeType": "YulTypedName",
                              "src": "2367:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2462:4:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2468:6:15"
                              },
                              {
                                "name": "zero_0",
                                "nodeType": "YulIdentifier",
                                "src": "2476:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "update_storage_value_t_uint256_to_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2418:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2418:65:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2418:65:15"
                        }
                      ]
                    },
                    "name": "storage_set_to_zero_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nodeType": "YulTypedName",
                        "src": "2339:4:15",
                        "type": ""
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2345:6:15",
                        "type": ""
                      }
                    ],
                    "src": "2300:189:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2545:136:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2612:63:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "2656:5:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2663:1:15",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "storage_set_to_zero_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "2626:29:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2626:39:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2626:39:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "start",
                                "nodeType": "YulIdentifier",
                                "src": "2565:5:15"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "2572:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2562:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2562:14:15"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "2577:26:15",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "2579:22:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "2592:5:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2599:1:15",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2588:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2588:13:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "2579:5:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "2559:2:15",
                            "statements": []
                          },
                          "src": "2555:120:15"
                        }
                      ]
                    },
                    "name": "clear_storage_range_t_bytes1",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "start",
                        "nodeType": "YulTypedName",
                        "src": "2533:5:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2540:3:15",
                        "type": ""
                      }
                    ],
                    "src": "2495:186:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2766:464:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2792:431:15",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "2806:54:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "array",
                                      "nodeType": "YulIdentifier",
                                      "src": "2854:5:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_dataslot_t_string_storage",
                                    "nodeType": "YulIdentifier",
                                    "src": "2822:31:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2822:38:15"
                                },
                                "variables": [
                                  {
                                    "name": "dataArea",
                                    "nodeType": "YulTypedName",
                                    "src": "2810:8:15",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "2873:63:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "dataArea",
                                      "nodeType": "YulIdentifier",
                                      "src": "2896:8:15"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "2924:10:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "divide_by_32_ceil",
                                        "nodeType": "YulIdentifier",
                                        "src": "2906:17:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2906:29:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2892:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2892:44:15"
                                },
                                "variables": [
                                  {
                                    "name": "deleteStart",
                                    "nodeType": "YulTypedName",
                                    "src": "2877:11:15",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "3093:27:15",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "3095:23:15",
                                      "value": {
                                        "name": "dataArea",
                                        "nodeType": "YulIdentifier",
                                        "src": "3110:8:15"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "deleteStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "3095:11:15"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "3077:10:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3089:2:15",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "3074:2:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3074:18:15"
                                },
                                "nodeType": "YulIf",
                                "src": "3071:49:15"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3162:11:15"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "dataArea",
                                          "nodeType": "YulIdentifier",
                                          "src": "3179:8:15"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "len",
                                              "nodeType": "YulIdentifier",
                                              "src": "3207:3:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "divide_by_32_ceil",
                                            "nodeType": "YulIdentifier",
                                            "src": "3189:17:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3189:22:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3175:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3175:37:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "clear_storage_range_t_bytes1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3133:28:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3133:80:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3133:80:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "len",
                                "nodeType": "YulIdentifier",
                                "src": "2783:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2788:2:15",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2780:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2780:11:15"
                          },
                          "nodeType": "YulIf",
                          "src": "2777:446:15"
                        }
                      ]
                    },
                    "name": "clean_up_bytearray_end_slots_t_string_storage",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "2742:5:15",
                        "type": ""
                      },
                      {
                        "name": "len",
                        "nodeType": "YulTypedName",
                        "src": "2749:3:15",
                        "type": ""
                      },
                      {
                        "name": "startIndex",
                        "nodeType": "YulTypedName",
                        "src": "2754:10:15",
                        "type": ""
                      }
                    ],
                    "src": "2687:543:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3299:54:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3309:37:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "bits",
                                "nodeType": "YulIdentifier",
                                "src": "3334:4:15"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3340:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "shr",
                              "nodeType": "YulIdentifier",
                              "src": "3330:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3330:16:15"
                          },
                          "variableNames": [
                            {
                              "name": "newValue",
                              "nodeType": "YulIdentifier",
                              "src": "3309:8:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "shift_right_unsigned_dynamic",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "bits",
                        "nodeType": "YulTypedName",
                        "src": "3274:4:15",
                        "type": ""
                      },
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3280:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "newValue",
                        "nodeType": "YulTypedName",
                        "src": "3290:8:15",
                        "type": ""
                      }
                    ],
                    "src": "3236:117:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3410:118:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3420:68:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3469:1:15",
                                        "type": "",
                                        "value": "8"
                                      },
                                      {
                                        "name": "bytes",
                                        "nodeType": "YulIdentifier",
                                        "src": "3472:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "3465:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3465:13:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3484:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3480:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3480:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "shift_right_unsigned_dynamic",
                                  "nodeType": "YulIdentifier",
                                  "src": "3436:28:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3436:51:15"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3432:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3432:56:15"
                          },
                          "variables": [
                            {
                              "name": "mask",
                              "nodeType": "YulTypedName",
                              "src": "3424:4:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3497:25:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "3511:4:15"
                              },
                              {
                                "name": "mask",
                                "nodeType": "YulIdentifier",
                                "src": "3517:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3507:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3507:15:15"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "3497:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "mask_bytes_dynamic",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "3387:4:15",
                        "type": ""
                      },
                      {
                        "name": "bytes",
                        "nodeType": "YulTypedName",
                        "src": "3393:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "3403:6:15",
                        "type": ""
                      }
                    ],
                    "src": "3359:169:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3614:214:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3747:37:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "3774:4:15"
                              },
                              {
                                "name": "len",
                                "nodeType": "YulIdentifier",
                                "src": "3780:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "mask_bytes_dynamic",
                              "nodeType": "YulIdentifier",
                              "src": "3755:18:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3755:29:15"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "3747:4:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3793:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "3804:4:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3814:1:15",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "3817:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "3810:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3810:11:15"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "3801:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3801:21:15"
                          },
                          "variableNames": [
                            {
                              "name": "used",
                              "nodeType": "YulIdentifier",
                              "src": "3793:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "3595:4:15",
                        "type": ""
                      },
                      {
                        "name": "len",
                        "nodeType": "YulTypedName",
                        "src": "3601:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "used",
                        "nodeType": "YulTypedName",
                        "src": "3609:4:15",
                        "type": ""
                      }
                    ],
                    "src": "3533:295:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3925:1303:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3936:51:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "3983:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "3950:32:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3950:37:15"
                          },
                          "variables": [
                            {
                              "name": "newLen",
                              "nodeType": "YulTypedName",
                              "src": "3940:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4072:22:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "4074:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4074:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4074:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "newLen",
                                "nodeType": "YulIdentifier",
                                "src": "4044:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4052:18:15",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4041:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4041:30:15"
                          },
                          "nodeType": "YulIf",
                          "src": "4038:56:15"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4104:52:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "4150:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4144:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4144:11:15"
                              }
                            ],
                            "functionName": {
                              "name": "extract_byte_array_length",
                              "nodeType": "YulIdentifier",
                              "src": "4118:25:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4118:38:15"
                          },
                          "variables": [
                            {
                              "name": "oldLen",
                              "nodeType": "YulTypedName",
                              "src": "4108:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "4249:4:15"
                              },
                              {
                                "name": "oldLen",
                                "nodeType": "YulIdentifier",
                                "src": "4255:6:15"
                              },
                              {
                                "name": "newLen",
                                "nodeType": "YulIdentifier",
                                "src": "4263:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "clean_up_bytearray_end_slots_t_string_storage",
                              "nodeType": "YulIdentifier",
                              "src": "4203:45:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4203:67:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4203:67:15"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4280:18:15",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4297:1:15",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "srcOffset",
                              "nodeType": "YulTypedName",
                              "src": "4284:9:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4308:17:15",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4321:4:15",
                            "type": "",
                            "value": "0x20"
                          },
                          "variableNames": [
                            {
                              "name": "srcOffset",
                              "nodeType": "YulIdentifier",
                              "src": "4308:9:15"
                            }
                          ]
                        },
                        {
                          "cases": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4372:611:15",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4386:37:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "4405:6:15"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4417:4:15",
                                              "type": "",
                                              "value": "0x1f"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nodeType": "YulIdentifier",
                                            "src": "4413:3:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4413:9:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "4401:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4401:22:15"
                                    },
                                    "variables": [
                                      {
                                        "name": "loopEnd",
                                        "nodeType": "YulTypedName",
                                        "src": "4390:7:15",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4437:51:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nodeType": "YulIdentifier",
                                          "src": "4483:4:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_dataslot_t_string_storage",
                                        "nodeType": "YulIdentifier",
                                        "src": "4451:31:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4451:37:15"
                                    },
                                    "variables": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulTypedName",
                                        "src": "4441:6:15",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4501:10:15",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4510:1:15",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "4505:1:15",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "4569:163:15",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "4594:6:15"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4612:3:15"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4617:9:15"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4608:3:15"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4608:19:15"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4602:5:15"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4602:26:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "4587:6:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4587:42:15"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "4587:42:15"
                                        },
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "4646:24:15",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "4660:6:15"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4668:1:15",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4656:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4656:14:15"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "dstPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "4646:6:15"
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "4687:31:15",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "4704:9:15"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4715:2:15",
                                                "type": "",
                                                "value": "32"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4700:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4700:18:15"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "srcOffset",
                                              "nodeType": "YulIdentifier",
                                              "src": "4687:9:15"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4535:1:15"
                                        },
                                        {
                                          "name": "loopEnd",
                                          "nodeType": "YulIdentifier",
                                          "src": "4538:7:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "4532:2:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4532:14:15"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "4547:21:15",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "4549:17:15",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "i",
                                                "nodeType": "YulIdentifier",
                                                "src": "4558:1:15"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4561:4:15",
                                                "type": "",
                                                "value": "0x20"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4554:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4554:12:15"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "4549:1:15"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "4528:3:15",
                                      "statements": []
                                    },
                                    "src": "4524:208:15"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "4768:156:15",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "4786:43:15",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4813:3:15"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4818:9:15"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4809:3:15"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4809:19:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "4803:5:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4803:26:15"
                                          },
                                          "variables": [
                                            {
                                              "name": "lastValue",
                                              "nodeType": "YulTypedName",
                                              "src": "4790:9:15",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "4853:6:15"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "lastValue",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4880:9:15"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "newLen",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4895:6:15"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "4903:4:15",
                                                        "type": "",
                                                        "value": "0x1f"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4891:3:15"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4891:17:15"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mask_bytes_dynamic",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4861:18:15"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4861:48:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "4846:6:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4846:64:15"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "4846:64:15"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "loopEnd",
                                          "nodeType": "YulIdentifier",
                                          "src": "4751:7:15"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "4760:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "4748:2:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4748:19:15"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "4745:179:15"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nodeType": "YulIdentifier",
                                          "src": "4944:4:15"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4958:6:15"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "4966:1:15",
                                                  "type": "",
                                                  "value": "2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mul",
                                                "nodeType": "YulIdentifier",
                                                "src": "4954:3:15"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4954:14:15"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4970:1:15",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4950:3:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4950:22:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4937:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4937:36:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4937:36:15"
                                  }
                                ]
                              },
                              "nodeType": "YulCase",
                              "src": "4365:618:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4370:1:15",
                                "type": "",
                                "value": "1"
                              }
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5000:222:15",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5014:14:15",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5027:1:15",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulTypedName",
                                        "src": "5018:5:15",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "5051:67:15",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "5069:35:15",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5088:3:15"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5093:9:15"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5084:3:15"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5084:19:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "5078:5:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5078:26:15"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "5069:5:15"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "5044:6:15"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "5041:77:15"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nodeType": "YulIdentifier",
                                          "src": "5138:4:15"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "5197:5:15"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "5204:6:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "extract_used_part_and_set_length_of_short_byte_array",
                                            "nodeType": "YulIdentifier",
                                            "src": "5144:52:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5144:67:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5131:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5131:81:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5131:81:15"
                                  }
                                ]
                              },
                              "nodeType": "YulCase",
                              "src": "4992:230:15",
                              "value": "default"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "name": "newLen",
                                "nodeType": "YulIdentifier",
                                "src": "4345:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4353:2:15",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4342:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4342:14:15"
                          },
                          "nodeType": "YulSwitch",
                          "src": "4335:887:15"
                        }
                      ]
                    },
                    "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nodeType": "YulTypedName",
                        "src": "3914:4:15",
                        "type": ""
                      },
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "3920:3:15",
                        "type": ""
                      }
                    ],
                    "src": "3833:1395:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5279:81:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5289:65:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5304:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5311:42:15",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5300:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5300:54:15"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "5289:7:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint160",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "5261:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "5271:7:15",
                        "type": ""
                      }
                    ],
                    "src": "5234:126:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5411:51:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5421:35:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5450:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "5432:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5432:24:15"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "5421:7:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "5393:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "5403:7:15",
                        "type": ""
                      }
                    ],
                    "src": "5366:96:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5533:53:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5550:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5573:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5555:17:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5555:24:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5543:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5543:37:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5543:37:15"
                        }
                      ]
                    },
                    "name": "abi_encode_t_address_to_t_address_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "5521:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "5528:3:15",
                        "type": ""
                      }
                    ],
                    "src": "5468:118:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5690:124:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5700:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5712:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5723:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5708:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5708:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5700:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5780:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5793:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5804:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5789:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5789:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "5736:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5736:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5736:71:15"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5662:9:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5674:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "5685:4:15",
                        "type": ""
                      }
                    ],
                    "src": "5592:222:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5885:53:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5902:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5925:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "5907:17:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5907:24:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5895:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5895:37:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5895:37:15"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "5873:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "5880:3:15",
                        "type": ""
                      }
                    ],
                    "src": "5820:118:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6070:206:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6080:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6092:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6103:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6088:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6088:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6080:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6160:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6173:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6184:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6169:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6169:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "6116:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6116:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6116:71:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6241:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6254:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6265:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6250:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6250:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "6197:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6197:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6197:72:15"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6034:9:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "6046:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6054:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6065:4:15",
                        "type": ""
                      }
                    ],
                    "src": "5944:332:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6464:371:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6474:27:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6486:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6497:3:15",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6482:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6482:19:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6474:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6555:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6568:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6579:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6564:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6564:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "6511:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6511:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6511:71:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6636:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6649:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6660:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6645:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6645:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "6592:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6592:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6592:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "6718:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6731:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6742:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6727:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6727:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "6674:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6674:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6674:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "6800:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6813:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6824:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6809:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6809:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "6756:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6756:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6756:72:15"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6412:9:15",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "6424:6:15",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "6432:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "6440:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6448:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6459:4:15",
                        "type": ""
                      }
                    ],
                    "src": "6282:553:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6869:152:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6886:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6889:77:15",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6879:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6879:88:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6879:88:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6983:1:15",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6986:4:15",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6976:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6976:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6976:15:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7007:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7010:4:15",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "7000:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7000:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7000:15:15"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6841:180:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7071:147:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7081:25:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7104:1:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "7086:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7086:20:15"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "7081:1:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7115:25:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7138:1:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "7120:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7120:20:15"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "7115:1:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7149:16:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7160:1:15"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7163:1:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7156:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7156:9:15"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "7149:3:15"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7189:22:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "7191:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7191:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7191:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7181:1:15"
                              },
                              {
                                "name": "sum",
                                "nodeType": "YulIdentifier",
                                "src": "7184:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "7178:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7178:10:15"
                          },
                          "nodeType": "YulIf",
                          "src": "7175:36:15"
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "7058:1:15",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "7061:1:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "7067:3:15",
                        "type": ""
                      }
                    ],
                    "src": "7027:191:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7267:190:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7277:33:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7304:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "7286:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7286:24:15"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "7277:5:15"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7400:22:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "7402:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7402:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7402:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7325:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7332:66:15",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "7322:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7322:77:15"
                          },
                          "nodeType": "YulIf",
                          "src": "7319:103:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7431:20:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7442:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7449:1:15",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7438:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7438:13:15"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "7431:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "increment_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "7253:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "7263:3:15",
                        "type": ""
                      }
                    ],
                    "src": "7224:233:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7537:40:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7548:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7564:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "7558:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7558:12:15"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7548:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "7520:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "7530:6:15",
                        "type": ""
                      }
                    ],
                    "src": "7463:114:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7694:73:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7711:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7716:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7704:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7704:19:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7704:19:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7732:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7751:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7756:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7747:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7747:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "7732:11:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "7666:3:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "7671:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "7682:11:15",
                        "type": ""
                      }
                    ],
                    "src": "7583:184:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7845:60:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7855:11:15",
                          "value": {
                            "name": "ptr",
                            "nodeType": "YulIdentifier",
                            "src": "7863:3:15"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "7855:4:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7876:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "7888:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7893:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7884:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7884:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "7876:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "ptr",
                        "nodeType": "YulTypedName",
                        "src": "7832:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "7840:4:15",
                        "type": ""
                      }
                    ],
                    "src": "7773:132:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7966:53:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7983:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8006:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "7988:17:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7988:24:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7976:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7976:37:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7976:37:15"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint256_to_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "7954:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "7961:3:15",
                        "type": ""
                      }
                    ],
                    "src": "7911:108:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8105:99:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8149:6:15"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8157:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8115:33:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8115:46:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8115:46:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8170:28:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8188:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8193:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8184:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8184:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "updatedPos",
                              "nodeType": "YulIdentifier",
                              "src": "8170:10:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "8078:6:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "8086:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updatedPos",
                        "nodeType": "YulTypedName",
                        "src": "8094:10:15",
                        "type": ""
                      }
                    ],
                    "src": "8025:179:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8285:38:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "8295:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "8307:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8312:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8303:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8303:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "next",
                              "nodeType": "YulIdentifier",
                              "src": "8295:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "ptr",
                        "nodeType": "YulTypedName",
                        "src": "8272:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "next",
                        "nodeType": "YulTypedName",
                        "src": "8280:4:15",
                        "type": ""
                      }
                    ],
                    "src": "8210:113:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8483:608:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "8493:68:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8555:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8507:47:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8507:54:15"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "8497:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8570:93:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8651:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8656:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "8577:73:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8577:86:15"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8570:3:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "8672:71:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8737:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8687:49:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8687:56:15"
                          },
                          "variables": [
                            {
                              "name": "baseRef",
                              "nodeType": "YulTypedName",
                              "src": "8676:7:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "8752:21:15",
                          "value": {
                            "name": "baseRef",
                            "nodeType": "YulIdentifier",
                            "src": "8766:7:15"
                          },
                          "variables": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulTypedName",
                              "src": "8756:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "8842:224:15",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "8856:34:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "8883:6:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "8877:5:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8877:13:15"
                                },
                                "variables": [
                                  {
                                    "name": "elementValue0",
                                    "nodeType": "YulTypedName",
                                    "src": "8860:13:15",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "8903:70:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "elementValue0",
                                      "nodeType": "YulIdentifier",
                                      "src": "8954:13:15"
                                    },
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "8969:3:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "8910:43:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8910:63:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8903:3:15"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "8986:70:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "9049:6:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8996:52:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8996:60:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "srcPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8986:6:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "8804:1:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8807:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "8801:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8801:13:15"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "8815:18:15",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "8817:14:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8826:1:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8829:1:15",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8822:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8822:9:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "8817:1:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "8786:14:15",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "8788:10:15",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8797:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulTypedName",
                                    "src": "8792:1:15",
                                    "type": ""
                                  }
                                ]
                              }
                            ]
                          },
                          "src": "8782:284:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9075:10:15",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9082:3:15"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "9075:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "8462:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "8469:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "8478:3:15",
                        "type": ""
                      }
                    ],
                    "src": "8359:732:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9323:408:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "9333:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9345:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9356:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9341:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9341:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9333:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9380:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9391:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9376:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9376:17:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9399:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9405:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "9395:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9395:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9369:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9369:47:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9369:47:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9425:116:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "9527:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "9536:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "9433:93:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9433:108:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9425:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9562:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9573:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9558:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9558:18:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9582:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9588:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "9578:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9578:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9551:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9551:48:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9551:48:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9608:116:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "9710:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "9719:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "9616:93:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9616:108:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9608:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "9287:9:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "9299:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "9307:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "9318:4:15",
                        "type": ""
                      }
                    ],
                    "src": "9097:634:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9795:40:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "9806:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9822:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "9816:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9816:12:15"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9806:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "9778:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "9788:6:15",
                        "type": ""
                      }
                    ],
                    "src": "9737:98:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9936:73:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9953:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "9958:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9946:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9946:19:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9946:19:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9974:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9993:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9998:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9989:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9989:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "9974:11:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "9908:3:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "9913:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "9924:11:15",
                        "type": ""
                      }
                    ],
                    "src": "9841:168:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10077:184:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10087:10:15",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10096:1:15",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "10091:1:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10156:63:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "10181:3:15"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "10186:1:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10177:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10177:11:15"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "10200:3:15"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "10205:1:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "10196:3:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10196:11:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "10190:5:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10190:18:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "10170:6:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10170:39:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10170:39:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "10117:1:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10120:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10114:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10114:13:15"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "10128:19:15",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "10130:15:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10139:1:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10142:2:15",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10135:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10135:10:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "10130:1:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "10110:3:15",
                            "statements": []
                          },
                          "src": "10106:113:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "10239:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10244:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10235:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10235:16:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10253:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10228:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10228:27:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10228:27:15"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory_with_cleanup",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "10059:3:15",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "10064:3:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "10069:6:15",
                        "type": ""
                      }
                    ],
                    "src": "10015:246:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10315:54:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10325:38:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10343:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10350:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10339:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10339:14:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10359:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10355:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10355:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10335:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10335:28:15"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "10325:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "round_up_to_mul_of_32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "10298:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "10308:6:15",
                        "type": ""
                      }
                    ],
                    "src": "10267:102:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10465:283:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10475:52:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10521:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_bytes_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10489:31:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10489:38:15"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "10479:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10536:77:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10601:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10606:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "10543:57:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10543:70:15"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "10536:3:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10661:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10668:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10657:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10657:16:15"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10675:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10680:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "10622:34:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10622:65:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10622:65:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10696:46:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10707:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10734:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "10712:21:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10712:29:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10703:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10703:39:15"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "10696:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "10446:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "10453:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "10461:3:15",
                        "type": ""
                      }
                    ],
                    "src": "10375:373:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10982:523:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10992:27:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11004:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11015:3:15",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11000:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11000:19:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10992:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "11073:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11086:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11097:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11082:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11082:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11029:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11029:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11029:71:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "11154:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11167:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11178:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11163:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11163:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11110:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11110:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11110:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "11236:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11249:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11260:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11245:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11245:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11192:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11192:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11192:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "11318:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11331:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11342:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11327:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11327:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11274:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11274:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11274:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11367:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11378:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11363:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11363:19:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "11388:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11394:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "11384:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11384:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11356:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11356:49:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11356:49:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11414:84:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "11484:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "11493:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11422:61:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11422:76:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "11414:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10922:9:15",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "10934:6:15",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "10942:6:15",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "10950:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "10958:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "10966:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10977:4:15",
                        "type": ""
                      }
                    ],
                    "src": "10754:751:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11551:35:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "11561:19:15",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11577:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "11571:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11571:9:15"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11561:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "allocate_unbounded",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "11544:6:15",
                        "type": ""
                      }
                    ],
                    "src": "11511:75:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11681:28:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11698:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11701:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "11691:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11691:12:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11691:12:15"
                        }
                      ]
                    },
                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    "nodeType": "YulFunctionDefinition",
                    "src": "11592:117:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11804:28:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11821:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11824:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "11814:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11814:12:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11814:12:15"
                        }
                      ]
                    },
                    "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                    "nodeType": "YulFunctionDefinition",
                    "src": "11715:117:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11882:105:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "11892:89:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11907:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11914:66:15",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11903:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11903:78:15"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "11892:7:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "11864:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "11874:7:15",
                        "type": ""
                      }
                    ],
                    "src": "11838:149:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12035:78:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "12091:16:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12100:1:15",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12103:1:15",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "12093:6:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12093:12:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "12093:12:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12058:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12082:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes4",
                                      "nodeType": "YulIdentifier",
                                      "src": "12065:16:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12065:23:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "12055:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12055:34:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12048:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12048:42:15"
                          },
                          "nodeType": "YulIf",
                          "src": "12045:62:15"
                        }
                      ]
                    },
                    "name": "validator_revert_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "12028:5:15",
                        "type": ""
                      }
                    ],
                    "src": "11993:120:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12181:79:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12191:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12206:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "12200:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12200:13:15"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "12191:5:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12248:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "12222:25:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12222:32:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12222:32:15"
                        }
                      ]
                    },
                    "name": "abi_decode_t_bytes4_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "12159:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "12167:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "12175:5:15",
                        "type": ""
                      }
                    ],
                    "src": "12119:141:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12342:273:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "12388:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "12390:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12390:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "12390:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "12363:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12372:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "12359:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12359:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12384:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "12355:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12355:32:15"
                          },
                          "nodeType": "YulIf",
                          "src": "12352:119:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "12481:127:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12496:15:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12510:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "12500:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12525:73:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12570:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "12581:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12566:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12566:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "12590:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes4_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "12535:30:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12535:63:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "12525:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes4_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "12312:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "12323:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "12335:6:15",
                        "type": ""
                      }
                    ],
                    "src": "12266:349:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12949:725:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12959:27:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12971:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12982:3:15",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12967:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12967:19:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "12959:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "13040:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13053:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13064:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13049:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13049:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "12996:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12996:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12996:71:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "13121:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13134:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13145:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13130:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13130:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13077:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13077:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13077:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13170:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13181:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13166:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13166:18:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13190:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13196:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "13186:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13186:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13159:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13159:48:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13159:48:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13216:116:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "13318:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "13327:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13224:93:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13224:108:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13216:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13353:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13364:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13349:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13349:18:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13373:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13379:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "13369:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13369:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13342:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13342:48:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13342:48:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13399:116:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "13501:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "13510:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13407:93:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13407:108:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13399:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13536:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13547:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13532:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13532:19:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13557:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13563:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "13553:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13553:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13525:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13525:49:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13525:49:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13583:84:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "13653:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "13662:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13591:61:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13591:76:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13583:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "12889:9:15",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "12901:6:15",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "12909:6:15",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "12917:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "12925:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "12933:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "12944:4:15",
                        "type": ""
                      }
                    ],
                    "src": "12621:1053:15"
                  }
                ]
              },
              "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
              "id": 15,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "60806040523480156200001157600080fd5b50604051806060016040528060278152602001620032b0602791396200003d816200011560201b60201c565b506200006a336000670de0b6b3a7640000604051806020016040528060008152506200012a60201b60201c565b6200009a3360016b033b2e3c9fd0803ce8000000604051806020016040528060008152506200012a60201b60201c565b620000bf3360026001604051806020016040528060008152506200012a60201b60201c565b620000e7336003633b9aca00604051806020016040528060008152506200012a60201b60201c565b6200010f336004633b9aca00604051806020016040528060008152506200012a60201b60201c565b62001265565b806002908162000126919062000ccd565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036200019f5760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000196919062000df9565b60405180910390fd5b600080620001b48585620001d660201b60201c565b91509150620001ce6000878484876200020660201b60201c565b505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6200021a85858585620002df60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620002d857600062000261620006b160201b60201c565b90506001845103620002bf57600062000285600086620006b960201b90919060201c565b905060006200029f600086620006b960201b90919060201c565b9050620002b7838989858589620006cd60201b60201c565b5050620002d6565b620002d58187878787876200089060201b60201c565b5b505b5050505050565b80518251146200032c57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016200032392919062000e27565b60405180910390fd5b60006200033e620006b160201b60201c565b905060005b835181101562000562576000620003648286620006b960201b90919060201c565b905060006200037d8386620006b960201b90919060201c565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614620004ae57600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156200045657888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016200044d949392919062000e54565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146200054c578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000544919062000ed0565b925050819055505b5050806200055a9062000f0b565b905062000343565b5060018351036200062957600062000585600085620006b960201b90919060201c565b905060006200059f600085620006b960201b90919060201c565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516200061992919062000e27565b60405180910390a45050620006aa565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051620006a192919062001026565b60405180910390a45b5050505050565b600033905090565b600060208202602084010151905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111562000888578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040162000731959493929190620010fb565b6020604051808303816000875af19250505080156200077057506040513d601f19601f820116820180604052508101906200076d9190620011c1565b60015b620007fa573d8060008114620007a3576040519150601f19603f3d011682016040523d82523d6000602084013e620007a8565b606091505b506000815103620007f257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401620007e9919062000df9565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146200088657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016200087d919062000df9565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111562000a4b578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401620008f4959493929190620011f3565b6020604051808303816000875af19250505080156200093357506040513d601f19601f82011682018060405250810190620009309190620011c1565b60015b620009bd573d806000811462000966576040519150601f19603f3d011682016040523d82523d6000602084013e6200096b565b606091505b506000815103620009b557846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401620009ac919062000df9565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161462000a4957846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000a40919062000df9565b60405180910390fd5b505b505050505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000ad557607f821691505b60208210810362000aeb5762000aea62000a8d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000b557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000b16565b62000b61868362000b16565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000bae62000ba862000ba28462000b79565b62000b83565b62000b79565b9050919050565b6000819050919050565b62000bca8362000b8d565b62000be262000bd98262000bb5565b84845462000b23565b825550505050565b600090565b62000bf962000bea565b62000c0681848462000bbf565b505050565b5b8181101562000c2e5762000c2260008262000bef565b60018101905062000c0c565b5050565b601f82111562000c7d5762000c478162000af1565b62000c528462000b06565b8101602085101562000c62578190505b62000c7a62000c718562000b06565b83018262000c0b565b50505b505050565b600082821c905092915050565b600062000ca26000198460080262000c82565b1980831691505092915050565b600062000cbd838362000c8f565b9150826002028217905092915050565b62000cd88262000a53565b67ffffffffffffffff81111562000cf45762000cf362000a5e565b5b62000d00825462000abc565b62000d0d82828562000c32565b600060209050601f83116001811462000d45576000841562000d30578287015190505b62000d3c858262000caf565b86555062000dac565b601f19841662000d558662000af1565b60005b8281101562000d7f5784890151825560018201915060208501945060208101905062000d58565b8683101562000d9f578489015162000d9b601f89168262000c8f565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000de18262000db4565b9050919050565b62000df38162000dd4565b82525050565b600060208201905062000e10600083018462000de8565b92915050565b62000e218162000b79565b82525050565b600060408201905062000e3e600083018562000e16565b62000e4d602083018462000e16565b9392505050565b600060808201905062000e6b600083018762000de8565b62000e7a602083018662000e16565b62000e89604083018562000e16565b62000e98606083018462000e16565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000edd8262000b79565b915062000eea8362000b79565b925082820190508082111562000f055762000f0462000ea1565b5b92915050565b600062000f188262000b79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000f4d5762000f4c62000ea1565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b62000f8f8162000b79565b82525050565b600062000fa3838362000f84565b60208301905092915050565b6000602082019050919050565b600062000fc98262000f58565b62000fd5818562000f63565b935062000fe28362000f74565b8060005b838110156200101957815162000ffd888262000f95565b97506200100a8362000faf565b92505060018101905062000fe6565b5085935050505092915050565b6000604082019050818103600083015262001042818562000fbc565b9050818103602083015262001058818462000fbc565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200109d57808201518184015260208101905062001080565b60008484015250505050565b6000601f19601f8301169050919050565b6000620010c78262001061565b620010d381856200106c565b9350620010e58185602086016200107d565b620010f081620010a9565b840191505092915050565b600060a08201905062001112600083018862000de8565b62001121602083018762000de8565b62001130604083018662000e16565b6200113f606083018562000e16565b8181036080830152620011538184620010ba565b90509695505050505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6200119b8162001164565b8114620011a757600080fd5b50565b600081519050620011bb8162001190565b92915050565b600060208284031215620011da57620011d96200115f565b5b6000620011ea84828501620011aa565b91505092915050565b600060a0820190506200120a600083018862000de8565b62001219602083018762000de8565b81810360408301526200122d818662000fbc565b9050818103606083015262001243818562000fbc565b90508181036080830152620012598184620010ba565b90509695505050505050565b61203b80620012756000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063d562e20411610066578063d562e20414610225578063e3e55f0814610243578063e985e9c514610261578063f242432a14610291576100ce565b80634e1273f4146101bb5780635b2725ed146101eb578063a22cb46514610209576100ce565b8062fdd58e146100d357806301ffc9a7146101035780630e89341c1461013357806313dc989f146101635780632eb2c2d6146101815780633e4bee381461019d575b600080fd5b6100ed60048036038101906100e8919061144c565b6102ad565b6040516100fa919061149b565b60405180910390f35b61011d6004803603810190610118919061150e565b610307565b60405161012a9190611556565b60405180910390f35b61014d60048036038101906101489190611571565b6103e9565b60405161015a919061162e565b60405180910390f35b61016b61047d565b604051610178919061149b565b60405180910390f35b61019b6004803603810190610196919061184d565b610482565b005b6101a561052a565b6040516101b2919061149b565b60405180910390f35b6101d560048036038101906101d091906119df565b61052f565b6040516101e29190611b15565b60405180910390f35b6101f361063e565b604051610200919061149b565b60405180910390f35b610223600480360381019061021e9190611b63565b610643565b005b61022d610659565b60405161023a919061149b565b60405180910390f35b61024b61065e565b604051610258919061149b565b60405180910390f35b61027b60048036038101906102769190611ba3565b610663565b6040516102889190611556565b60405180910390f35b6102ab60048036038101906102a69190611be3565b6106f7565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d257507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e257506103e18261079f565b5b9050919050565b6060600280546103f890611ca9565b80601f016020809104026020016040519081016040528092919081815260200182805461042490611ca9565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b50505050509050919050565b600381565b600061048c610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104d157506104cf8682610663565b155b156105155780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161050c929190611ce9565b60405180910390fd5b6105228686868686610811565b505050505050565b600081565b6060815183511461057b57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610572929190611d12565b60405180910390fd5b6000835167ffffffffffffffff81111561059857610597611655565b5b6040519080825280602002602001820160405280156105c65781602001602082028036833780820191505090505b50905060005b8451811015610633576106036105eb828761090990919063ffffffff16565b6105fe838761091d90919063ffffffff16565b6102ad565b82828151811061061657610615611d3b565b5b6020026020010181815250508061062c90611d99565b90506105cc565b508091505092915050565b600481565b61065561064e610809565b8383610931565b5050565b600281565b600181565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610701610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561074657506107448682610663565b155b1561078a5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610781929190611ce9565b60405180910390fd5b6107978686868686610aa1565b505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108835760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161087a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108f55760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108ec9190611de1565b60405180910390fd5b6109028585858585610bac565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a35760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161099a9190611de1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a949190611556565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b135760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b0a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b855760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b7c9190611de1565b60405180910390fd5b600080610b928585610c5e565b91509150610ba38787848487610bac565b50505050505050565b610bb885858585610c8e565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610c57576000610bf6610809565b90506001845103610c46576000610c1760008661091d90919063ffffffff16565b90506000610c2f60008661091d90919063ffffffff16565b9050610c3f83898985858961103c565b5050610c55565b610c548187878787876111f0565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610cd857815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ccf929190611d12565b60405180910390fd5b6000610ce2610809565b905060005b8351811015610ef7576000610d05828661091d90919063ffffffff16565b90506000610d1c838661091d90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610e4957600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610df157888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610de89493929190611dfc565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610ee4578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610edc9190611e41565b925050819055505b505080610ef090611d99565b9050610ce7565b506001835103610fb6576000610f1760008561091d90919063ffffffff16565b90506000610f2f60008561091d90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610fa7929190611d12565b60405180910390a45050611035565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161102c929190611e75565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156111e8578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161109d959493929190611f01565b6020604051808303816000875af19250505080156110d957506040513d601f19601f820116820180604052508101906110d69190611f70565b60015b61115d573d8060008114611109576040519150601f19603f3d011682016040523d82523d6000602084013e61110e565b606091505b50600081510361115557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161114c9190611de1565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111dd9190611de1565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561139c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611251959493929190611f9d565b6020604051808303816000875af192505050801561128d57506040513d601f19601f8201168201806040525081019061128a9190611f70565b60015b611311573d80600081146112bd576040519150601f19603f3d011682016040523d82523d6000602084013e6112c2565b606091505b50600081510361130957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113009190611de1565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461139a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113919190611de1565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113e3826113b8565b9050919050565b6113f3816113d8565b81146113fe57600080fd5b50565b600081359050611410816113ea565b92915050565b6000819050919050565b61142981611416565b811461143457600080fd5b50565b60008135905061144681611420565b92915050565b60008060408385031215611463576114626113ae565b5b600061147185828601611401565b925050602061148285828601611437565b9150509250929050565b61149581611416565b82525050565b60006020820190506114b0600083018461148c565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114eb816114b6565b81146114f657600080fd5b50565b600081359050611508816114e2565b92915050565b600060208284031215611524576115236113ae565b5b6000611532848285016114f9565b91505092915050565b60008115159050919050565b6115508161153b565b82525050565b600060208201905061156b6000830184611547565b92915050565b600060208284031215611587576115866113ae565b5b600061159584828501611437565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115d85780820151818401526020810190506115bd565b60008484015250505050565b6000601f19601f8301169050919050565b60006116008261159e565b61160a81856115a9565b935061161a8185602086016115ba565b611623816115e4565b840191505092915050565b6000602082019050818103600083015261164881846115f5565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61168d826115e4565b810181811067ffffffffffffffff821117156116ac576116ab611655565b5b80604052505050565b60006116bf6113a4565b90506116cb8282611684565b919050565b600067ffffffffffffffff8211156116eb576116ea611655565b5b602082029050602081019050919050565b600080fd5b600061171461170f846116d0565b6116b5565b90508083825260208201905060208402830185811115611737576117366116fc565b5b835b81811015611760578061174c8882611437565b845260208401935050602081019050611739565b5050509392505050565b600082601f83011261177f5761177e611650565b5b813561178f848260208601611701565b91505092915050565b600080fd5b600067ffffffffffffffff8211156117b8576117b7611655565b5b6117c1826115e4565b9050602081019050919050565b82818337600083830152505050565b60006117f06117eb8461179d565b6116b5565b90508281526020810184848401111561180c5761180b611798565b5b6118178482856117ce565b509392505050565b600082601f83011261183457611833611650565b5b81356118448482602086016117dd565b91505092915050565b600080600080600060a08688031215611869576118686113ae565b5b600061187788828901611401565b955050602061188888828901611401565b945050604086013567ffffffffffffffff8111156118a9576118a86113b3565b5b6118b58882890161176a565b935050606086013567ffffffffffffffff8111156118d6576118d56113b3565b5b6118e28882890161176a565b925050608086013567ffffffffffffffff811115611903576119026113b3565b5b61190f8882890161181f565b9150509295509295909350565b600067ffffffffffffffff82111561193757611936611655565b5b602082029050602081019050919050565b600061195b6119568461191c565b6116b5565b9050808382526020820190506020840283018581111561197e5761197d6116fc565b5b835b818110156119a757806119938882611401565b845260208401935050602081019050611980565b5050509392505050565b600082601f8301126119c6576119c5611650565b5b81356119d6848260208601611948565b91505092915050565b600080604083850312156119f6576119f56113ae565b5b600083013567ffffffffffffffff811115611a1457611a136113b3565b5b611a20858286016119b1565b925050602083013567ffffffffffffffff811115611a4157611a406113b3565b5b611a4d8582860161176a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a8c81611416565b82525050565b6000611a9e8383611a83565b60208301905092915050565b6000602082019050919050565b6000611ac282611a57565b611acc8185611a62565b9350611ad783611a73565b8060005b83811015611b08578151611aef8882611a92565b9750611afa83611aaa565b925050600181019050611adb565b5085935050505092915050565b60006020820190508181036000830152611b2f8184611ab7565b905092915050565b611b408161153b565b8114611b4b57600080fd5b50565b600081359050611b5d81611b37565b92915050565b60008060408385031215611b7a57611b796113ae565b5b6000611b8885828601611401565b9250506020611b9985828601611b4e565b9150509250929050565b60008060408385031215611bba57611bb96113ae565b5b6000611bc885828601611401565b9250506020611bd985828601611401565b9150509250929050565b600080600080600060a08688031215611bff57611bfe6113ae565b5b6000611c0d88828901611401565b9550506020611c1e88828901611401565b9450506040611c2f88828901611437565b9350506060611c4088828901611437565b925050608086013567ffffffffffffffff811115611c6157611c606113b3565b5b611c6d8882890161181f565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc157607f821691505b602082108103611cd457611cd3611c7a565b5b50919050565b611ce3816113d8565b82525050565b6000604082019050611cfe6000830185611cda565b611d0b6020830184611cda565b9392505050565b6000604082019050611d27600083018561148c565b611d34602083018461148c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611da482611416565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dd657611dd5611d6a565b5b600182019050919050565b6000602082019050611df66000830184611cda565b92915050565b6000608082019050611e116000830187611cda565b611e1e602083018661148c565b611e2b604083018561148c565b611e38606083018461148c565b95945050505050565b6000611e4c82611416565b9150611e5783611416565b9250828201905080821115611e6f57611e6e611d6a565b5b92915050565b60006040820190508181036000830152611e8f8185611ab7565b90508181036020830152611ea38184611ab7565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000611ed382611eac565b611edd8185611eb7565b9350611eed8185602086016115ba565b611ef6816115e4565b840191505092915050565b600060a082019050611f166000830188611cda565b611f236020830187611cda565b611f30604083018661148c565b611f3d606083018561148c565b8181036080830152611f4f8184611ec8565b90509695505050505050565b600081519050611f6a816114e2565b92915050565b600060208284031215611f8657611f856113ae565b5b6000611f9484828501611f5b565b91505092915050565b600060a082019050611fb26000830188611cda565b611fbf6020830187611cda565b8181036040830152611fd18186611ab7565b90508181036060830152611fe58185611ab7565b90508181036080830152611ff98184611ec8565b9050969550505050505056fea2646970667358221220685abd9d40300b98b3e3c754e946b49782ed1825c4e8366f2cd49a37e3302fe964736f6c6343000814003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x32B0 PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x3D DUP2 PUSH3 0x115 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x6A CALLER PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x12A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9A CALLER PUSH1 0x1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x12A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBF CALLER PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x12A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE7 CALLER PUSH1 0x3 PUSH4 0x3B9ACA00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x12A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10F CALLER PUSH1 0x4 PUSH4 0x3B9ACA00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x12A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1265 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x126 SWAP2 SWAP1 PUSH3 0xCCD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x19F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x196 SWAP2 SWAP1 PUSH3 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1B4 DUP6 DUP6 PUSH3 0x1D6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH3 0x1CE PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH3 0x206 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x21A DUP6 DUP6 DUP6 DUP6 PUSH3 0x2DF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x2D8 JUMPI PUSH1 0x0 PUSH3 0x261 PUSH3 0x6B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH3 0x2BF JUMPI PUSH1 0x0 PUSH3 0x285 PUSH1 0x0 DUP7 PUSH3 0x6B9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x29F PUSH1 0x0 DUP7 PUSH3 0x6B9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x2B7 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH3 0x6CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x2D6 JUMP JUMPDEST PUSH3 0x2D5 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH3 0x890 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x32C JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x323 SWAP3 SWAP2 SWAP1 PUSH3 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x33E PUSH3 0x6B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x562 JUMPI PUSH1 0x0 PUSH3 0x364 DUP3 DUP7 PUSH3 0x6B9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x37D DUP4 DUP7 PUSH3 0x6B9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x4AE JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x456 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x44D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xE54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x54C JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x544 SWAP2 SWAP1 PUSH3 0xED0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH3 0x55A SWAP1 PUSH3 0xF0B JUMP JUMPDEST SWAP1 POP PUSH3 0x343 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH3 0x629 JUMPI PUSH1 0x0 PUSH3 0x585 PUSH1 0x0 DUP6 PUSH3 0x6B9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x59F PUSH1 0x0 DUP6 PUSH3 0x6B9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x619 SWAP3 SWAP2 SWAP1 PUSH3 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH3 0x6AA JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0x6A1 SWAP3 SWAP2 SWAP1 PUSH3 0x1026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0x888 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x731 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x10FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x770 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x76D SWAP2 SWAP1 PUSH3 0x11C1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x7FA JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x7A3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x7A8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH3 0x7F2 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7E9 SWAP2 SWAP1 PUSH3 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x886 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x87D SWAP2 SWAP1 PUSH3 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0xA4B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8F4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x11F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x933 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x930 SWAP2 SWAP1 PUSH3 0x11C1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x9BD JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x966 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x96B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH3 0x9B5 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9AC SWAP2 SWAP1 PUSH3 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0xA49 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA40 SWAP2 SWAP1 PUSH3 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xAD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xAEB JUMPI PUSH3 0xAEA PUSH3 0xA8D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xB55 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xB16 JUMP JUMPDEST PUSH3 0xB61 DUP7 DUP4 PUSH3 0xB16 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xBAE PUSH3 0xBA8 PUSH3 0xBA2 DUP5 PUSH3 0xB79 JUMP JUMPDEST PUSH3 0xB83 JUMP JUMPDEST PUSH3 0xB79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBCA DUP4 PUSH3 0xB8D JUMP JUMPDEST PUSH3 0xBE2 PUSH3 0xBD9 DUP3 PUSH3 0xBB5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xB23 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xBF9 PUSH3 0xBEA JUMP JUMPDEST PUSH3 0xC06 DUP2 DUP5 DUP5 PUSH3 0xBBF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xC2E JUMPI PUSH3 0xC22 PUSH1 0x0 DUP3 PUSH3 0xBEF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xC0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xC7D JUMPI PUSH3 0xC47 DUP2 PUSH3 0xAF1 JUMP JUMPDEST PUSH3 0xC52 DUP5 PUSH3 0xB06 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xC62 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xC7A PUSH3 0xC71 DUP6 PUSH3 0xB06 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xC0B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCA2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xC82 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCBD DUP4 DUP4 PUSH3 0xC8F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xCD8 DUP3 PUSH3 0xA53 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xCF4 JUMPI PUSH3 0xCF3 PUSH3 0xA5E JUMP JUMPDEST JUMPDEST PUSH3 0xD00 DUP3 SLOAD PUSH3 0xABC JUMP JUMPDEST PUSH3 0xD0D DUP3 DUP3 DUP6 PUSH3 0xC32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xD45 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xD30 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xD3C DUP6 DUP3 PUSH3 0xCAF JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xDAC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xD55 DUP7 PUSH3 0xAF1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xD7F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD58 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xD9F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xD9B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xC8F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xDE1 DUP3 PUSH3 0xDB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDF3 DUP2 PUSH3 0xDD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE10 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xE21 DUP2 PUSH3 0xB79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xE3E PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xE16 JUMP JUMPDEST PUSH3 0xE4D PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xE16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0xE6B PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0xDE8 JUMP JUMPDEST PUSH3 0xE7A PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0xE16 JUMP JUMPDEST PUSH3 0xE89 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0xE16 JUMP JUMPDEST PUSH3 0xE98 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0xE16 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xEDD DUP3 PUSH3 0xB79 JUMP JUMPDEST SWAP2 POP PUSH3 0xEEA DUP4 PUSH3 0xB79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xF05 JUMPI PUSH3 0xF04 PUSH3 0xEA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF18 DUP3 PUSH3 0xB79 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0xF4D JUMPI PUSH3 0xF4C PUSH3 0xEA1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF8F DUP2 PUSH3 0xB79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFA3 DUP4 DUP4 PUSH3 0xF84 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFC9 DUP3 PUSH3 0xF58 JUMP JUMPDEST PUSH3 0xFD5 DUP2 DUP6 PUSH3 0xF63 JUMP JUMPDEST SWAP4 POP PUSH3 0xFE2 DUP4 PUSH3 0xF74 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1019 JUMPI DUP2 MLOAD PUSH3 0xFFD DUP9 DUP3 PUSH3 0xF95 JUMP JUMPDEST SWAP8 POP PUSH3 0x100A DUP4 PUSH3 0xFAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xFE6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1042 DUP2 DUP6 PUSH3 0xFBC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x1058 DUP2 DUP5 PUSH3 0xFBC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x109D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1080 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10C7 DUP3 PUSH3 0x1061 JUMP JUMPDEST PUSH3 0x10D3 DUP2 DUP6 PUSH3 0x106C JUMP JUMPDEST SWAP4 POP PUSH3 0x10E5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x107D JUMP JUMPDEST PUSH3 0x10F0 DUP2 PUSH3 0x10A9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1112 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xDE8 JUMP JUMPDEST PUSH3 0x1121 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xDE8 JUMP JUMPDEST PUSH3 0x1130 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xE16 JUMP JUMPDEST PUSH3 0x113F PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xE16 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x1153 DUP2 DUP5 PUSH3 0x10BA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x119B DUP2 PUSH3 0x1164 JUMP JUMPDEST DUP2 EQ PUSH3 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x11BB DUP2 PUSH3 0x1190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x11DA JUMPI PUSH3 0x11D9 PUSH3 0x115F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11EA DUP5 DUP3 DUP6 ADD PUSH3 0x11AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x120A PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xDE8 JUMP JUMPDEST PUSH3 0x1219 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xDE8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x122D DUP2 DUP7 PUSH3 0xFBC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x1243 DUP2 DUP6 PUSH3 0xFBC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x1259 DUP2 DUP5 PUSH3 0x10BA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x203B DUP1 PUSH3 0x1275 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD562E204 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD562E204 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xE3E55F08 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x291 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x5B2725ED EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x209 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x13DC989F EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x3E4BEE38 EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x144C JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x150E JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3D2 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3E2 JUMPI POP PUSH2 0x3E1 DUP3 PUSH2 0x79F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x471 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x446 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x471 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x454 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48C PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4D1 JUMPI POP PUSH2 0x4CF DUP7 DUP3 PUSH2 0x663 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x515 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP3 SWAP2 SWAP1 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x522 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x811 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x57B JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x572 SWAP3 SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x1655 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x633 JUMPI PUSH2 0x603 PUSH2 0x5EB DUP3 DUP8 PUSH2 0x909 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5FE DUP4 DUP8 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x1D3B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x62C SWAP1 PUSH2 0x1D99 JUMP JUMPDEST SWAP1 POP PUSH2 0x5CC JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x655 PUSH2 0x64E PUSH2 0x809 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x931 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x701 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI POP PUSH2 0x744 DUP7 DUP3 PUSH2 0x663 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x78A JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x797 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAA1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x883 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x902 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xBAC JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB13 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB85 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB92 DUP6 DUP6 PUSH2 0xC5E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xBA3 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xBAC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBB8 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC57 JUMPI PUSH1 0x0 PUSH2 0xBF6 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xC46 JUMPI PUSH1 0x0 PUSH2 0xC17 PUSH1 0x0 DUP7 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC2F PUSH1 0x0 DUP7 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC3F DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x103C JUMP JUMPDEST POP POP PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xC54 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xCD8 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCF SWAP3 SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCE2 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x0 PUSH2 0xD05 DUP3 DUP7 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD1C DUP4 DUP7 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDF1 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE4 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0xEF0 SWAP1 PUSH2 0x1D99 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE7 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0xFB6 JUMPI PUSH1 0x0 PUSH2 0xF17 PUSH1 0x0 DUP6 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF2F PUSH1 0x0 DUP6 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xFA7 SWAP3 SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1035 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x102C SWAP3 SWAP2 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x11E8 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D6 SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x115D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1109 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x110E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1155 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114C SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11E6 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x139C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1251 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x128D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128A SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1311 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1309 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1300 SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x139A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1391 SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E3 DUP3 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F3 DUP2 PUSH2 0x13D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1410 DUP2 PUSH2 0x13EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1429 DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP2 EQ PUSH2 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1446 DUP2 PUSH2 0x1420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1471 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1482 DUP6 DUP3 DUP7 ADD PUSH2 0x1437 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1495 DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EB DUP2 PUSH2 0x14B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1508 DUP2 PUSH2 0x14E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1524 JUMPI PUSH2 0x1523 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1532 DUP5 DUP3 DUP6 ADD PUSH2 0x14F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x153B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x1586 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1595 DUP5 DUP3 DUP6 ADD PUSH2 0x1437 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15BD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1600 DUP3 PUSH2 0x159E JUMP JUMPDEST PUSH2 0x160A DUP2 DUP6 PUSH2 0x15A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x161A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x1623 DUP2 PUSH2 0x15E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1648 DUP2 DUP5 PUSH2 0x15F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x168D DUP3 PUSH2 0x15E4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16AC JUMPI PUSH2 0x16AB PUSH2 0x1655 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x16CB DUP3 DUP3 PUSH2 0x1684 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x1655 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1714 PUSH2 0x170F DUP5 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1737 JUMPI PUSH2 0x1736 PUSH2 0x16FC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1760 JUMPI DUP1 PUSH2 0x174C DUP9 DUP3 PUSH2 0x1437 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1739 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x1650 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x178F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1701 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17B8 JUMPI PUSH2 0x17B7 PUSH2 0x1655 JUMP JUMPDEST JUMPDEST PUSH2 0x17C1 DUP3 PUSH2 0x15E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F0 PUSH2 0x17EB DUP5 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x180C JUMPI PUSH2 0x180B PUSH2 0x1798 JUMP JUMPDEST JUMPDEST PUSH2 0x1817 DUP5 DUP3 DUP6 PUSH2 0x17CE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1834 JUMPI PUSH2 0x1833 PUSH2 0x1650 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1844 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1869 JUMPI PUSH2 0x1868 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1877 DUP9 DUP3 DUP10 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1888 DUP9 DUP3 DUP10 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18A9 JUMPI PUSH2 0x18A8 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x18B5 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D6 JUMPI PUSH2 0x18D5 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x18E2 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x190F DUP9 DUP3 DUP10 ADD PUSH2 0x181F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x1655 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195B PUSH2 0x1956 DUP5 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x16FC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19A7 JUMPI DUP1 PUSH2 0x1993 DUP9 DUP3 PUSH2 0x1401 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1980 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x1650 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19D6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1948 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A14 JUMPI PUSH2 0x1A13 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x1A20 DUP6 DUP3 DUP7 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A40 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x1A4D DUP6 DUP3 DUP7 ADD PUSH2 0x176A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8C DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9E DUP4 DUP4 PUSH2 0x1A83 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC2 DUP3 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x1ACC DUP2 DUP6 PUSH2 0x1A62 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AD7 DUP4 PUSH2 0x1A73 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B08 JUMPI DUP2 MLOAD PUSH2 0x1AEF DUP9 DUP3 PUSH2 0x1A92 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AFA DUP4 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ADB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2F DUP2 DUP5 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B40 DUP2 PUSH2 0x153B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B5D DUP2 PUSH2 0x1B37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7A JUMPI PUSH2 0x1B79 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B88 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B99 DUP6 DUP3 DUP7 ADD PUSH2 0x1B4E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BC8 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BD9 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C0D DUP9 DUP3 DUP10 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C1E DUP9 DUP3 DUP10 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1C2F DUP9 DUP3 DUP10 ADD PUSH2 0x1437 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1C40 DUP9 DUP3 DUP10 ADD PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C61 JUMPI PUSH2 0x1C60 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x1C6D DUP9 DUP3 DUP10 ADD PUSH2 0x181F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CC1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CD4 JUMPI PUSH2 0x1CD3 PUSH2 0x1C7A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE3 DUP2 PUSH2 0x13D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CFE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1D0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CDA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D27 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1D34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DA4 DUP3 PUSH2 0x1416 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DD6 JUMPI PUSH2 0x1DD5 PUSH2 0x1D6A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E11 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1E1E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1E2B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1E38 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4C DUP3 PUSH2 0x1416 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E57 DUP4 PUSH2 0x1416 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x1D6A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E8F DUP2 DUP6 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1EA3 DUP2 DUP5 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP3 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x1EDD DUP2 DUP6 PUSH2 0x1EB7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x1EF6 DUP2 PUSH2 0x15E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1F16 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1F23 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1F30 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1F3D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x148C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1F4F DUP2 DUP5 PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F6A DUP2 PUSH2 0x14E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F86 JUMPI PUSH2 0x1F85 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F94 DUP5 DUP3 DUP6 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1FB2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1FBF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1CDA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 DUP7 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FE5 DUP2 DUP6 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1FF9 DUP2 DUP5 PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x5ABD9D40300B98B3E3 0xC7 SLOAD 0xE9 CHAINID 0xB4 SWAP8 DUP3 0xED XOR 0x25 0xC4 0xE8 CALLDATASIZE PUSH16 0x2CD49A37E3302FE964736F6C63430008 EQ STOP CALLER PUSH9 0x747470733A2F2F6761 PUSH14 0x652E6578616D706C652F6170692F PUSH10 0x74656D2F7B69647D2E6A PUSH20 0x6F6E000000000000000000000000000000000000 ",
          "sourceMap": "118:553:14:-:0;;;358:311;;;;;;;;;;1251:62:1;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;433:37:14::1;439:10;185:1;457:8;433:37;;;;;;;;;;;::::0;:5:::1;;;:37;;:::i;:::-;480:39;486:10;225:1;506:8;480:39;;;;;;;;;;;::::0;:5:::1;;;:39;;:::i;:::-;529:38;535:10;271:1;561;529:38;;;;;;;;;;;::::0;:5:::1;;;:38;;:::i;:::-;577:37;583:10;310:1;602:7;577:37;;;;;;;;;;;::::0;:5:::1;;;:37;;:::i;:::-;624:38;630:10;350:1;650:7;624:38;;;;;;;;;;;::::0;:5:::1;;;:38;;:::i;:::-;118:553:::0;;10282:86:1;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;10746:346::-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;;;:29;;:::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;;;:61;;:::i;:::-;10828:264;;10746:346;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;;;:30;;:::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;;;:12;;:::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;;;:67;;:::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;;;:74;;:::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;;;:12;;:::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;:::i;:::-;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;4204:197:7:-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;13761:974:1:-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:118::-;5907:24;5925:5;5907:24;:::i;:::-;5902:3;5895:37;5820:118;;:::o;5944:332::-;6065:4;6103:2;6092:9;6088:18;6080:26;;6116:71;6184:1;6173:9;6169:17;6160:6;6116:71;:::i;:::-;6197:72;6265:2;6254:9;6250:18;6241:6;6197:72;:::i;:::-;5944:332;;;;;:::o;6282:553::-;6459:4;6497:3;6486:9;6482:19;6474:27;;6511:71;6579:1;6568:9;6564:17;6555:6;6511:71;:::i;:::-;6592:72;6660:2;6649:9;6645:18;6636:6;6592:72;:::i;:::-;6674;6742:2;6731:9;6727:18;6718:6;6674:72;:::i;:::-;6756;6824:2;6813:9;6809:18;6800:6;6756:72;:::i;:::-;6282:553;;;;;;;:::o;6841:180::-;6889:77;6886:1;6879:88;6986:4;6983:1;6976:15;7010:4;7007:1;7000:15;7027:191;7067:3;7086:20;7104:1;7086:20;:::i;:::-;7081:25;;7120:20;7138:1;7120:20;:::i;:::-;7115:25;;7163:1;7160;7156:9;7149:16;;7184:3;7181:1;7178:10;7175:36;;;7191:18;;:::i;:::-;7175:36;7027:191;;;;:::o;7224:233::-;7263:3;7286:24;7304:5;7286:24;:::i;:::-;7277:33;;7332:66;7325:5;7322:77;7319:103;;7402:18;;:::i;:::-;7319:103;7449:1;7442:5;7438:13;7431:20;;7224:233;;;:::o;7463:114::-;7530:6;7564:5;7558:12;7548:22;;7463:114;;;:::o;7583:184::-;7682:11;7716:6;7711:3;7704:19;7756:4;7751:3;7747:14;7732:29;;7583:184;;;;:::o;7773:132::-;7840:4;7863:3;7855:11;;7893:4;7888:3;7884:14;7876:22;;7773:132;;;:::o;7911:108::-;7988:24;8006:5;7988:24;:::i;:::-;7983:3;7976:37;7911:108;;:::o;8025:179::-;8094:10;8115:46;8157:3;8149:6;8115:46;:::i;:::-;8193:4;8188:3;8184:14;8170:28;;8025:179;;;;:::o;8210:113::-;8280:4;8312;8307:3;8303:14;8295:22;;8210:113;;;:::o;8359:732::-;8478:3;8507:54;8555:5;8507:54;:::i;:::-;8577:86;8656:6;8651:3;8577:86;:::i;:::-;8570:93;;8687:56;8737:5;8687:56;:::i;:::-;8766:7;8797:1;8782:284;8807:6;8804:1;8801:13;8782:284;;;8883:6;8877:13;8910:63;8969:3;8954:13;8910:63;:::i;:::-;8903:70;;8996:60;9049:6;8996:60;:::i;:::-;8986:70;;8842:224;8829:1;8826;8822:9;8817:14;;8782:284;;;8786:14;9082:3;9075:10;;8483:608;;;8359:732;;;;:::o;9097:634::-;9318:4;9356:2;9345:9;9341:18;9333:26;;9405:9;9399:4;9395:20;9391:1;9380:9;9376:17;9369:47;9433:108;9536:4;9527:6;9433:108;:::i;:::-;9425:116;;9588:9;9582:4;9578:20;9573:2;9562:9;9558:18;9551:48;9616:108;9719:4;9710:6;9616:108;:::i;:::-;9608:116;;9097:634;;;;;:::o;9737:98::-;9788:6;9822:5;9816:12;9806:22;;9737:98;;;:::o;9841:168::-;9924:11;9958:6;9953:3;9946:19;9998:4;9993:3;9989:14;9974:29;;9841:168;;;;:::o;10015:246::-;10096:1;10106:113;10120:6;10117:1;10114:13;10106:113;;;10205:1;10200:3;10196:11;10190:18;10186:1;10181:3;10177:11;10170:39;10142:2;10139:1;10135:10;10130:15;;10106:113;;;10253:1;10244:6;10239:3;10235:16;10228:27;10077:184;10015:246;;;:::o;10267:102::-;10308:6;10359:2;10355:7;10350:2;10343:5;10339:14;10335:28;10325:38;;10267:102;;;:::o;10375:373::-;10461:3;10489:38;10521:5;10489:38;:::i;:::-;10543:70;10606:6;10601:3;10543:70;:::i;:::-;10536:77;;10622:65;10680:6;10675:3;10668:4;10661:5;10657:16;10622:65;:::i;:::-;10712:29;10734:6;10712:29;:::i;:::-;10707:3;10703:39;10696:46;;10465:283;10375:373;;;;:::o;10754:751::-;10977:4;11015:3;11004:9;11000:19;10992:27;;11029:71;11097:1;11086:9;11082:17;11073:6;11029:71;:::i;:::-;11110:72;11178:2;11167:9;11163:18;11154:6;11110:72;:::i;:::-;11192;11260:2;11249:9;11245:18;11236:6;11192:72;:::i;:::-;11274;11342:2;11331:9;11327:18;11318:6;11274:72;:::i;:::-;11394:9;11388:4;11384:20;11378:3;11367:9;11363:19;11356:49;11422:76;11493:4;11484:6;11422:76;:::i;:::-;11414:84;;10754:751;;;;;;;;:::o;11592:117::-;11701:1;11698;11691:12;11838:149;11874:7;11914:66;11907:5;11903:78;11892:89;;11838:149;;;:::o;11993:120::-;12065:23;12082:5;12065:23;:::i;:::-;12058:5;12055:34;12045:62;;12103:1;12100;12093:12;12045:62;11993:120;:::o;12119:141::-;12175:5;12206:6;12200:13;12191:22;;12222:32;12248:5;12222:32;:::i;:::-;12119:141;;;;:::o;12266:349::-;12335:6;12384:2;12372:9;12363:7;12359:23;12355:32;12352:119;;;12390:79;;:::i;:::-;12352:119;12510:1;12535:63;12590:7;12581:6;12570:9;12566:22;12535:63;:::i;:::-;12525:73;;12481:127;12266:349;;;;:::o;12621:1053::-;12944:4;12982:3;12971:9;12967:19;12959:27;;12996:71;13064:1;13053:9;13049:17;13040:6;12996:71;:::i;:::-;13077:72;13145:2;13134:9;13130:18;13121:6;13077:72;:::i;:::-;13196:9;13190:4;13186:20;13181:2;13170:9;13166:18;13159:48;13224:108;13327:4;13318:6;13224:108;:::i;:::-;13216:116;;13379:9;13373:4;13369:20;13364:2;13353:9;13349:18;13342:48;13407:108;13510:4;13501:6;13407:108;:::i;:::-;13399:116;;13563:9;13557:4;13553:20;13547:3;13536:9;13532:19;13525:49;13591:76;13662:4;13653:6;13591:76;:::i;:::-;13583:84;;12621:1053;;;;;;;;:::o;118:553:14:-;;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@GOLD_3406": {
              "entryPoint": 1322,
              "id": 3406,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@SHIELD_3418": {
              "entryPoint": 1598,
              "id": 3418,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@SILVER_3409": {
              "entryPoint": 1630,
              "id": 3409,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@SWORD_3415": {
              "entryPoint": 1149,
              "id": 3415,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@THORS_HAMMER_3412": {
              "entryPoint": 1625,
              "id": 3412,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_asSingletonArrays_1186": {
              "entryPoint": 3166,
              "id": 1186,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "@_doSafeBatchTransferAcceptanceCheck_1170": {
              "entryPoint": 4592,
              "id": 1170,
              "parameterSlots": 6,
              "returnSlots": 0
            },
            "@_doSafeTransferAcceptanceCheck_1100": {
              "entryPoint": 4156,
              "id": 1100,
              "parameterSlots": 6,
              "returnSlots": 0
            },
            "@_msgSender_1758": {
              "entryPoint": 2057,
              "id": 1758,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_safeBatchTransferFrom_799": {
              "entryPoint": 2065,
              "id": 799,
              "parameterSlots": 5,
              "returnSlots": 0
            },
            "@_safeTransferFrom_744": {
              "entryPoint": 2721,
              "id": 744,
              "parameterSlots": 5,
              "returnSlots": 0
            },
            "@_setApprovalForAll_1032": {
              "entryPoint": 2353,
              "id": 1032,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_updateWithAcceptanceCheck_678": {
              "entryPoint": 2988,
              "id": 678,
              "parameterSlots": 5,
              "returnSlots": 0
            },
            "@_update_602": {
              "entryPoint": 3214,
              "id": 602,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@balanceOfBatch_326": {
              "entryPoint": 1327,
              "id": 326,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@balanceOf_256": {
              "entryPoint": 685,
              "id": 256,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@isApprovedForAll_359": {
              "entryPoint": 1635,
              "id": 359,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@safeBatchTransferFrom_449": {
              "entryPoint": 1154,
              "id": 449,
              "parameterSlots": 5,
              "returnSlots": 0
            },
            "@safeTransferFrom_403": {
              "entryPoint": 1783,
              "id": 403,
              "parameterSlots": 5,
              "returnSlots": 0
            },
            "@setApprovalForAll_342": {
              "entryPoint": 1603,
              "id": 342,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@supportsInterface_1909": {
              "entryPoint": 1951,
              "id": 1909,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@supportsInterface_228": {
              "entryPoint": 775,
              "id": 228,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@unsafeMemoryAccess_1732": {
              "entryPoint": 2333,
              "id": 1732,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@unsafeMemoryAccess_1745": {
              "entryPoint": 2313,
              "id": 1745,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@uri_239": {
              "entryPoint": 1001,
              "id": 239,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
              "entryPoint": 6472,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 5889,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_decode_available_length_t_bytes_memory_ptr": {
              "entryPoint": 6109,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_decode_t_address": {
              "entryPoint": 5121,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_array$_t_address_$dyn_memory_ptr": {
              "entryPoint": 6577,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 5994,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bool": {
              "entryPoint": 6990,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bytes4": {
              "entryPoint": 5369,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bytes4_fromMemory": {
              "entryPoint": 8027,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bytes_memory_ptr": {
              "entryPoint": 6175,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_uint256": {
              "entryPoint": 5175,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_address": {
              "entryPoint": 7075,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
              "entryPoint": 6221,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 5
            },
            "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
              "entryPoint": 7139,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 5
            },
            "abi_decode_tuple_t_addresst_bool": {
              "entryPoint": 7011,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_uint256": {
              "entryPoint": 5196,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 6623,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes4": {
              "entryPoint": 5390,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_bytes4_fromMemory": {
              "entryPoint": 8048,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint256": {
              "entryPoint": 5489,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
              "entryPoint": 6802,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_address_to_t_address_fromStack": {
              "entryPoint": 7386,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
              "entryPoint": 6839,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_bool_to_t_bool_fromStack": {
              "entryPoint": 5447,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
              "entryPoint": 7880,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5621,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_uint256_to_t_uint256": {
              "entryPoint": 6787,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_uint256_to_t_uint256_fromStack": {
              "entryPoint": 5260,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": 7649,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
              "entryPoint": 7401,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
              "entryPoint": 8093,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
              "entryPoint": 7937,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": 7676,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
              "entryPoint": 6933,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
              "entryPoint": 7797,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
              "entryPoint": 5462,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5678,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
              "entryPoint": 5275,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": 7442,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "allocate_memory": {
              "entryPoint": 5813,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "allocate_unbounded": {
              "entryPoint": 5028,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
              "entryPoint": 6428,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 5840,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_allocation_size_t_bytes_memory_ptr": {
              "entryPoint": 6045,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 6771,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 6743,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_bytes_memory_ptr": {
              "entryPoint": 7852,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_string_memory_ptr": {
              "entryPoint": 5534,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 6826,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
              "entryPoint": 6754,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
              "entryPoint": 7863,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
              "entryPoint": 5545,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint256": {
              "entryPoint": 7745,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "cleanup_t_address": {
              "entryPoint": 5080,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_bool": {
              "entryPoint": 5435,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_bytes4": {
              "entryPoint": 5302,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint160": {
              "entryPoint": 5048,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint256": {
              "entryPoint": 5142,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "copy_calldata_to_memory_with_cleanup": {
              "entryPoint": 6094,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "copy_memory_to_memory_with_cleanup": {
              "entryPoint": 5562,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "extract_byte_array_length": {
              "entryPoint": 7337,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "finalize_allocation": {
              "entryPoint": 5764,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "increment_t_uint256": {
              "entryPoint": 7577,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "panic_error_0x11": {
              "entryPoint": 7530,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x22": {
              "entryPoint": 7290,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x32": {
              "entryPoint": 7483,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 5717,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
              "entryPoint": 5712,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
              "entryPoint": 5884,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
              "entryPoint": 6040,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
              "entryPoint": 5043,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
              "entryPoint": 5038,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "round_up_to_mul_of_32": {
              "entryPoint": 5604,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "validator_revert_t_address": {
              "entryPoint": 5098,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_bool": {
              "entryPoint": 6967,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_bytes4": {
              "entryPoint": 5346,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_uint256": {
              "entryPoint": 5152,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:23261:15",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "47:35:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "57:19:15",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "73:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "67:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "67:9:15"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "57:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "allocate_unbounded",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "40:6:15",
                        "type": ""
                      }
                    ],
                    "src": "7:75:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "177:28:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "194:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "197:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "187:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "187:12:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "187:12:15"
                        }
                      ]
                    },
                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    "nodeType": "YulFunctionDefinition",
                    "src": "88:117:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "300:28:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "317:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "320:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "310:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "310:12:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "310:12:15"
                        }
                      ]
                    },
                    "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                    "nodeType": "YulFunctionDefinition",
                    "src": "211:117:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "379:81:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "389:65:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "404:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "411:42:15",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "400:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "400:54:15"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "389:7:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint160",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "361:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "371:7:15",
                        "type": ""
                      }
                    ],
                    "src": "334:126:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "511:51:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "521:35:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "550:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "532:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "532:24:15"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "521:7:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "493:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "503:7:15",
                        "type": ""
                      }
                    ],
                    "src": "466:96:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "611:79:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "668:16:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "677:1:15",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "680:1:15",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "670:6:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "670:12:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "670:12:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "634:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "659:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "641:17:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "641:24:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "631:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "631:35:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "624:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "624:43:15"
                          },
                          "nodeType": "YulIf",
                          "src": "621:63:15"
                        }
                      ]
                    },
                    "name": "validator_revert_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "604:5:15",
                        "type": ""
                      }
                    ],
                    "src": "568:122:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "748:87:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "758:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "780:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "767:12:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "767:20:15"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "758:5:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "823:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "796:26:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "796:33:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "796:33:15"
                        }
                      ]
                    },
                    "name": "abi_decode_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "726:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "734:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "742:5:15",
                        "type": ""
                      }
                    ],
                    "src": "696:139:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "886:32:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "896:16:15",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "907:5:15"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "896:7:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "868:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "878:7:15",
                        "type": ""
                      }
                    ],
                    "src": "841:77:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "967:79:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1024:16:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1033:1:15",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1036:1:15",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1026:6:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1026:12:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1026:12:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "990:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1015:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "997:17:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "997:24:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "987:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "987:35:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "980:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "980:43:15"
                          },
                          "nodeType": "YulIf",
                          "src": "977:63:15"
                        }
                      ]
                    },
                    "name": "validator_revert_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "960:5:15",
                        "type": ""
                      }
                    ],
                    "src": "924:122:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1104:87:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1114:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1123:12:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1123:20:15"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1114:5:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1179:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1152:26:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1152:33:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1152:33:15"
                        }
                      ]
                    },
                    "name": "abi_decode_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1082:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "1090:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1098:5:15",
                        "type": ""
                      }
                    ],
                    "src": "1052:139:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1280:391:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1326:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "1328:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1328:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1328:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1301:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1310:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1297:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1297:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1322:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1293:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1293:32:15"
                          },
                          "nodeType": "YulIf",
                          "src": "1290:119:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "1419:117:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1434:15:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1448:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1438:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1463:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1498:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1509:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1494:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1494:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1518:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1473:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1473:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1463:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "1546:118:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1561:16:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1575:2:15",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1565:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1591:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1626:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1637:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1622:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1622:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1646:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1601:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1601:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1591:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1242:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1253:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1265:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1273:6:15",
                        "type": ""
                      }
                    ],
                    "src": "1197:474:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1742:53:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1759:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1782:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1764:17:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1764:24:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1752:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1752:37:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1752:37:15"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1730:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "1737:3:15",
                        "type": ""
                      }
                    ],
                    "src": "1677:118:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1899:124:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1909:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1921:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1932:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1917:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1917:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1909:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1989:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2002:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2013:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1998:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1998:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "1945:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1945:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1945:71:15"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1871:9:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1883:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "1894:4:15",
                        "type": ""
                      }
                    ],
                    "src": "1801:222:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2073:105:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2083:89:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2098:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2105:66:15",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2094:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2094:78:15"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "2083:7:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2055:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "2065:7:15",
                        "type": ""
                      }
                    ],
                    "src": "2029:149:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2226:78:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2282:16:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2291:1:15",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2294:1:15",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2284:6:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2284:12:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2284:12:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2249:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2273:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes4",
                                      "nodeType": "YulIdentifier",
                                      "src": "2256:16:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2256:23:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "2246:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2246:34:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2239:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2239:42:15"
                          },
                          "nodeType": "YulIf",
                          "src": "2236:62:15"
                        }
                      ]
                    },
                    "name": "validator_revert_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2219:5:15",
                        "type": ""
                      }
                    ],
                    "src": "2184:120:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2361:86:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2371:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2393:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2380:12:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2380:20:15"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2371:5:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2435:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "2409:25:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2409:32:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2409:32:15"
                        }
                      ]
                    },
                    "name": "abi_decode_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2339:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2347:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2355:5:15",
                        "type": ""
                      }
                    ],
                    "src": "2310:137:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2518:262:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2564:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "2566:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2566:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2566:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2539:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2548:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2535:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2535:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2560:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2531:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2531:32:15"
                          },
                          "nodeType": "YulIf",
                          "src": "2528:119:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "2657:116:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2672:15:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2686:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2676:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2701:62:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2735:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2746:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2731:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2731:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2755:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2711:19:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2711:52:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2701:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2488:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2499:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2511:6:15",
                        "type": ""
                      }
                    ],
                    "src": "2453:327:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2828:48:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2838:32:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2863:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2856:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2856:13:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2849:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2849:21:15"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "2838:7:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2810:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "2820:7:15",
                        "type": ""
                      }
                    ],
                    "src": "2786:90:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2941:50:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2958:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2978:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "2963:14:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2963:21:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2951:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2951:34:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2951:34:15"
                        }
                      ]
                    },
                    "name": "abi_encode_t_bool_to_t_bool_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2929:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "2936:3:15",
                        "type": ""
                      }
                    ],
                    "src": "2882:109:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3089:118:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3099:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3111:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3122:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3107:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3107:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3099:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3173:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3186:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3197:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3182:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3182:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bool_to_t_bool_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "3135:37:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3135:65:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3135:65:15"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3061:9:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3073:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "3084:4:15",
                        "type": ""
                      }
                    ],
                    "src": "2997:210:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3279:263:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3325:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "3327:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3327:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3327:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3300:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3309:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3296:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3296:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3321:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3292:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3292:32:15"
                          },
                          "nodeType": "YulIf",
                          "src": "3289:119:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "3418:117:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3433:15:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3447:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3437:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3462:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3497:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3508:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3493:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3493:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3517:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "3472:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3472:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3462:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3249:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3260:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3272:6:15",
                        "type": ""
                      }
                    ],
                    "src": "3213:329:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3607:40:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3618:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3634:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "3628:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3628:12:15"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3618:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3590:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "3600:6:15",
                        "type": ""
                      }
                    ],
                    "src": "3548:99:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3749:73:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3766:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3771:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3759:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3759:19:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3759:19:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3787:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3806:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3811:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3802:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3802:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "3787:11:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "3721:3:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "3726:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "3737:11:15",
                        "type": ""
                      }
                    ],
                    "src": "3653:169:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3890:184:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3900:10:15",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3909:1:15",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "3904:1:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3969:63:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "3994:3:15"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3999:1:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3990:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3990:11:15"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "4013:3:15"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "4018:1:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4009:3:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4009:11:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "4003:5:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4003:18:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "3983:6:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3983:39:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3983:39:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "3930:1:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3933:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "3927:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3927:13:15"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "3941:19:15",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "3943:15:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3952:1:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3955:2:15",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3948:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3948:10:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "3943:1:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "3923:3:15",
                            "statements": []
                          },
                          "src": "3919:113:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "4052:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4057:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4048:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4048:16:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4066:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4041:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4041:27:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4041:27:15"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory_with_cleanup",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "3872:3:15",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "3877:3:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "3882:6:15",
                        "type": ""
                      }
                    ],
                    "src": "3828:246:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4128:54:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4138:38:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4156:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4163:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4152:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4152:14:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4172:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4168:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4168:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4148:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4148:28:15"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "4138:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "round_up_to_mul_of_32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4111:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "4121:6:15",
                        "type": ""
                      }
                    ],
                    "src": "4080:102:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4280:285:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4290:53:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4337:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "4304:32:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4304:39:15"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "4294:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4352:78:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4418:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4423:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "4359:58:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4359:71:15"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4352:3:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4478:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4485:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4474:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4474:16:15"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4492:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4497:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "4439:34:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4439:65:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4439:65:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4513:46:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4524:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4551:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "4529:21:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4529:29:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4520:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4520:39:15"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "4513:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4261:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "4268:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "4276:3:15",
                        "type": ""
                      }
                    ],
                    "src": "4188:377:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4689:195:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4699:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4711:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4722:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4707:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4707:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "4699:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4746:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4757:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4742:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4742:17:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "4765:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4771:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4761:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4761:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4735:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4735:47:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4735:47:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4791:86:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4863:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "4872:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "4799:63:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4799:78:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "4791:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4661:9:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4673:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "4684:4:15",
                        "type": ""
                      }
                    ],
                    "src": "4571:313:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4979:28:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4996:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4999:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "4989:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4989:12:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4989:12:15"
                        }
                      ]
                    },
                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                    "nodeType": "YulFunctionDefinition",
                    "src": "4890:117:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5041:152:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5058:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5061:77:15",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5051:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5051:88:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5051:88:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5155:1:15",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5158:4:15",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5148:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5148:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5148:15:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5179:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5182:4:15",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "5172:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5172:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5172:15:15"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nodeType": "YulFunctionDefinition",
                    "src": "5013:180:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5242:238:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5252:58:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5274:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5304:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "5282:21:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5282:27:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5270:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5270:40:15"
                          },
                          "variables": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulTypedName",
                              "src": "5256:10:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5421:22:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "5423:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5423:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5423:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5364:10:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5376:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5361:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5361:34:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5400:10:15"
                                  },
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5412:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5397:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5397:22:15"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "5358:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5358:62:15"
                          },
                          "nodeType": "YulIf",
                          "src": "5355:88:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5459:2:15",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "5463:10:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5452:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5452:22:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5452:22:15"
                        }
                      ]
                    },
                    "name": "finalize_allocation",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "5228:6:15",
                        "type": ""
                      },
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "5236:4:15",
                        "type": ""
                      }
                    ],
                    "src": "5199:281:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5527:88:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5537:30:15",
                          "value": {
                            "arguments": [],
                            "functionName": {
                              "name": "allocate_unbounded",
                              "nodeType": "YulIdentifier",
                              "src": "5547:18:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5547:20:15"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5537:6:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5596:6:15"
                              },
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "5604:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "finalize_allocation",
                              "nodeType": "YulIdentifier",
                              "src": "5576:19:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5576:33:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5576:33:15"
                        }
                      ]
                    },
                    "name": "allocate_memory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "5511:4:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "5520:6:15",
                        "type": ""
                      }
                    ],
                    "src": "5486:129:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5703:229:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5808:22:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "5810:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5810:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5810:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5780:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5788:18:15",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "5777:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5777:30:15"
                          },
                          "nodeType": "YulIf",
                          "src": "5774:56:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5840:25:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5852:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5860:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "5848:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5848:17:15"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "5840:4:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5902:23:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "5914:4:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5920:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5910:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5910:15:15"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "5902:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "5687:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "5698:4:15",
                        "type": ""
                      }
                    ],
                    "src": "5621:311:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6027:28:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6044:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6047:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "6037:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6037:12:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6037:12:15"
                        }
                      ]
                    },
                    "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                    "nodeType": "YulFunctionDefinition",
                    "src": "5938:117:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6180:608:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6190:90:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6272:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6215:56:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6215:64:15"
                              }
                            ],
                            "functionName": {
                              "name": "allocate_memory",
                              "nodeType": "YulIdentifier",
                              "src": "6199:15:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6199:81:15"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "6190:5:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6289:16:15",
                          "value": {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "6300:5:15"
                          },
                          "variables": [
                            {
                              "name": "dst",
                              "nodeType": "YulTypedName",
                              "src": "6293:3:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "6322:5:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6329:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6315:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6315:21:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6315:21:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6345:23:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "6356:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6363:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6352:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6352:16:15"
                          },
                          "variableNames": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "6345:3:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6378:44:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6396:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6408:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6416:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "6404:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6404:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6392:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6392:30:15"
                          },
                          "variables": [
                            {
                              "name": "srcEnd",
                              "nodeType": "YulTypedName",
                              "src": "6382:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6450:103:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                                    "nodeType": "YulIdentifier",
                                    "src": "6464:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6464:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6464:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "srcEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6437:6:15"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "6445:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "6434:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6434:15:15"
                          },
                          "nodeType": "YulIf",
                          "src": "6431:122:15"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6638:144:15",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "6653:21:15",
                                "value": {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "6671:3:15"
                                },
                                "variables": [
                                  {
                                    "name": "elementPos",
                                    "nodeType": "YulTypedName",
                                    "src": "6657:10:15",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "6695:3:15"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "elementPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "6721:10:15"
                                        },
                                        {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "6733:3:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_decode_t_uint256",
                                        "nodeType": "YulIdentifier",
                                        "src": "6700:20:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6700:37:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "6688:6:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6688:50:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6688:50:15"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "6751:21:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "6762:3:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6767:4:15",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6758:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6758:14:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "6751:3:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "6591:3:15"
                              },
                              {
                                "name": "srcEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6596:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6588:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6588:15:15"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "6604:25:15",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "6606:21:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6617:3:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6622:4:15",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6613:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6613:14:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "6606:3:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "6566:21:15",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "6568:17:15",
                                "value": {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "6579:6:15"
                                },
                                "variables": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulTypedName",
                                    "src": "6572:3:15",
                                    "type": ""
                                  }
                                ]
                              }
                            ]
                          },
                          "src": "6562:220:15"
                        }
                      ]
                    },
                    "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "6150:6:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "6158:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "6166:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "6174:5:15",
                        "type": ""
                      }
                    ],
                    "src": "6078:710:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6888:293:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6937:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                    "nodeType": "YulIdentifier",
                                    "src": "6939:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6939:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6939:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "6916:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6924:4:15",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6912:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6912:17:15"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "6931:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6908:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6908:27:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6901:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6901:35:15"
                          },
                          "nodeType": "YulIf",
                          "src": "6898:122:15"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "7029:34:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7056:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "7043:12:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7043:20:15"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "7033:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7072:103:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7148:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7156:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7144:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7144:17:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7163:6:15"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "7171:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7081:62:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7081:94:15"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "7072:5:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "6866:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "6874:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "6882:5:15",
                        "type": ""
                      }
                    ],
                    "src": "6811:370:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7276:28:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7293:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7296:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "7286:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7286:12:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7286:12:15"
                        }
                      ]
                    },
                    "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                    "nodeType": "YulFunctionDefinition",
                    "src": "7187:117:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7376:241:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7481:22:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "7483:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7483:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7483:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7453:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7461:18:15",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "7450:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7450:30:15"
                          },
                          "nodeType": "YulIf",
                          "src": "7447:56:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7513:37:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7543:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "7521:21:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7521:29:15"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "7513:4:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7587:23:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "7599:4:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7605:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7595:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7595:15:15"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "7587:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_allocation_size_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "7360:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "7371:4:15",
                        "type": ""
                      }
                    ],
                    "src": "7310:307:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7687:82:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "7710:3:15"
                              },
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "7715:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7720:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "calldatacopy",
                              "nodeType": "YulIdentifier",
                              "src": "7697:12:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7697:30:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7697:30:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "7747:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7752:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7743:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7743:16:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7761:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7736:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7736:27:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7736:27:15"
                        }
                      ]
                    },
                    "name": "copy_calldata_to_memory_with_cleanup",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "7669:3:15",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "7674:3:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "7679:6:15",
                        "type": ""
                      }
                    ],
                    "src": "7623:146:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7858:340:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7868:74:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7934:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_allocation_size_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7893:40:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7893:48:15"
                              }
                            ],
                            "functionName": {
                              "name": "allocate_memory",
                              "nodeType": "YulIdentifier",
                              "src": "7877:15:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7877:65:15"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "7868:5:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "7958:5:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7965:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7951:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7951:21:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7951:21:15"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "7981:27:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "7996:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8003:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7992:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7992:16:15"
                          },
                          "variables": [
                            {
                              "name": "dst",
                              "nodeType": "YulTypedName",
                              "src": "7985:3:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "8046:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                    "nodeType": "YulIdentifier",
                                    "src": "8048:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8048:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "8048:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "8027:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8032:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8023:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8023:16:15"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "8041:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "8020:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8020:25:15"
                          },
                          "nodeType": "YulIf",
                          "src": "8017:112:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "8175:3:15"
                              },
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "8180:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8185:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "copy_calldata_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "8138:36:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8138:54:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8138:54:15"
                        }
                      ]
                    },
                    "name": "abi_decode_available_length_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "7831:3:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "7836:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "7844:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "7852:5:15",
                        "type": ""
                      }
                    ],
                    "src": "7775:423:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8278:277:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "8327:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                    "nodeType": "YulIdentifier",
                                    "src": "8329:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8329:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "8329:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8306:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8314:4:15",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8302:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8302:17:15"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "8321:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8298:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8298:27:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8291:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8291:35:15"
                          },
                          "nodeType": "YulIf",
                          "src": "8288:122:15"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "8419:34:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8446:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "8433:12:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8433:20:15"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "8423:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8462:87:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8522:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8530:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8518:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8518:17:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8537:6:15"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "8545:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_t_bytes_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8471:46:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8471:78:15"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "8462:5:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "8256:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "8264:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "8272:5:15",
                        "type": ""
                      }
                    ],
                    "src": "8217:338:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8754:1316:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "8801:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "8803:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8803:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "8803:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8775:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8784:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8771:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8771:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8796:3:15",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "8767:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8767:33:15"
                          },
                          "nodeType": "YulIf",
                          "src": "8764:120:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "8894:117:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8909:15:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8923:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "8913:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8938:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8973:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8984:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8969:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8969:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8993:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "8948:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8948:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "8938:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "9021:118:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9036:16:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9050:2:15",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "9040:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9066:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9101:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9112:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9097:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9097:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9121:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "9076:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9076:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9066:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "9149:303:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9164:46:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9195:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9206:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9191:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9191:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9178:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9178:32:15"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "9168:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9257:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "9259:77:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9259:79:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9259:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9229:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9237:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9226:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9226:30:15"
                              },
                              "nodeType": "YulIf",
                              "src": "9223:117:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9354:88:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9414:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9425:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9410:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9410:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9434:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9364:45:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9364:78:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "9354:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "9462:303:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9477:46:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9508:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9519:2:15",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9504:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9504:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9491:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9491:32:15"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "9481:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9570:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "9572:77:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9572:79:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9572:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9542:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9550:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9539:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9539:30:15"
                              },
                              "nodeType": "YulIf",
                              "src": "9536:117:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9667:88:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9727:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9738:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9723:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9723:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9747:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9677:45:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9677:78:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "9667:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "9775:288:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9790:47:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9821:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9832:3:15",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9817:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9817:19:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9804:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9804:33:15"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "9794:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9884:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "9886:77:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9886:79:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9886:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9856:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9864:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9853:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9853:30:15"
                              },
                              "nodeType": "YulIf",
                              "src": "9850:117:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9981:72:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10025:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10036:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10021:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10021:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "10045:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9991:29:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9991:62:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "9981:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8692:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "8703:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "8715:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "8723:6:15",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "8731:6:15",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "8739:6:15",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "8747:6:15",
                        "type": ""
                      }
                    ],
                    "src": "8561:1509:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10158:229:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10263:22:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "10265:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10265:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10265:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10235:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10243:18:15",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "10232:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10232:30:15"
                          },
                          "nodeType": "YulIf",
                          "src": "10229:56:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10295:25:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10307:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10315:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "10303:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10303:17:15"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10295:4:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10357:23:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "10369:4:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10375:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10365:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10365:15:15"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10357:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "10142:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "10153:4:15",
                        "type": ""
                      }
                    ],
                    "src": "10076:311:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10512:608:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10522:90:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10604:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "10547:56:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10547:64:15"
                              }
                            ],
                            "functionName": {
                              "name": "allocate_memory",
                              "nodeType": "YulIdentifier",
                              "src": "10531:15:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10531:81:15"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "10522:5:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10621:16:15",
                          "value": {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "10632:5:15"
                          },
                          "variables": [
                            {
                              "name": "dst",
                              "nodeType": "YulTypedName",
                              "src": "10625:3:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "10654:5:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10661:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10647:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10647:21:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10647:21:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10677:23:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "10688:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10695:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10684:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10684:16:15"
                          },
                          "variableNames": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "10677:3:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10710:44:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10728:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10740:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10748:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10736:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10736:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10724:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10724:30:15"
                          },
                          "variables": [
                            {
                              "name": "srcEnd",
                              "nodeType": "YulTypedName",
                              "src": "10714:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10782:103:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                                    "nodeType": "YulIdentifier",
                                    "src": "10796:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10796:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10796:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "srcEnd",
                                "nodeType": "YulIdentifier",
                                "src": "10769:6:15"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "10777:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "10766:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10766:15:15"
                          },
                          "nodeType": "YulIf",
                          "src": "10763:122:15"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10970:144:15",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "10985:21:15",
                                "value": {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "11003:3:15"
                                },
                                "variables": [
                                  {
                                    "name": "elementPos",
                                    "nodeType": "YulTypedName",
                                    "src": "10989:10:15",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "11027:3:15"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "elementPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "11053:10:15"
                                        },
                                        {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "11065:3:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_decode_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "11032:20:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11032:37:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "11020:6:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11020:50:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11020:50:15"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "11083:21:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "11094:3:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11099:4:15",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11090:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11090:14:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "11083:3:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "10923:3:15"
                              },
                              {
                                "name": "srcEnd",
                                "nodeType": "YulIdentifier",
                                "src": "10928:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10920:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10920:15:15"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "10936:25:15",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "10938:21:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10949:3:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10954:4:15",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10945:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10945:14:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "10938:3:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "10898:21:15",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "10900:17:15",
                                "value": {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "10911:6:15"
                                },
                                "variables": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulTypedName",
                                    "src": "10904:3:15",
                                    "type": ""
                                  }
                                ]
                              }
                            ]
                          },
                          "src": "10894:220:15"
                        }
                      ]
                    },
                    "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "10482:6:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "10490:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "10498:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "10506:5:15",
                        "type": ""
                      }
                    ],
                    "src": "10410:710:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11220:293:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "11269:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                    "nodeType": "YulIdentifier",
                                    "src": "11271:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11271:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11271:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "11248:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11256:4:15",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11244:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11244:17:15"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "11263:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11240:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11240:27:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11233:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11233:35:15"
                          },
                          "nodeType": "YulIf",
                          "src": "11230:122:15"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "11361:34:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11388:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "11375:12:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11375:20:15"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "11365:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11404:103:15",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "11480:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11488:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11476:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11476:17:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "11495:6:15"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "11503:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "11413:62:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11413:94:15"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "11404:5:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "11198:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "11206:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "11214:5:15",
                        "type": ""
                      }
                    ],
                    "src": "11143:370:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11652:761:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "11698:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "11700:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11700:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11700:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "11673:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11682:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "11669:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11669:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11694:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11665:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11665:32:15"
                          },
                          "nodeType": "YulIf",
                          "src": "11662:119:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "11791:302:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11806:45:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11837:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11848:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11833:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11833:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11820:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11820:31:15"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "11810:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11898:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "11900:77:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11900:79:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11900:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "11870:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11878:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11867:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11867:30:15"
                              },
                              "nodeType": "YulIf",
                              "src": "11864:117:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11995:88:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12055:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "12066:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12051:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12051:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "12075:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "12005:45:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12005:78:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "11995:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "12103:303:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12118:46:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12149:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12160:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12145:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12145:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12132:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12132:32:15"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "12122:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12211:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "12213:77:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12213:79:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12213:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "12183:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12191:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12180:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12180:30:15"
                              },
                              "nodeType": "YulIf",
                              "src": "12177:117:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12308:88:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12368:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "12379:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12364:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12364:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "12388:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "12318:45:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12318:78:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "12308:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "11614:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "11625:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "11637:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "11645:6:15",
                        "type": ""
                      }
                    ],
                    "src": "11519:894:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12493:40:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12504:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12520:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "12514:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12514:12:15"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "12504:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "12476:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "12486:6:15",
                        "type": ""
                      }
                    ],
                    "src": "12419:114:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12650:73:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12667:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "12672:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12660:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12660:19:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12660:19:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12688:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12707:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12712:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12703:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12703:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "12688:11:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12622:3:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "12627:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "12638:11:15",
                        "type": ""
                      }
                    ],
                    "src": "12539:184:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12801:60:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12811:11:15",
                          "value": {
                            "name": "ptr",
                            "nodeType": "YulIdentifier",
                            "src": "12819:3:15"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "12811:4:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12832:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "12844:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12849:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12840:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12840:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "12832:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "ptr",
                        "nodeType": "YulTypedName",
                        "src": "12788:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "12796:4:15",
                        "type": ""
                      }
                    ],
                    "src": "12729:132:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12922:53:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12939:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12962:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12944:17:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12944:24:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12932:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12932:37:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12932:37:15"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint256_to_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "12910:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12917:3:15",
                        "type": ""
                      }
                    ],
                    "src": "12867:108:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13061:99:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "13105:6:15"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13113:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "13071:33:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13071:46:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13071:46:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13126:28:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13144:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13149:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13140:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13140:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "updatedPos",
                              "nodeType": "YulIdentifier",
                              "src": "13126:10:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "13034:6:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "13042:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updatedPos",
                        "nodeType": "YulTypedName",
                        "src": "13050:10:15",
                        "type": ""
                      }
                    ],
                    "src": "12981:179:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13241:38:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "13251:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "13263:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13268:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13259:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13259:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "next",
                              "nodeType": "YulIdentifier",
                              "src": "13251:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "ptr",
                        "nodeType": "YulTypedName",
                        "src": "13228:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "next",
                        "nodeType": "YulTypedName",
                        "src": "13236:4:15",
                        "type": ""
                      }
                    ],
                    "src": "13166:113:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13439:608:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "13449:68:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13511:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13463:47:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13463:54:15"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "13453:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13526:93:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13607:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "13612:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13533:73:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13533:86:15"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13526:3:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "13628:71:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13693:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13643:49:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13643:56:15"
                          },
                          "variables": [
                            {
                              "name": "baseRef",
                              "nodeType": "YulTypedName",
                              "src": "13632:7:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "13708:21:15",
                          "value": {
                            "name": "baseRef",
                            "nodeType": "YulIdentifier",
                            "src": "13722:7:15"
                          },
                          "variables": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulTypedName",
                              "src": "13712:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "13798:224:15",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "13812:34:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "13839:6:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "13833:5:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13833:13:15"
                                },
                                "variables": [
                                  {
                                    "name": "elementValue0",
                                    "nodeType": "YulTypedName",
                                    "src": "13816:13:15",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "13859:70:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "elementValue0",
                                      "nodeType": "YulIdentifier",
                                      "src": "13910:13:15"
                                    },
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "13925:3:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "13866:43:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13866:63:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13859:3:15"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "13942:70:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "14005:6:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13952:52:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13952:60:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "srcPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13942:6:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "13760:1:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "13763:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13757:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13757:13:15"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "13771:18:15",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "13773:14:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "13782:1:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13785:1:15",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "13778:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13778:9:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "13773:1:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "13742:14:15",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "13744:10:15",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13753:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulTypedName",
                                    "src": "13748:1:15",
                                    "type": ""
                                  }
                                ]
                              }
                            ]
                          },
                          "src": "13738:284:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14031:10:15",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14038:3:15"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "14031:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "13418:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "13425:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "13434:3:15",
                        "type": ""
                      }
                    ],
                    "src": "13315:732:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14201:225:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "14211:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14223:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14234:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14219:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14219:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14211:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14258:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14269:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14254:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14254:17:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14277:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14283:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "14273:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14273:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14247:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14247:47:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14247:47:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14303:116:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "14405:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "14414:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "14311:93:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14311:108:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14303:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "14173:9:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "14185:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "14196:4:15",
                        "type": ""
                      }
                    ],
                    "src": "14053:373:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14472:76:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "14526:16:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "14535:1:15",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "14538:1:15",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "14528:6:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14528:12:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "14528:12:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14495:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14517:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "14502:14:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14502:21:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "14492:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14492:32:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14485:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14485:40:15"
                          },
                          "nodeType": "YulIf",
                          "src": "14482:60:15"
                        }
                      ]
                    },
                    "name": "validator_revert_t_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "14465:5:15",
                        "type": ""
                      }
                    ],
                    "src": "14432:116:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14603:84:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "14613:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "14635:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "14622:12:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14622:20:15"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "14613:5:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14675:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "14651:23:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14651:30:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14651:30:15"
                        }
                      ]
                    },
                    "name": "abi_decode_t_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "14581:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "14589:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "14597:5:15",
                        "type": ""
                      }
                    ],
                    "src": "14554:133:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14773:388:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "14819:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "14821:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14821:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "14821:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "14794:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14803:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "14790:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14790:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14815:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "14786:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14786:32:15"
                          },
                          "nodeType": "YulIf",
                          "src": "14783:119:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "14912:117:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14927:15:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14941:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "14931:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14956:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14991:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "15002:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14987:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14987:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "15011:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "14966:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14966:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "14956:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "15039:115:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15054:16:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15068:2:15",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "15058:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15084:60:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15116:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "15127:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15112:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15112:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "15136:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "15094:17:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15094:50:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "15084:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "14735:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "14746:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "14758:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "14766:6:15",
                        "type": ""
                      }
                    ],
                    "src": "14693:468:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15250:391:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "15296:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "15298:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15298:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "15298:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "15271:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15280:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15267:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15267:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15292:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "15263:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15263:32:15"
                          },
                          "nodeType": "YulIf",
                          "src": "15260:119:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "15389:117:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15404:15:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15418:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "15408:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15433:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15468:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "15479:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15464:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15464:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "15488:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "15443:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15443:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "15433:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "15516:118:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15531:16:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15545:2:15",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "15535:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15561:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15596:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "15607:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15592:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15592:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "15616:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "15571:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15571:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "15561:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15212:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "15223:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "15235:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "15243:6:15",
                        "type": ""
                      }
                    ],
                    "src": "15167:474:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15790:946:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "15837:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "15839:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15839:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "15839:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "15811:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15820:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15807:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15807:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15832:3:15",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "15803:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15803:33:15"
                          },
                          "nodeType": "YulIf",
                          "src": "15800:120:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "15930:117:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15945:15:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15959:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "15949:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15974:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16009:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "16020:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16005:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16005:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "16029:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "15984:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15984:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "15974:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "16057:118:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16072:16:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16086:2:15",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "16076:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16102:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16137:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "16148:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16133:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16133:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "16157:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "16112:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16112:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "16102:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "16185:118:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16200:16:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16214:2:15",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "16204:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16230:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16265:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "16276:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16261:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16261:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "16285:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "16240:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16240:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "16230:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "16313:118:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16328:16:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16342:2:15",
                                "type": "",
                                "value": "96"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "16332:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16358:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16393:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "16404:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16389:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16389:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "16413:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "16368:20:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16368:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "16358:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "16441:288:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16456:47:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16487:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16498:3:15",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16483:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16483:19:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16470:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16470:33:15"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "16460:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16550:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "16552:77:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16552:79:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16552:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "16522:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16530:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "16519:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16519:30:15"
                              },
                              "nodeType": "YulIf",
                              "src": "16516:117:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16647:72:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16691:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "16702:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16687:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16687:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "16711:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "16657:29:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16657:62:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "16647:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15728:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "15739:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "15751:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "15759:6:15",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "15767:6:15",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "15775:6:15",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "15783:6:15",
                        "type": ""
                      }
                    ],
                    "src": "15647:1089:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16770:152:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16787:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16790:77:15",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16780:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16780:88:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16780:88:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16884:1:15",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16887:4:15",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16877:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16877:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16877:15:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16908:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16911:4:15",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "16901:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16901:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16901:15:15"
                        }
                      ]
                    },
                    "name": "panic_error_0x22",
                    "nodeType": "YulFunctionDefinition",
                    "src": "16742:180:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16979:269:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "16989:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "17003:4:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17009:1:15",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "16999:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16999:12:15"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "16989:6:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "17020:38:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "17050:4:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17056:1:15",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "17046:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17046:12:15"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "17024:18:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "17097:51:15",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "17111:27:15",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "17125:6:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "17133:4:15",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "17121:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17121:17:15"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17111:6:15"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "17077:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "17070:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17070:26:15"
                          },
                          "nodeType": "YulIf",
                          "src": "17067:81:15"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "17200:42:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x22",
                                    "nodeType": "YulIdentifier",
                                    "src": "17214:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17214:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "17214:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "17164:18:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17187:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17195:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17184:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17184:14:15"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "17161:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17161:38:15"
                          },
                          "nodeType": "YulIf",
                          "src": "17158:84:15"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "16963:4:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "16972:6:15",
                        "type": ""
                      }
                    ],
                    "src": "16928:320:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17319:53:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17336:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17359:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "17341:17:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17341:24:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17329:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17329:37:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17329:37:15"
                        }
                      ]
                    },
                    "name": "abi_encode_t_address_to_t_address_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "17307:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "17314:3:15",
                        "type": ""
                      }
                    ],
                    "src": "17254:118:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17504:206:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "17514:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17526:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17537:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17522:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17522:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "17514:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "17594:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17607:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17618:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17603:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17603:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17550:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17550:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17550:71:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "17675:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17688:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17699:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17684:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17684:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17631:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17631:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17631:72:15"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "17468:9:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "17480:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "17488:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "17499:4:15",
                        "type": ""
                      }
                    ],
                    "src": "17378:332:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17842:206:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "17852:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17864:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17875:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17860:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17860:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "17852:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "17932:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17945:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17956:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17941:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17941:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17888:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17888:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17888:71:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "18013:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18026:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18037:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18022:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18022:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17969:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17969:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17969:72:15"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "17806:9:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "17818:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "17826:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "17837:4:15",
                        "type": ""
                      }
                    ],
                    "src": "17716:332:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18082:152:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18099:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18102:77:15",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18092:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18092:88:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18092:88:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18196:1:15",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18199:4:15",
                                "type": "",
                                "value": "0x32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18189:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18189:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18189:15:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18220:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18223:4:15",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "18213:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18213:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18213:15:15"
                        }
                      ]
                    },
                    "name": "panic_error_0x32",
                    "nodeType": "YulFunctionDefinition",
                    "src": "18054:180:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18268:152:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18285:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18288:77:15",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18278:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18278:88:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18278:88:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18382:1:15",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18385:4:15",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18375:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18375:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18375:15:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18406:1:15",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18409:4:15",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "18399:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18399:15:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18399:15:15"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "18240:180:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18469:190:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "18479:33:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18506:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "18488:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18488:24:15"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "18479:5:15"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "18602:22:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "18604:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "18604:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "18604:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18527:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18534:66:15",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "18524:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18524:77:15"
                          },
                          "nodeType": "YulIf",
                          "src": "18521:103:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18633:20:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18644:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18651:1:15",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18640:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18640:13:15"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "18633:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "increment_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "18455:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "18465:3:15",
                        "type": ""
                      }
                    ],
                    "src": "18426:233:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18763:124:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "18773:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18785:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18796:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18781:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18781:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18773:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18853:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18866:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18877:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18862:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18862:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18809:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18809:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18809:71:15"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18735:9:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "18747:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18758:4:15",
                        "type": ""
                      }
                    ],
                    "src": "18665:222:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19075:371:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "19085:27:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19097:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19108:3:15",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19093:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19093:19:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "19085:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19166:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19179:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19190:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19175:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19175:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19122:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19122:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19122:71:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "19247:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19260:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19271:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19256:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19256:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19203:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19203:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19203:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "19329:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19342:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19353:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19338:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19338:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19285:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19285:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19285:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "19411:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19424:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19435:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19420:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19420:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19367:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19367:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19367:72:15"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "19023:9:15",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "19035:6:15",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "19043:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "19051:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "19059:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "19070:4:15",
                        "type": ""
                      }
                    ],
                    "src": "18893:553:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19496:147:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "19506:25:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "19529:1:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "19511:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19511:20:15"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "19506:1:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "19540:25:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "19563:1:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "19545:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19545:20:15"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "19540:1:15"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "19574:16:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "19585:1:15"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "19588:1:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19581:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19581:9:15"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "19574:3:15"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "19614:22:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "19616:16:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19616:18:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "19616:18:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "19606:1:15"
                              },
                              {
                                "name": "sum",
                                "nodeType": "YulIdentifier",
                                "src": "19609:3:15"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "19603:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19603:10:15"
                          },
                          "nodeType": "YulIf",
                          "src": "19600:36:15"
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "19483:1:15",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "19486:1:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "19492:3:15",
                        "type": ""
                      }
                    ],
                    "src": "19452:191:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19875:408:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "19885:26:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19897:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19908:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19893:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19893:18:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "19885:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19932:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19943:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19928:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19928:17:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19951:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19957:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "19947:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19947:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19921:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19921:47:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19921:47:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "19977:116:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "20079:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "20088:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19985:93:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19985:108:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "19977:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20114:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20125:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20110:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20110:18:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20134:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20140:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20130:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20130:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20103:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20103:48:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20103:48:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20160:116:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "20262:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "20271:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "20168:93:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20168:108:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20160:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "19839:9:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "19851:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "19859:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "19870:4:15",
                        "type": ""
                      }
                    ],
                    "src": "19649:634:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20347:40:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "20358:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20374:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "20368:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20368:12:15"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "20358:6:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "20330:5:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "20340:6:15",
                        "type": ""
                      }
                    ],
                    "src": "20289:98:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20488:73:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20505:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "20510:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20498:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20498:19:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20498:19:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20526:29:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20545:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20550:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20541:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20541:14:15"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "20526:11:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "20460:3:15",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "20465:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "20476:11:15",
                        "type": ""
                      }
                    ],
                    "src": "20393:168:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20657:283:15",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "20667:52:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20713:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_bytes_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "20681:31:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20681:38:15"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "20671:6:15",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20728:77:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20793:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "20798:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "20735:57:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20735:70:15"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "20728:3:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "20853:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20860:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20849:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20849:16:15"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20867:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "20872:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "20814:34:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20814:65:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20814:65:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20888:46:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20899:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20926:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "20904:21:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20904:29:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20895:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20895:39:15"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "20888:3:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "20638:5:15",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "20645:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "20653:3:15",
                        "type": ""
                      }
                    ],
                    "src": "20567:373:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21174:523:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "21184:27:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21196:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21207:3:15",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21192:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21192:19:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "21184:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21265:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21278:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21289:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21274:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21274:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "21221:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21221:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21221:71:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "21346:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21359:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21370:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21355:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21355:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "21302:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21302:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21302:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "21428:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21441:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21452:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21437:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21437:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "21384:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21384:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21384:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "21510:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21523:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21534:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21519:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21519:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "21466:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21466:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21466:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21559:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21570:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21555:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21555:19:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21580:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21586:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "21576:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21576:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "21548:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21548:49:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21548:49:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "21606:84:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "21676:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "21685:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "21614:61:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21614:76:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "21606:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "21114:9:15",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "21126:6:15",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "21134:6:15",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "21142:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "21150:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "21158:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "21169:4:15",
                        "type": ""
                      }
                    ],
                    "src": "20946:751:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21765:79:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "21775:22:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "21790:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "21784:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21784:13:15"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "21775:5:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21832:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "21806:25:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21806:32:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21806:32:15"
                        }
                      ]
                    },
                    "name": "abi_decode_t_bytes4_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "21743:6:15",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "21751:3:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "21759:5:15",
                        "type": ""
                      }
                    ],
                    "src": "21703:141:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21926:273:15",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21972:83:15",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "21974:77:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21974:79:15"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21974:79:15"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "21947:7:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21956:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "21943:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21943:23:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21968:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "21939:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21939:32:15"
                          },
                          "nodeType": "YulIf",
                          "src": "21936:119:15"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "22065:127:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22080:15:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22094:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "22084:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22109:73:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22154:9:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "22165:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22150:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22150:22:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "22174:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes4_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "22119:30:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22119:63:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "22109:6:15"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes4_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "21896:9:15",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "21907:7:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "21919:6:15",
                        "type": ""
                      }
                    ],
                    "src": "21850:349:15"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22533:725:15",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "22543:27:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22555:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22566:3:15",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22551:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22551:19:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "22543:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "22624:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22637:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22648:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22633:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22633:17:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "22580:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22580:71:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22580:71:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "22705:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22718:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22729:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22714:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22714:18:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "22661:43:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22661:72:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22661:72:15"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22754:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22765:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22750:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22750:18:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22774:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22780:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "22770:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22770:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22743:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22743:48:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22743:48:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22800:116:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "22902:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "22911:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "22808:93:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22808:108:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "22800:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22937:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22948:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22933:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22933:18:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22957:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22963:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "22953:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22953:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22926:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22926:48:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22926:48:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22983:116:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "23085:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "23094:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "22991:93:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22991:108:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "22983:4:15"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23120:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23131:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23116:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23116:19:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23141:4:15"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23147:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "23137:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23137:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "23109:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23109:49:15"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "23109:49:15"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "23167:84:15",
                          "value": {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "23237:6:15"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "23246:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "23175:61:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23175:76:15"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "23167:4:15"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "22473:9:15",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "22485:6:15",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "22493:6:15",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "22501:6:15",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "22509:6:15",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "22517:6:15",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "22528:4:15",
                        "type": ""
                      }
                    ],
                    "src": "22205:1053:15"
                  }
                ]
              },
              "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
              "id": 15,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {},
          "linkReferences": {},
          "object": "608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063d562e20411610066578063d562e20414610225578063e3e55f0814610243578063e985e9c514610261578063f242432a14610291576100ce565b80634e1273f4146101bb5780635b2725ed146101eb578063a22cb46514610209576100ce565b8062fdd58e146100d357806301ffc9a7146101035780630e89341c1461013357806313dc989f146101635780632eb2c2d6146101815780633e4bee381461019d575b600080fd5b6100ed60048036038101906100e8919061144c565b6102ad565b6040516100fa919061149b565b60405180910390f35b61011d6004803603810190610118919061150e565b610307565b60405161012a9190611556565b60405180910390f35b61014d60048036038101906101489190611571565b6103e9565b60405161015a919061162e565b60405180910390f35b61016b61047d565b604051610178919061149b565b60405180910390f35b61019b6004803603810190610196919061184d565b610482565b005b6101a561052a565b6040516101b2919061149b565b60405180910390f35b6101d560048036038101906101d091906119df565b61052f565b6040516101e29190611b15565b60405180910390f35b6101f361063e565b604051610200919061149b565b60405180910390f35b610223600480360381019061021e9190611b63565b610643565b005b61022d610659565b60405161023a919061149b565b60405180910390f35b61024b61065e565b604051610258919061149b565b60405180910390f35b61027b60048036038101906102769190611ba3565b610663565b6040516102889190611556565b60405180910390f35b6102ab60048036038101906102a69190611be3565b6106f7565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d257507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e257506103e18261079f565b5b9050919050565b6060600280546103f890611ca9565b80601f016020809104026020016040519081016040528092919081815260200182805461042490611ca9565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b50505050509050919050565b600381565b600061048c610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104d157506104cf8682610663565b155b156105155780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161050c929190611ce9565b60405180910390fd5b6105228686868686610811565b505050505050565b600081565b6060815183511461057b57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610572929190611d12565b60405180910390fd5b6000835167ffffffffffffffff81111561059857610597611655565b5b6040519080825280602002602001820160405280156105c65781602001602082028036833780820191505090505b50905060005b8451811015610633576106036105eb828761090990919063ffffffff16565b6105fe838761091d90919063ffffffff16565b6102ad565b82828151811061061657610615611d3b565b5b6020026020010181815250508061062c90611d99565b90506105cc565b508091505092915050565b600481565b61065561064e610809565b8383610931565b5050565b600281565b600181565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610701610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561074657506107448682610663565b155b1561078a5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610781929190611ce9565b60405180910390fd5b6107978686868686610aa1565b505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108835760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161087a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108f55760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108ec9190611de1565b60405180910390fd5b6109028585858585610bac565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a35760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161099a9190611de1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a949190611556565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b135760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b0a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b855760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b7c9190611de1565b60405180910390fd5b600080610b928585610c5e565b91509150610ba38787848487610bac565b50505050505050565b610bb885858585610c8e565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610c57576000610bf6610809565b90506001845103610c46576000610c1760008661091d90919063ffffffff16565b90506000610c2f60008661091d90919063ffffffff16565b9050610c3f83898985858961103c565b5050610c55565b610c548187878787876111f0565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610cd857815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ccf929190611d12565b60405180910390fd5b6000610ce2610809565b905060005b8351811015610ef7576000610d05828661091d90919063ffffffff16565b90506000610d1c838661091d90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610e4957600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610df157888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610de89493929190611dfc565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610ee4578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610edc9190611e41565b925050819055505b505080610ef090611d99565b9050610ce7565b506001835103610fb6576000610f1760008561091d90919063ffffffff16565b90506000610f2f60008561091d90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610fa7929190611d12565b60405180910390a45050611035565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161102c929190611e75565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156111e8578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161109d959493929190611f01565b6020604051808303816000875af19250505080156110d957506040513d601f19601f820116820180604052508101906110d69190611f70565b60015b61115d573d8060008114611109576040519150601f19603f3d011682016040523d82523d6000602084013e61110e565b606091505b50600081510361115557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161114c9190611de1565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111dd9190611de1565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561139c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611251959493929190611f9d565b6020604051808303816000875af192505050801561128d57506040513d601f19601f8201168201806040525081019061128a9190611f70565b60015b611311573d80600081146112bd576040519150601f19603f3d011682016040523d82523d6000602084013e6112c2565b606091505b50600081510361130957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113009190611de1565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461139a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113919190611de1565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113e3826113b8565b9050919050565b6113f3816113d8565b81146113fe57600080fd5b50565b600081359050611410816113ea565b92915050565b6000819050919050565b61142981611416565b811461143457600080fd5b50565b60008135905061144681611420565b92915050565b60008060408385031215611463576114626113ae565b5b600061147185828601611401565b925050602061148285828601611437565b9150509250929050565b61149581611416565b82525050565b60006020820190506114b0600083018461148c565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114eb816114b6565b81146114f657600080fd5b50565b600081359050611508816114e2565b92915050565b600060208284031215611524576115236113ae565b5b6000611532848285016114f9565b91505092915050565b60008115159050919050565b6115508161153b565b82525050565b600060208201905061156b6000830184611547565b92915050565b600060208284031215611587576115866113ae565b5b600061159584828501611437565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115d85780820151818401526020810190506115bd565b60008484015250505050565b6000601f19601f8301169050919050565b60006116008261159e565b61160a81856115a9565b935061161a8185602086016115ba565b611623816115e4565b840191505092915050565b6000602082019050818103600083015261164881846115f5565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61168d826115e4565b810181811067ffffffffffffffff821117156116ac576116ab611655565b5b80604052505050565b60006116bf6113a4565b90506116cb8282611684565b919050565b600067ffffffffffffffff8211156116eb576116ea611655565b5b602082029050602081019050919050565b600080fd5b600061171461170f846116d0565b6116b5565b90508083825260208201905060208402830185811115611737576117366116fc565b5b835b81811015611760578061174c8882611437565b845260208401935050602081019050611739565b5050509392505050565b600082601f83011261177f5761177e611650565b5b813561178f848260208601611701565b91505092915050565b600080fd5b600067ffffffffffffffff8211156117b8576117b7611655565b5b6117c1826115e4565b9050602081019050919050565b82818337600083830152505050565b60006117f06117eb8461179d565b6116b5565b90508281526020810184848401111561180c5761180b611798565b5b6118178482856117ce565b509392505050565b600082601f83011261183457611833611650565b5b81356118448482602086016117dd565b91505092915050565b600080600080600060a08688031215611869576118686113ae565b5b600061187788828901611401565b955050602061188888828901611401565b945050604086013567ffffffffffffffff8111156118a9576118a86113b3565b5b6118b58882890161176a565b935050606086013567ffffffffffffffff8111156118d6576118d56113b3565b5b6118e28882890161176a565b925050608086013567ffffffffffffffff811115611903576119026113b3565b5b61190f8882890161181f565b9150509295509295909350565b600067ffffffffffffffff82111561193757611936611655565b5b602082029050602081019050919050565b600061195b6119568461191c565b6116b5565b9050808382526020820190506020840283018581111561197e5761197d6116fc565b5b835b818110156119a757806119938882611401565b845260208401935050602081019050611980565b5050509392505050565b600082601f8301126119c6576119c5611650565b5b81356119d6848260208601611948565b91505092915050565b600080604083850312156119f6576119f56113ae565b5b600083013567ffffffffffffffff811115611a1457611a136113b3565b5b611a20858286016119b1565b925050602083013567ffffffffffffffff811115611a4157611a406113b3565b5b611a4d8582860161176a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a8c81611416565b82525050565b6000611a9e8383611a83565b60208301905092915050565b6000602082019050919050565b6000611ac282611a57565b611acc8185611a62565b9350611ad783611a73565b8060005b83811015611b08578151611aef8882611a92565b9750611afa83611aaa565b925050600181019050611adb565b5085935050505092915050565b60006020820190508181036000830152611b2f8184611ab7565b905092915050565b611b408161153b565b8114611b4b57600080fd5b50565b600081359050611b5d81611b37565b92915050565b60008060408385031215611b7a57611b796113ae565b5b6000611b8885828601611401565b9250506020611b9985828601611b4e565b9150509250929050565b60008060408385031215611bba57611bb96113ae565b5b6000611bc885828601611401565b9250506020611bd985828601611401565b9150509250929050565b600080600080600060a08688031215611bff57611bfe6113ae565b5b6000611c0d88828901611401565b9550506020611c1e88828901611401565b9450506040611c2f88828901611437565b9350506060611c4088828901611437565b925050608086013567ffffffffffffffff811115611c6157611c606113b3565b5b611c6d8882890161181f565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc157607f821691505b602082108103611cd457611cd3611c7a565b5b50919050565b611ce3816113d8565b82525050565b6000604082019050611cfe6000830185611cda565b611d0b6020830184611cda565b9392505050565b6000604082019050611d27600083018561148c565b611d34602083018461148c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611da482611416565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dd657611dd5611d6a565b5b600182019050919050565b6000602082019050611df66000830184611cda565b92915050565b6000608082019050611e116000830187611cda565b611e1e602083018661148c565b611e2b604083018561148c565b611e38606083018461148c565b95945050505050565b6000611e4c82611416565b9150611e5783611416565b9250828201905080821115611e6f57611e6e611d6a565b5b92915050565b60006040820190508181036000830152611e8f8185611ab7565b90508181036020830152611ea38184611ab7565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000611ed382611eac565b611edd8185611eb7565b9350611eed8185602086016115ba565b611ef6816115e4565b840191505092915050565b600060a082019050611f166000830188611cda565b611f236020830187611cda565b611f30604083018661148c565b611f3d606083018561148c565b8181036080830152611f4f8184611ec8565b90509695505050505050565b600081519050611f6a816114e2565b92915050565b600060208284031215611f8657611f856113ae565b5b6000611f9484828501611f5b565b91505092915050565b600060a082019050611fb26000830188611cda565b611fbf6020830187611cda565b8181036040830152611fd18186611ab7565b90508181036060830152611fe58185611ab7565b90508181036080830152611ff98184611ec8565b9050969550505050505056fea2646970667358221220685abd9d40300b98b3e3c754e946b49782ed1825c4e8366f2cd49a37e3302fe964736f6c63430008140033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD562E204 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD562E204 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xE3E55F08 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x291 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x5B2725ED EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x209 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x13DC989F EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x3E4BEE38 EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x144C JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x150E JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3D2 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3E2 JUMPI POP PUSH2 0x3E1 DUP3 PUSH2 0x79F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x471 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x446 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x471 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x454 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48C PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4D1 JUMPI POP PUSH2 0x4CF DUP7 DUP3 PUSH2 0x663 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x515 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP3 SWAP2 SWAP1 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x522 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x811 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x57B JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x572 SWAP3 SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x1655 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x633 JUMPI PUSH2 0x603 PUSH2 0x5EB DUP3 DUP8 PUSH2 0x909 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5FE DUP4 DUP8 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x1D3B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x62C SWAP1 PUSH2 0x1D99 JUMP JUMPDEST SWAP1 POP PUSH2 0x5CC JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x655 PUSH2 0x64E PUSH2 0x809 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x931 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x701 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI POP PUSH2 0x744 DUP7 DUP3 PUSH2 0x663 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x78A JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x797 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAA1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x883 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x902 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xBAC JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB13 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB85 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB92 DUP6 DUP6 PUSH2 0xC5E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xBA3 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xBAC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBB8 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC57 JUMPI PUSH1 0x0 PUSH2 0xBF6 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xC46 JUMPI PUSH1 0x0 PUSH2 0xC17 PUSH1 0x0 DUP7 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC2F PUSH1 0x0 DUP7 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC3F DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x103C JUMP JUMPDEST POP POP PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xC54 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xCD8 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCF SWAP3 SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCE2 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x0 PUSH2 0xD05 DUP3 DUP7 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD1C DUP4 DUP7 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDF1 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE4 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0xEF0 SWAP1 PUSH2 0x1D99 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE7 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0xFB6 JUMPI PUSH1 0x0 PUSH2 0xF17 PUSH1 0x0 DUP6 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF2F PUSH1 0x0 DUP6 PUSH2 0x91D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xFA7 SWAP3 SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1035 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x102C SWAP3 SWAP2 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x11E8 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D6 SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x115D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1109 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x110E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1155 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114C SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11E6 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x139C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1251 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x128D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128A SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1311 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1309 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1300 SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x139A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1391 SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E3 DUP3 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F3 DUP2 PUSH2 0x13D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1410 DUP2 PUSH2 0x13EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1429 DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP2 EQ PUSH2 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1446 DUP2 PUSH2 0x1420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1471 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1482 DUP6 DUP3 DUP7 ADD PUSH2 0x1437 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1495 DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EB DUP2 PUSH2 0x14B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1508 DUP2 PUSH2 0x14E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1524 JUMPI PUSH2 0x1523 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1532 DUP5 DUP3 DUP6 ADD PUSH2 0x14F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x153B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x1586 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1595 DUP5 DUP3 DUP6 ADD PUSH2 0x1437 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15BD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1600 DUP3 PUSH2 0x159E JUMP JUMPDEST PUSH2 0x160A DUP2 DUP6 PUSH2 0x15A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x161A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x1623 DUP2 PUSH2 0x15E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1648 DUP2 DUP5 PUSH2 0x15F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x168D DUP3 PUSH2 0x15E4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16AC JUMPI PUSH2 0x16AB PUSH2 0x1655 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x16CB DUP3 DUP3 PUSH2 0x1684 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x1655 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1714 PUSH2 0x170F DUP5 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1737 JUMPI PUSH2 0x1736 PUSH2 0x16FC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1760 JUMPI DUP1 PUSH2 0x174C DUP9 DUP3 PUSH2 0x1437 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1739 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x1650 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x178F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1701 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17B8 JUMPI PUSH2 0x17B7 PUSH2 0x1655 JUMP JUMPDEST JUMPDEST PUSH2 0x17C1 DUP3 PUSH2 0x15E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F0 PUSH2 0x17EB DUP5 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x180C JUMPI PUSH2 0x180B PUSH2 0x1798 JUMP JUMPDEST JUMPDEST PUSH2 0x1817 DUP5 DUP3 DUP6 PUSH2 0x17CE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1834 JUMPI PUSH2 0x1833 PUSH2 0x1650 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1844 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1869 JUMPI PUSH2 0x1868 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1877 DUP9 DUP3 DUP10 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1888 DUP9 DUP3 DUP10 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18A9 JUMPI PUSH2 0x18A8 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x18B5 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D6 JUMPI PUSH2 0x18D5 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x18E2 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x190F DUP9 DUP3 DUP10 ADD PUSH2 0x181F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x1655 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195B PUSH2 0x1956 DUP5 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x16FC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19A7 JUMPI DUP1 PUSH2 0x1993 DUP9 DUP3 PUSH2 0x1401 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1980 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x1650 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19D6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1948 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A14 JUMPI PUSH2 0x1A13 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x1A20 DUP6 DUP3 DUP7 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A40 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x1A4D DUP6 DUP3 DUP7 ADD PUSH2 0x176A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8C DUP2 PUSH2 0x1416 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9E DUP4 DUP4 PUSH2 0x1A83 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC2 DUP3 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x1ACC DUP2 DUP6 PUSH2 0x1A62 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AD7 DUP4 PUSH2 0x1A73 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B08 JUMPI DUP2 MLOAD PUSH2 0x1AEF DUP9 DUP3 PUSH2 0x1A92 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AFA DUP4 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ADB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2F DUP2 DUP5 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B40 DUP2 PUSH2 0x153B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B5D DUP2 PUSH2 0x1B37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7A JUMPI PUSH2 0x1B79 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B88 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B99 DUP6 DUP3 DUP7 ADD PUSH2 0x1B4E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BC8 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BD9 DUP6 DUP3 DUP7 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C0D DUP9 DUP3 DUP10 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C1E DUP9 DUP3 DUP10 ADD PUSH2 0x1401 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1C2F DUP9 DUP3 DUP10 ADD PUSH2 0x1437 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1C40 DUP9 DUP3 DUP10 ADD PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C61 JUMPI PUSH2 0x1C60 PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST PUSH2 0x1C6D DUP9 DUP3 DUP10 ADD PUSH2 0x181F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CC1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CD4 JUMPI PUSH2 0x1CD3 PUSH2 0x1C7A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE3 DUP2 PUSH2 0x13D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CFE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1D0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CDA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D27 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1D34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DA4 DUP3 PUSH2 0x1416 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DD6 JUMPI PUSH2 0x1DD5 PUSH2 0x1D6A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E11 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1E1E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1E2B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1E38 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4C DUP3 PUSH2 0x1416 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E57 DUP4 PUSH2 0x1416 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x1D6A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E8F DUP2 DUP6 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1EA3 DUP2 DUP5 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP3 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x1EDD DUP2 DUP6 PUSH2 0x1EB7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x1EF6 DUP2 PUSH2 0x15E4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1F16 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1F23 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1F30 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1F3D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x148C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1F4F DUP2 DUP5 PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F6A DUP2 PUSH2 0x14E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F86 JUMPI PUSH2 0x1F85 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F94 DUP5 DUP3 DUP6 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1FB2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1FBF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1CDA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 DUP7 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FE5 DUP2 DUP6 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1FF9 DUP2 DUP5 PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x5ABD9D40300B98B3E3 0xC7 SLOAD 0xE9 CHAINID 0xB4 SWAP8 DUP3 0xED XOR 0x25 0xC4 0xE8 CALLDATASIZE PUSH16 0x2CD49A37E3302FE964736F6C63430008 EQ STOP CALLER ",
          "sourceMap": "118:553:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;278:33:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;154:32:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2536:552:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;317:34:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;232:40:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;192:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3367:157:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;2084:103::-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;278:33:14:-;310:1;278:33;:::o;4014:429:1:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;154:32:14:-;185:1;154:32;:::o;2536:552:1:-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;:::i;:::-;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;317:34:14:-;350:1;317:34;:::o;3156:144:1:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;232:40:14:-;271:1;232:40;:::o;192:34::-;225:1;192:34;:::o;3367:157:1:-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;9015:445:1:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:7:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;13268:315:1:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;:::i;:::-;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1509::-;8715:6;8723;8731;8739;8747;8796:3;8784:9;8775:7;8771:23;8767:33;8764:120;;;8803:79;;:::i;:::-;8764:120;8923:1;8948:53;8993:7;8984:6;8973:9;8969:22;8948:53;:::i;:::-;8938:63;;8894:117;9050:2;9076:53;9121:7;9112:6;9101:9;9097:22;9076:53;:::i;:::-;9066:63;;9021:118;9206:2;9195:9;9191:18;9178:32;9237:18;9229:6;9226:30;9223:117;;;9259:79;;:::i;:::-;9223:117;9364:78;9434:7;9425:6;9414:9;9410:22;9364:78;:::i;:::-;9354:88;;9149:303;9519:2;9508:9;9504:18;9491:32;9550:18;9542:6;9539:30;9536:117;;;9572:79;;:::i;:::-;9536:117;9677:78;9747:7;9738:6;9727:9;9723:22;9677:78;:::i;:::-;9667:88;;9462:303;9832:3;9821:9;9817:19;9804:33;9864:18;9856:6;9853:30;9850:117;;;9886:79;;:::i;:::-;9850:117;9991:62;10045:7;10036:6;10025:9;10021:22;9991:62;:::i;:::-;9981:72;;9775:288;8561:1509;;;;;;;;:::o;10076:311::-;10153:4;10243:18;10235:6;10232:30;10229:56;;;10265:18;;:::i;:::-;10229:56;10315:4;10307:6;10303:17;10295:25;;10375:4;10369;10365:15;10357:23;;10076:311;;;:::o;10410:710::-;10506:5;10531:81;10547:64;10604:6;10547:64;:::i;:::-;10531:81;:::i;:::-;10522:90;;10632:5;10661:6;10654:5;10647:21;10695:4;10688:5;10684:16;10677:23;;10748:4;10740:6;10736:17;10728:6;10724:30;10777:3;10769:6;10766:15;10763:122;;;10796:79;;:::i;:::-;10763:122;10911:6;10894:220;10928:6;10923:3;10920:15;10894:220;;;11003:3;11032:37;11065:3;11053:10;11032:37;:::i;:::-;11027:3;11020:50;11099:4;11094:3;11090:14;11083:21;;10970:144;10954:4;10949:3;10945:14;10938:21;;10894:220;;;10898:21;10512:608;;10410:710;;;;;:::o;11143:370::-;11214:5;11263:3;11256:4;11248:6;11244:17;11240:27;11230:122;;11271:79;;:::i;:::-;11230:122;11388:6;11375:20;11413:94;11503:3;11495:6;11488:4;11480:6;11476:17;11413:94;:::i;:::-;11404:103;;11220:293;11143:370;;;;:::o;11519:894::-;11637:6;11645;11694:2;11682:9;11673:7;11669:23;11665:32;11662:119;;;11700:79;;:::i;:::-;11662:119;11848:1;11837:9;11833:17;11820:31;11878:18;11870:6;11867:30;11864:117;;;11900:79;;:::i;:::-;11864:117;12005:78;12075:7;12066:6;12055:9;12051:22;12005:78;:::i;:::-;11995:88;;11791:302;12160:2;12149:9;12145:18;12132:32;12191:18;12183:6;12180:30;12177:117;;;12213:79;;:::i;:::-;12177:117;12318:78;12388:7;12379:6;12368:9;12364:22;12318:78;:::i;:::-;12308:88;;12103:303;11519:894;;;;;:::o;12419:114::-;12486:6;12520:5;12514:12;12504:22;;12419:114;;;:::o;12539:184::-;12638:11;12672:6;12667:3;12660:19;12712:4;12707:3;12703:14;12688:29;;12539:184;;;;:::o;12729:132::-;12796:4;12819:3;12811:11;;12849:4;12844:3;12840:14;12832:22;;12729:132;;;:::o;12867:108::-;12944:24;12962:5;12944:24;:::i;:::-;12939:3;12932:37;12867:108;;:::o;12981:179::-;13050:10;13071:46;13113:3;13105:6;13071:46;:::i;:::-;13149:4;13144:3;13140:14;13126:28;;12981:179;;;;:::o;13166:113::-;13236:4;13268;13263:3;13259:14;13251:22;;13166:113;;;:::o;13315:732::-;13434:3;13463:54;13511:5;13463:54;:::i;:::-;13533:86;13612:6;13607:3;13533:86;:::i;:::-;13526:93;;13643:56;13693:5;13643:56;:::i;:::-;13722:7;13753:1;13738:284;13763:6;13760:1;13757:13;13738:284;;;13839:6;13833:13;13866:63;13925:3;13910:13;13866:63;:::i;:::-;13859:70;;13952:60;14005:6;13952:60;:::i;:::-;13942:70;;13798:224;13785:1;13782;13778:9;13773:14;;13738:284;;;13742:14;14038:3;14031:10;;13439:608;;;13315:732;;;;:::o;14053:373::-;14196:4;14234:2;14223:9;14219:18;14211:26;;14283:9;14277:4;14273:20;14269:1;14258:9;14254:17;14247:47;14311:108;14414:4;14405:6;14311:108;:::i;:::-;14303:116;;14053:373;;;;:::o;14432:116::-;14502:21;14517:5;14502:21;:::i;:::-;14495:5;14492:32;14482:60;;14538:1;14535;14528:12;14482:60;14432:116;:::o;14554:133::-;14597:5;14635:6;14622:20;14613:29;;14651:30;14675:5;14651:30;:::i;:::-;14554:133;;;;:::o;14693:468::-;14758:6;14766;14815:2;14803:9;14794:7;14790:23;14786:32;14783:119;;;14821:79;;:::i;:::-;14783:119;14941:1;14966:53;15011:7;15002:6;14991:9;14987:22;14966:53;:::i;:::-;14956:63;;14912:117;15068:2;15094:50;15136:7;15127:6;15116:9;15112:22;15094:50;:::i;:::-;15084:60;;15039:115;14693:468;;;;;:::o;15167:474::-;15235:6;15243;15292:2;15280:9;15271:7;15267:23;15263:32;15260:119;;;15298:79;;:::i;:::-;15260:119;15418:1;15443:53;15488:7;15479:6;15468:9;15464:22;15443:53;:::i;:::-;15433:63;;15389:117;15545:2;15571:53;15616:7;15607:6;15596:9;15592:22;15571:53;:::i;:::-;15561:63;;15516:118;15167:474;;;;;:::o;15647:1089::-;15751:6;15759;15767;15775;15783;15832:3;15820:9;15811:7;15807:23;15803:33;15800:120;;;15839:79;;:::i;:::-;15800:120;15959:1;15984:53;16029:7;16020:6;16009:9;16005:22;15984:53;:::i;:::-;15974:63;;15930:117;16086:2;16112:53;16157:7;16148:6;16137:9;16133:22;16112:53;:::i;:::-;16102:63;;16057:118;16214:2;16240:53;16285:7;16276:6;16265:9;16261:22;16240:53;:::i;:::-;16230:63;;16185:118;16342:2;16368:53;16413:7;16404:6;16393:9;16389:22;16368:53;:::i;:::-;16358:63;;16313:118;16498:3;16487:9;16483:19;16470:33;16530:18;16522:6;16519:30;16516:117;;;16552:79;;:::i;:::-;16516:117;16657:62;16711:7;16702:6;16691:9;16687:22;16657:62;:::i;:::-;16647:72;;16441:288;15647:1089;;;;;;;;:::o;16742:180::-;16790:77;16787:1;16780:88;16887:4;16884:1;16877:15;16911:4;16908:1;16901:15;16928:320;16972:6;17009:1;17003:4;16999:12;16989:22;;17056:1;17050:4;17046:12;17077:18;17067:81;;17133:4;17125:6;17121:17;17111:27;;17067:81;17195:2;17187:6;17184:14;17164:18;17161:38;17158:84;;17214:18;;:::i;:::-;17158:84;16979:269;16928:320;;;:::o;17254:118::-;17341:24;17359:5;17341:24;:::i;:::-;17336:3;17329:37;17254:118;;:::o;17378:332::-;17499:4;17537:2;17526:9;17522:18;17514:26;;17550:71;17618:1;17607:9;17603:17;17594:6;17550:71;:::i;:::-;17631:72;17699:2;17688:9;17684:18;17675:6;17631:72;:::i;:::-;17378:332;;;;;:::o;17716:::-;17837:4;17875:2;17864:9;17860:18;17852:26;;17888:71;17956:1;17945:9;17941:17;17932:6;17888:71;:::i;:::-;17969:72;18037:2;18026:9;18022:18;18013:6;17969:72;:::i;:::-;17716:332;;;;;:::o;18054:180::-;18102:77;18099:1;18092:88;18199:4;18196:1;18189:15;18223:4;18220:1;18213:15;18240:180;18288:77;18285:1;18278:88;18385:4;18382:1;18375:15;18409:4;18406:1;18399:15;18426:233;18465:3;18488:24;18506:5;18488:24;:::i;:::-;18479:33;;18534:66;18527:5;18524:77;18521:103;;18604:18;;:::i;:::-;18521:103;18651:1;18644:5;18640:13;18633:20;;18426:233;;;:::o;18665:222::-;18758:4;18796:2;18785:9;18781:18;18773:26;;18809:71;18877:1;18866:9;18862:17;18853:6;18809:71;:::i;:::-;18665:222;;;;:::o;18893:553::-;19070:4;19108:3;19097:9;19093:19;19085:27;;19122:71;19190:1;19179:9;19175:17;19166:6;19122:71;:::i;:::-;19203:72;19271:2;19260:9;19256:18;19247:6;19203:72;:::i;:::-;19285;19353:2;19342:9;19338:18;19329:6;19285:72;:::i;:::-;19367;19435:2;19424:9;19420:18;19411:6;19367:72;:::i;:::-;18893:553;;;;;;;:::o;19452:191::-;19492:3;19511:20;19529:1;19511:20;:::i;:::-;19506:25;;19545:20;19563:1;19545:20;:::i;:::-;19540:25;;19588:1;19585;19581:9;19574:16;;19609:3;19606:1;19603:10;19600:36;;;19616:18;;:::i;:::-;19600:36;19452:191;;;;:::o;19649:634::-;19870:4;19908:2;19897:9;19893:18;19885:26;;19957:9;19951:4;19947:20;19943:1;19932:9;19928:17;19921:47;19985:108;20088:4;20079:6;19985:108;:::i;:::-;19977:116;;20140:9;20134:4;20130:20;20125:2;20114:9;20110:18;20103:48;20168:108;20271:4;20262:6;20168:108;:::i;:::-;20160:116;;19649:634;;;;;:::o;20289:98::-;20340:6;20374:5;20368:12;20358:22;;20289:98;;;:::o;20393:168::-;20476:11;20510:6;20505:3;20498:19;20550:4;20545:3;20541:14;20526:29;;20393:168;;;;:::o;20567:373::-;20653:3;20681:38;20713:5;20681:38;:::i;:::-;20735:70;20798:6;20793:3;20735:70;:::i;:::-;20728:77;;20814:65;20872:6;20867:3;20860:4;20853:5;20849:16;20814:65;:::i;:::-;20904:29;20926:6;20904:29;:::i;:::-;20899:3;20895:39;20888:46;;20657:283;20567:373;;;;:::o;20946:751::-;21169:4;21207:3;21196:9;21192:19;21184:27;;21221:71;21289:1;21278:9;21274:17;21265:6;21221:71;:::i;:::-;21302:72;21370:2;21359:9;21355:18;21346:6;21302:72;:::i;:::-;21384;21452:2;21441:9;21437:18;21428:6;21384:72;:::i;:::-;21466;21534:2;21523:9;21519:18;21510:6;21466:72;:::i;:::-;21586:9;21580:4;21576:20;21570:3;21559:9;21555:19;21548:49;21614:76;21685:4;21676:6;21614:76;:::i;:::-;21606:84;;20946:751;;;;;;;;:::o;21703:141::-;21759:5;21790:6;21784:13;21775:22;;21806:32;21832:5;21806:32;:::i;:::-;21703:141;;;;:::o;21850:349::-;21919:6;21968:2;21956:9;21947:7;21943:23;21939:32;21936:119;;;21974:79;;:::i;:::-;21936:119;22094:1;22119:63;22174:7;22165:6;22154:9;22150:22;22119:63;:::i;:::-;22109:73;;22065:127;21850:349;;;;:::o;22205:1053::-;22528:4;22566:3;22555:9;22551:19;22543:27;;22580:71;22648:1;22637:9;22633:17;22624:6;22580:71;:::i;:::-;22661:72;22729:2;22718:9;22714:18;22705:6;22661:72;:::i;:::-;22780:9;22774:4;22770:20;22765:2;22754:9;22750:18;22743:48;22808:108;22911:4;22902:6;22808:108;:::i;:::-;22800:116;;22963:9;22957:4;22953:20;22948:2;22937:9;22933:18;22926:48;22991:108;23094:4;23085:6;22991:108;:::i;:::-;22983:116;;23147:9;23141:4;23137:20;23131:3;23120:9;23116:19;23109:49;23175:76;23246:4;23237:6;23175:76;:::i;:::-;23167:84;;22205:1053;;;;;;;;:::o"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "1650200",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "GOLD()": "440",
            "SHIELD()": "374",
            "SILVER()": "373",
            "SWORD()": "396",
            "THORS_HAMMER()": "351",
            "balanceOf(address,uint256)": "infinite",
            "balanceOfBatch(address[],uint256[])": "infinite",
            "isApprovedForAll(address,address)": "infinite",
            "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
            "safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "infinite",
            "supportsInterface(bytes4)": "796",
            "uri(uint256)": "infinite"
          }
        },
        "methodIdentifiers": {
          "GOLD()": "3e4bee38",
          "SHIELD()": "5b2725ed",
          "SILVER()": "e3e55f08",
          "SWORD()": "13dc989f",
          "THORS_HAMMER()": "d562e204",
          "balanceOf(address,uint256)": "00fdd58e",
          "balanceOfBatch(address[],uint256[])": "4e1273f4",
          "isApprovedForAll(address,address)": "e985e9c5",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
          "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
          "setApprovalForAll(address,bool)": "a22cb465",
          "supportsInterface(bytes4)": "01ffc9a7",
          "uri(uint256)": "0e89341c"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHIELD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SILVER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWORD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"THORS_HAMMER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/GameItems.sol\":\"GameItems\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1155} from \\\"./IERC1155.sol\\\";\\nimport {IERC1155Receiver} from \\\"./IERC1155Receiver.sol\\\";\\nimport {IERC1155MetadataURI} from \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {Arrays} from \\\"../../utils/Arrays.sol\\\";\\nimport {IERC1155Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n */\\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\\n    using Arrays for uint256[];\\n    using Arrays for address[];\\n\\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\\n\\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual returns (uint256[] memory) {\\n        if (accounts.length != ids.length) {\\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\\n        }\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\\n        address sender = _msgSender();\\n        if (from != sender && !isApprovedForAll(from, sender)) {\\n            revert ERC1155MissingApprovalForAll(sender, from);\\n        }\\n        _safeTransferFrom(from, to, id, value, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) public virtual {\\n        address sender = _msgSender();\\n        if (from != sender && !isApprovedForAll(from, sender)) {\\n            revert ERC1155MissingApprovalForAll(sender, from);\\n        }\\n        _safeBatchTransferFrom(from, to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\\n     * (or `to`) is the zero address.\\n     *\\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\\n     * - `ids` and `values` must have the same length.\\n     *\\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\\n     */\\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\\n        if (ids.length != values.length) {\\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\\n        }\\n\\n        address operator = _msgSender();\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids.unsafeMemoryAccess(i);\\n            uint256 value = values.unsafeMemoryAccess(i);\\n\\n            if (from != address(0)) {\\n                uint256 fromBalance = _balances[id][from];\\n                if (fromBalance < value) {\\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\\n                }\\n                unchecked {\\n                    // Overflow not possible: value <= fromBalance\\n                    _balances[id][from] = fromBalance - value;\\n                }\\n            }\\n\\n            if (to != address(0)) {\\n                _balances[id][to] += value;\\n            }\\n        }\\n\\n        if (ids.length == 1) {\\n            uint256 id = ids.unsafeMemoryAccess(0);\\n            uint256 value = values.unsafeMemoryAccess(0);\\n            emit TransferSingle(operator, from, to, id, value);\\n        } else {\\n            emit TransferBatch(operator, from, to, ids, values);\\n        }\\n    }\\n\\n    /**\\n     * @dev Version of {_update} that performs the token acceptance check by calling\\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\\n     * contains code (eg. is a smart contract at the moment of execution).\\n     *\\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\\n     * overriding {_update} instead.\\n     */\\n    function _updateWithAcceptanceCheck(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) internal virtual {\\n        _update(from, to, ids, values);\\n        if (to != address(0)) {\\n            address operator = _msgSender();\\n            if (ids.length == 1) {\\n                uint256 id = ids.unsafeMemoryAccess(0);\\n                uint256 value = values.unsafeMemoryAccess(0);\\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\\n            } else {\\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\\n        if (to == address(0)) {\\n            revert ERC1155InvalidReceiver(address(0));\\n        }\\n        if (from == address(0)) {\\n            revert ERC1155InvalidSender(address(0));\\n        }\\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     * - `ids` and `values` must have the same length.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) internal {\\n        if (to == address(0)) {\\n            revert ERC1155InvalidReceiver(address(0));\\n        }\\n        if (from == address(0)) {\\n            revert ERC1155InvalidSender(address(0));\\n        }\\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the values in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\\n        if (to == address(0)) {\\n            revert ERC1155InvalidReceiver(address(0));\\n        }\\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `values` must have the same length.\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\\n        if (to == address(0)) {\\n            revert ERC1155InvalidReceiver(address(0));\\n        }\\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `value` amount of tokens of type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC1155InvalidSender(address(0));\\n        }\\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `value` amount of tokens of type `id`.\\n     * - `ids` and `values` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\\n        if (from == address(0)) {\\n            revert ERC1155InvalidSender(address(0));\\n        }\\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the zero address.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC1155InvalidOperator(address(0));\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\\n     * if it contains code at the moment of execution.\\n     */\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes memory data\\n    ) private {\\n        if (to.code.length > 0) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    // Tokens rejected\\n                    revert ERC1155InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    // non-ERC1155Receiver implementer\\n                    revert ERC1155InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\\n     * if it contains code at the moment of execution.\\n     */\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) private {\\n        if (to.code.length > 0) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    // Tokens rejected\\n                    revert ERC1155InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    // non-ERC1155Receiver implementer\\n                    revert ERC1155InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Creates an array in memory with only one value for each of the elements provided.\\n     */\\n    function _asSingletonArrays(\\n        uint256 element1,\\n        uint256 element2\\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Load the free memory pointer\\n            array1 := mload(0x40)\\n            // Set array length to 1\\n            mstore(array1, 1)\\n            // Store the single element at the next word after the length (where content starts)\\n            mstore(add(array1, 0x20), element1)\\n\\n            // Repeat for next array locating it right after the first array\\n            array2 := add(array1, 0x40)\\n            mstore(array2, 1)\\n            mstore(add(array2, 0x20), element2)\\n\\n            // Update the free memory pointer by pointing after the second array\\n            mstore(0x40, add(array2, 0x40))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\\n     *\\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\\n     * reentrancy guards when interacting with untrusted contracts.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\\n     * reentrancy guards when interacting with untrusted contracts.\\n     *\\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `values` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface that must be implemented by smart contracts in order to receive\\n * ERC-1155 token transfers.\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1155} from \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {StorageSlot} from \\\"./StorageSlot.sol\\\";\\nimport {Math} from \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to array types.\\n */\\nlibrary Arrays {\\n    using StorageSlot for bytes32;\\n\\n    /**\\n     * @dev Searches a sorted `array` and returns the first index that contains\\n     * a value greater or equal to `element`. If no such index exists (i.e. all\\n     * values in the array are strictly less than `element`), the array length is\\n     * returned. Time complexity O(log n).\\n     *\\n     * `array` is expected to be sorted in ascending order, and to contain no\\n     * repeated elements.\\n     */\\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\\n        uint256 low = 0;\\n        uint256 high = array.length;\\n\\n        if (high == 0) {\\n            return 0;\\n        }\\n\\n        while (low < high) {\\n            uint256 mid = Math.average(low, high);\\n\\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\\n            // because Math.average rounds towards zero (it does integer division with truncation).\\n            if (unsafeAccess(array, mid).value > element) {\\n                high = mid;\\n            } else {\\n                low = mid + 1;\\n            }\\n        }\\n\\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\\n            return low - 1;\\n        } else {\\n            return low;\\n        }\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\\n        bytes32 slot;\\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0, arr.slot)\\n            slot := add(keccak256(0, 0x20), pos)\\n        }\\n        return slot.getAddressSlot();\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\\n        bytes32 slot;\\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0, arr.slot)\\n            slot := add(keccak256(0, 0x20), pos)\\n        }\\n        return slot.getBytes32Slot();\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\\n        bytes32 slot;\\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0, arr.slot)\\n            slot := add(keccak256(0, 0x20), pos)\\n        }\\n        return slot.getUint256Slot();\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\\n        assembly {\\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\\n        }\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\\n        assembly {\\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"contracts/mock/GameItems.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\n\\ncontract GameItems is ERC1155 {\\n    uint256 public constant GOLD = 0;\\n    uint256 public constant SILVER = 1;\\n    uint256 public constant THORS_HAMMER = 2;\\n    uint256 public constant SWORD = 3;\\n    uint256 public constant SHIELD = 4;\\n\\n    constructor() ERC1155(\\\"https://game.example/api/item/{id}.json\\\") {\\n        _mint(msg.sender, GOLD, 10 ** 18, \\\"\\\");\\n        _mint(msg.sender, SILVER, 10 ** 27, \\\"\\\");\\n        _mint(msg.sender, THORS_HAMMER, 1, \\\"\\\");\\n        _mint(msg.sender, SWORD, 10 ** 9, \\\"\\\");\\n        _mint(msg.sender, SHIELD, 10 ** 9, \\\"\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x0fd4eabe6804f0b7e9185d4ca2faf37a04e872ca4817ddb0901629cfd5d22f0d\",\"license\":\"MIT\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 178,
            "contract": "contracts/mock/GameItems.sol:GameItems",
            "label": "_balances",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 184,
            "contract": "contracts/mock/GameItems.sol:GameItems",
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
          },
          {
            "astId": 186,
            "contract": "contracts/mock/GameItems.sol:GameItems",
            "label": "_uri",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1155} from \\\"./IERC1155.sol\\\";\\nimport {IERC1155Receiver} from \\\"./IERC1155Receiver.sol\\\";\\nimport {IERC1155MetadataURI} from \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {Arrays} from \\\"../../utils/Arrays.sol\\\";\\nimport {IERC1155Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n */\\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\\n    using Arrays for uint256[];\\n    using Arrays for address[];\\n\\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\\n\\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual returns (uint256[] memory) {\\n        if (accounts.length != ids.length) {\\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\\n        }\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\\n        address sender = _msgSender();\\n        if (from != sender && !isApprovedForAll(from, sender)) {\\n            revert ERC1155MissingApprovalForAll(sender, from);\\n        }\\n        _safeTransferFrom(from, to, id, value, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) public virtual {\\n        address sender = _msgSender();\\n        if (from != sender && !isApprovedForAll(from, sender)) {\\n            revert ERC1155MissingApprovalForAll(sender, from);\\n        }\\n        _safeBatchTransferFrom(from, to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\\n     * (or `to`) is the zero address.\\n     *\\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\\n     * - `ids` and `values` must have the same length.\\n     *\\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\\n     */\\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\\n        if (ids.length != values.length) {\\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\\n        }\\n\\n        address operator = _msgSender();\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids.unsafeMemoryAccess(i);\\n            uint256 value = values.unsafeMemoryAccess(i);\\n\\n            if (from != address(0)) {\\n                uint256 fromBalance = _balances[id][from];\\n                if (fromBalance < value) {\\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\\n                }\\n                unchecked {\\n                    // Overflow not possible: value <= fromBalance\\n                    _balances[id][from] = fromBalance - value;\\n                }\\n            }\\n\\n            if (to != address(0)) {\\n                _balances[id][to] += value;\\n            }\\n        }\\n\\n        if (ids.length == 1) {\\n            uint256 id = ids.unsafeMemoryAccess(0);\\n            uint256 value = values.unsafeMemoryAccess(0);\\n            emit TransferSingle(operator, from, to, id, value);\\n        } else {\\n            emit TransferBatch(operator, from, to, ids, values);\\n        }\\n    }\\n\\n    /**\\n     * @dev Version of {_update} that performs the token acceptance check by calling\\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\\n     * contains code (eg. is a smart contract at the moment of execution).\\n     *\\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\\n     * overriding {_update} instead.\\n     */\\n    function _updateWithAcceptanceCheck(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) internal virtual {\\n        _update(from, to, ids, values);\\n        if (to != address(0)) {\\n            address operator = _msgSender();\\n            if (ids.length == 1) {\\n                uint256 id = ids.unsafeMemoryAccess(0);\\n                uint256 value = values.unsafeMemoryAccess(0);\\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\\n            } else {\\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\\n        if (to == address(0)) {\\n            revert ERC1155InvalidReceiver(address(0));\\n        }\\n        if (from == address(0)) {\\n            revert ERC1155InvalidSender(address(0));\\n        }\\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     * - `ids` and `values` must have the same length.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) internal {\\n        if (to == address(0)) {\\n            revert ERC1155InvalidReceiver(address(0));\\n        }\\n        if (from == address(0)) {\\n            revert ERC1155InvalidSender(address(0));\\n        }\\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the values in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\\n        if (to == address(0)) {\\n            revert ERC1155InvalidReceiver(address(0));\\n        }\\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `values` must have the same length.\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\\n        if (to == address(0)) {\\n            revert ERC1155InvalidReceiver(address(0));\\n        }\\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `value` amount of tokens of type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC1155InvalidSender(address(0));\\n        }\\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `value` amount of tokens of type `id`.\\n     * - `ids` and `values` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\\n        if (from == address(0)) {\\n            revert ERC1155InvalidSender(address(0));\\n        }\\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the zero address.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC1155InvalidOperator(address(0));\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\\n     * if it contains code at the moment of execution.\\n     */\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes memory data\\n    ) private {\\n        if (to.code.length > 0) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    // Tokens rejected\\n                    revert ERC1155InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    // non-ERC1155Receiver implementer\\n                    revert ERC1155InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\\n     * if it contains code at the moment of execution.\\n     */\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) private {\\n        if (to.code.length > 0) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    // Tokens rejected\\n                    revert ERC1155InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    // non-ERC1155Receiver implementer\\n                    revert ERC1155InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Creates an array in memory with only one value for each of the elements provided.\\n     */\\n    function _asSingletonArrays(\\n        uint256 element1,\\n        uint256 element2\\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Load the free memory pointer\\n            array1 := mload(0x40)\\n            // Set array length to 1\\n            mstore(array1, 1)\\n            // Store the single element at the next word after the length (where content starts)\\n            mstore(add(array1, 0x20), element1)\\n\\n            // Repeat for next array locating it right after the first array\\n            array2 := add(array1, 0x40)\\n            mstore(array2, 1)\\n            mstore(add(array2, 0x20), element2)\\n\\n            // Update the free memory pointer by pointing after the second array\\n            mstore(0x40, add(array2, 0x40))\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1155} from \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\\n     *\\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\\n     * reentrancy guards when interacting with untrusted contracts.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\\n     * reentrancy guards when interacting with untrusted contracts.\\n     *\\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `values` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external;\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface that must be implemented by smart contracts in order to receive\\n * ERC-1155 token transfers.\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/IERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Arrays.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {StorageSlot} from \\\"./StorageSlot.sol\\\";\\nimport {Math} from \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to array types.\\n */\\nlibrary Arrays {\\n    using StorageSlot for bytes32;\\n\\n    /**\\n     * @dev Searches a sorted `array` and returns the first index that contains\\n     * a value greater or equal to `element`. If no such index exists (i.e. all\\n     * values in the array are strictly less than `element`), the array length is\\n     * returned. Time complexity O(log n).\\n     *\\n     * `array` is expected to be sorted in ascending order, and to contain no\\n     * repeated elements.\\n     */\\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\\n        uint256 low = 0;\\n        uint256 high = array.length;\\n\\n        if (high == 0) {\\n            return 0;\\n        }\\n\\n        while (low < high) {\\n            uint256 mid = Math.average(low, high);\\n\\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\\n            // because Math.average rounds towards zero (it does integer division with truncation).\\n            if (unsafeAccess(array, mid).value > element) {\\n                high = mid;\\n            } else {\\n                low = mid + 1;\\n            }\\n        }\\n\\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\\n            return low - 1;\\n        } else {\\n            return low;\\n        }\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\\n        bytes32 slot;\\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0, arr.slot)\\n            slot := add(keccak256(0, 0x20), pos)\\n        }\\n        return slot.getAddressSlot();\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\\n        bytes32 slot;\\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0, arr.slot)\\n            slot := add(keccak256(0, 0x20), pos)\\n        }\\n        return slot.getBytes32Slot();\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\\n        bytes32 slot;\\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0, arr.slot)\\n            slot := add(keccak256(0, 0x20), pos)\\n        }\\n        return slot.getUint256Slot();\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\\n        assembly {\\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\\n        }\\n    }\\n\\n    /**\\n     * @dev Access an array in an \\\"unsafe\\\" way. Skips solidity \\\"index-out-of-range\\\" check.\\n     *\\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\\n     */\\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\\n        assembly {\\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/ERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/math/Math.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\"\n    },\n    \"contracts/mock/GameItems.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\n\\ncontract GameItems is ERC1155 {\\n    uint256 public constant GOLD = 0;\\n    uint256 public constant SILVER = 1;\\n    uint256 public constant THORS_HAMMER = 2;\\n    uint256 public constant SWORD = 3;\\n    uint256 public constant SHIELD = 4;\\n\\n    constructor() ERC1155(\\\"https://game.example/api/item/{id}.json\\\") {\\n        _mint(msg.sender, GOLD, 10 ** 18, \\\"\\\");\\n        _mint(msg.sender, SILVER, 10 ** 27, \\\"\\\");\\n        _mint(msg.sender, THORS_HAMMER, 1, \\\"\\\");\\n        _mint(msg.sender, SWORD, 10 ** 9, \\\"\\\");\\n        _mint(msg.sender, SHIELD, 10 ** 9, \\\"\\\");\\n    }\\n}\\n\"\n    },\n    \"contracts/NFTMarketplace.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ncontract NFTMarketplace {\\n    struct Sale {\\n        address owner;\\n        address nftContract;\\n        uint256 tokenId;\\n        uint256 quantity;\\n        uint256 price;\\n        address paymentToken;\\n    }\\n\\n    mapping(address => mapping(uint256 => Sale)) public sales;\\n    address public marketplaceOwner;\\n    uint256 public feePercentage;\\n\\n    event SaleCreated(\\n        address indexed owner,\\n        address indexed nftContract,\\n        uint256 indexed tokenId,\\n        uint256 quantity,\\n        uint256 price,\\n        address paymentToken\\n    );\\n    event SaleUpdated(\\n        address indexed owner,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n    event SaleCompleted(\\n        address indexed buyer,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n\\n    constructor(uint256 _feePercentage) {\\n        marketplaceOwner = msg.sender;\\n        feePercentage = _feePercentage;\\n    }\\n\\n    modifier onlyNFTOwner(address _nftContract, uint256 _tokenId) {\\n        address tokenOwner;\\n        if (IERC721(_nftContract).supportsInterface(0x80ac58cd)) {\\n            tokenOwner = IERC721(_nftContract).ownerOf(_tokenId);\\n        } else {\\n            tokenOwner = IERC1155(_nftContract).balanceOf(\\n                msg.sender,\\n                _tokenId\\n            ) > 0\\n                ? msg.sender\\n                : address(0);\\n        }\\n        require(\\n            tokenOwner == msg.sender,\\n            \\\"Only NFT owner can perform this action\\\"\\n        );\\n        _;\\n    }\\n\\n    function createOrUpdateSale(\\n        address _nftContract,\\n        uint256 _tokenId,\\n        uint256 _quantity,\\n        uint256 _price,\\n        address _paymentToken\\n    ) external onlyNFTOwner(_nftContract, _tokenId) {\\n        require(_nftContract != address(0), \\\"Invalid contract address\\\");\\n        require(_quantity > 0, \\\"Quantity should be greater than zero\\\");\\n        require(_price > 0, \\\"Price should be greater than zero\\\");\\n\\n        if (sales[_nftContract][_tokenId].owner == address(0)) {\\n            sales[_nftContract][_tokenId] = Sale(\\n                msg.sender,\\n                _nftContract,\\n                _tokenId,\\n                _quantity,\\n                _price,\\n                _paymentToken\\n            );\\n            emit SaleCreated(\\n                msg.sender,\\n                _nftContract,\\n                _tokenId,\\n                _quantity,\\n                _price,\\n                _paymentToken\\n            );\\n        } else {\\n            sales[_nftContract][_tokenId].price = _price;\\n            emit SaleUpdated(msg.sender, _tokenId, _price);\\n        }\\n    }\\n\\n    function buy(address _nftContract, uint256 _tokenId) external payable {\\n        Sale storage sale = sales[_nftContract][_tokenId];\\n        require(sale.owner != address(0), \\\"Sale does not exist\\\");\\n\\n        uint256 totalPrice = sale.price;\\n        uint256 feeAmount = (totalPrice * feePercentage) / 10000;\\n        if (sale.paymentToken == address(0)) {\\n            require(msg.value <= totalPrice, \\\"Insufficient ETH sent\\\");\\n            payable(sale.owner).transfer(totalPrice - feeAmount);\\n        } else {\\n            IERC20 paymentToken = IERC20(sale.paymentToken);\\n            require(\\n                paymentToken.allowance(msg.sender, address(this)) >= totalPrice,\\n                \\\"Allowance not provided\\\"\\n            );\\n            require(\\n                paymentToken.transferFrom(msg.sender, sale.owner, totalPrice),\\n                \\\"Payment transfer failed\\\"\\n            );\\n        }\\n\\n        payable(marketplaceOwner).transfer(feeAmount);\\n        uint256 excessPayment = msg.value - totalPrice;\\n\\n        if (excessPayment > 0) {\\n            payable(msg.sender).transfer(excessPayment);\\n        }\\n        if (\\n            IERC721(sale.nftContract).supportsInterface(\\n                type(IERC721).interfaceId\\n            )\\n        ) {\\n            IERC721(sale.nftContract).safeTransferFrom(\\n                sale.owner,\\n                msg.sender,\\n                _tokenId\\n            );\\n        } else {\\n            IERC1155(sale.nftContract).safeTransferFrom(\\n                sale.owner,\\n                msg.sender,\\n                _tokenId,\\n                sale.quantity,\\n                \\\"\\\"\\n            );\\n        }\\n        sales[_nftContract][_tokenId].owner = msg.sender;\\n\\n        emit SaleCompleted(msg.sender, _tokenId, totalPrice);\\n    }\\n}\\n\"\n    }\n  },\n  \"settings\": {\n    \"evmVersion\": \"paris\",\n    \"optimizer\": {\n      \"enabled\": false,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
      "solcInputHash": "c2b56897a2460d0d4a43f06444f1742c",
      "transactionHash": "0x7250588229d622e38a9df12adfb983673e76a850ca68e95d644369cc85541ced",
      "args": []
    },
    "decoded": {
      "from": "0x641A423E170c8381a0aE0d6D6969f20f6D01f410",
      "gasPrice": "1781245887",
      "maxFeePerGas": "1781245887",
      "maxPriorityFeePerGas": "1500000000",
      "gasLimit": "2115550",
      "to": null,
      "value": "0",
      "nonce": 105,
      "data": "0x60806040523480156200001157600080fd5b50604051806060016040528060278152602001620032b0602791396200003d816200011560201b60201c565b506200006a336000670de0b6b3a7640000604051806020016040528060008152506200012a60201b60201c565b6200009a3360016b033b2e3c9fd0803ce8000000604051806020016040528060008152506200012a60201b60201c565b620000bf3360026001604051806020016040528060008152506200012a60201b60201c565b620000e7336003633b9aca00604051806020016040528060008152506200012a60201b60201c565b6200010f336004633b9aca00604051806020016040528060008152506200012a60201b60201c565b62001265565b806002908162000126919062000ccd565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036200019f5760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000196919062000df9565b60405180910390fd5b600080620001b48585620001d660201b60201c565b91509150620001ce6000878484876200020660201b60201c565b505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6200021a85858585620002df60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620002d857600062000261620006b160201b60201c565b90506001845103620002bf57600062000285600086620006b960201b90919060201c565b905060006200029f600086620006b960201b90919060201c565b9050620002b7838989858589620006cd60201b60201c565b5050620002d6565b620002d58187878787876200089060201b60201c565b5b505b5050505050565b80518251146200032c57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016200032392919062000e27565b60405180910390fd5b60006200033e620006b160201b60201c565b905060005b835181101562000562576000620003648286620006b960201b90919060201c565b905060006200037d8386620006b960201b90919060201c565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614620004ae57600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156200045657888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016200044d949392919062000e54565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146200054c578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000544919062000ed0565b925050819055505b5050806200055a9062000f0b565b905062000343565b5060018351036200062957600062000585600085620006b960201b90919060201c565b905060006200059f600085620006b960201b90919060201c565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516200061992919062000e27565b60405180910390a45050620006aa565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051620006a192919062001026565b60405180910390a45b5050505050565b600033905090565b600060208202602084010151905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111562000888578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040162000731959493929190620010fb565b6020604051808303816000875af19250505080156200077057506040513d601f19601f820116820180604052508101906200076d9190620011c1565b60015b620007fa573d8060008114620007a3576040519150601f19603f3d011682016040523d82523d6000602084013e620007a8565b606091505b506000815103620007f257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401620007e9919062000df9565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146200088657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016200087d919062000df9565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111562000a4b578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401620008f4959493929190620011f3565b6020604051808303816000875af19250505080156200093357506040513d601f19601f82011682018060405250810190620009309190620011c1565b60015b620009bd573d806000811462000966576040519150601f19603f3d011682016040523d82523d6000602084013e6200096b565b606091505b506000815103620009b557846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401620009ac919062000df9565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161462000a4957846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000a40919062000df9565b60405180910390fd5b505b505050505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000ad557607f821691505b60208210810362000aeb5762000aea62000a8d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000b557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000b16565b62000b61868362000b16565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000bae62000ba862000ba28462000b79565b62000b83565b62000b79565b9050919050565b6000819050919050565b62000bca8362000b8d565b62000be262000bd98262000bb5565b84845462000b23565b825550505050565b600090565b62000bf962000bea565b62000c0681848462000bbf565b505050565b5b8181101562000c2e5762000c2260008262000bef565b60018101905062000c0c565b5050565b601f82111562000c7d5762000c478162000af1565b62000c528462000b06565b8101602085101562000c62578190505b62000c7a62000c718562000b06565b83018262000c0b565b50505b505050565b600082821c905092915050565b600062000ca26000198460080262000c82565b1980831691505092915050565b600062000cbd838362000c8f565b9150826002028217905092915050565b62000cd88262000a53565b67ffffffffffffffff81111562000cf45762000cf362000a5e565b5b62000d00825462000abc565b62000d0d82828562000c32565b600060209050601f83116001811462000d45576000841562000d30578287015190505b62000d3c858262000caf565b86555062000dac565b601f19841662000d558662000af1565b60005b8281101562000d7f5784890151825560018201915060208501945060208101905062000d58565b8683101562000d9f578489015162000d9b601f89168262000c8f565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000de18262000db4565b9050919050565b62000df38162000dd4565b82525050565b600060208201905062000e10600083018462000de8565b92915050565b62000e218162000b79565b82525050565b600060408201905062000e3e600083018562000e16565b62000e4d602083018462000e16565b9392505050565b600060808201905062000e6b600083018762000de8565b62000e7a602083018662000e16565b62000e89604083018562000e16565b62000e98606083018462000e16565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000edd8262000b79565b915062000eea8362000b79565b925082820190508082111562000f055762000f0462000ea1565b5b92915050565b600062000f188262000b79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000f4d5762000f4c62000ea1565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b62000f8f8162000b79565b82525050565b600062000fa3838362000f84565b60208301905092915050565b6000602082019050919050565b600062000fc98262000f58565b62000fd5818562000f63565b935062000fe28362000f74565b8060005b838110156200101957815162000ffd888262000f95565b97506200100a8362000faf565b92505060018101905062000fe6565b5085935050505092915050565b6000604082019050818103600083015262001042818562000fbc565b9050818103602083015262001058818462000fbc565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200109d57808201518184015260208101905062001080565b60008484015250505050565b6000601f19601f8301169050919050565b6000620010c78262001061565b620010d381856200106c565b9350620010e58185602086016200107d565b620010f081620010a9565b840191505092915050565b600060a08201905062001112600083018862000de8565b62001121602083018762000de8565b62001130604083018662000e16565b6200113f606083018562000e16565b8181036080830152620011538184620010ba565b90509695505050505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6200119b8162001164565b8114620011a757600080fd5b50565b600081519050620011bb8162001190565b92915050565b600060208284031215620011da57620011d96200115f565b5b6000620011ea84828501620011aa565b91505092915050565b600060a0820190506200120a600083018862000de8565b62001219602083018762000de8565b81810360408301526200122d818662000fbc565b9050818103606083015262001243818562000fbc565b90508181036080830152620012598184620010ba565b90509695505050505050565b61203b80620012756000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063d562e20411610066578063d562e20414610225578063e3e55f0814610243578063e985e9c514610261578063f242432a14610291576100ce565b80634e1273f4146101bb5780635b2725ed146101eb578063a22cb46514610209576100ce565b8062fdd58e146100d357806301ffc9a7146101035780630e89341c1461013357806313dc989f146101635780632eb2c2d6146101815780633e4bee381461019d575b600080fd5b6100ed60048036038101906100e8919061144c565b6102ad565b6040516100fa919061149b565b60405180910390f35b61011d6004803603810190610118919061150e565b610307565b60405161012a9190611556565b60405180910390f35b61014d60048036038101906101489190611571565b6103e9565b60405161015a919061162e565b60405180910390f35b61016b61047d565b604051610178919061149b565b60405180910390f35b61019b6004803603810190610196919061184d565b610482565b005b6101a561052a565b6040516101b2919061149b565b60405180910390f35b6101d560048036038101906101d091906119df565b61052f565b6040516101e29190611b15565b60405180910390f35b6101f361063e565b604051610200919061149b565b60405180910390f35b610223600480360381019061021e9190611b63565b610643565b005b61022d610659565b60405161023a919061149b565b60405180910390f35b61024b61065e565b604051610258919061149b565b60405180910390f35b61027b60048036038101906102769190611ba3565b610663565b6040516102889190611556565b60405180910390f35b6102ab60048036038101906102a69190611be3565b6106f7565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d257507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e257506103e18261079f565b5b9050919050565b6060600280546103f890611ca9565b80601f016020809104026020016040519081016040528092919081815260200182805461042490611ca9565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b50505050509050919050565b600381565b600061048c610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104d157506104cf8682610663565b155b156105155780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161050c929190611ce9565b60405180910390fd5b6105228686868686610811565b505050505050565b600081565b6060815183511461057b57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610572929190611d12565b60405180910390fd5b6000835167ffffffffffffffff81111561059857610597611655565b5b6040519080825280602002602001820160405280156105c65781602001602082028036833780820191505090505b50905060005b8451811015610633576106036105eb828761090990919063ffffffff16565b6105fe838761091d90919063ffffffff16565b6102ad565b82828151811061061657610615611d3b565b5b6020026020010181815250508061062c90611d99565b90506105cc565b508091505092915050565b600481565b61065561064e610809565b8383610931565b5050565b600281565b600181565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610701610809565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561074657506107448682610663565b155b1561078a5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610781929190611ce9565b60405180910390fd5b6107978686868686610aa1565b505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108835760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161087a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108f55760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108ec9190611de1565b60405180910390fd5b6109028585858585610bac565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a35760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161099a9190611de1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a949190611556565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b135760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b0a9190611de1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b855760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b7c9190611de1565b60405180910390fd5b600080610b928585610c5e565b91509150610ba38787848487610bac565b50505050505050565b610bb885858585610c8e565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610c57576000610bf6610809565b90506001845103610c46576000610c1760008661091d90919063ffffffff16565b90506000610c2f60008661091d90919063ffffffff16565b9050610c3f83898985858961103c565b5050610c55565b610c548187878787876111f0565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610cd857815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ccf929190611d12565b60405180910390fd5b6000610ce2610809565b905060005b8351811015610ef7576000610d05828661091d90919063ffffffff16565b90506000610d1c838661091d90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610e4957600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610df157888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610de89493929190611dfc565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610ee4578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610edc9190611e41565b925050819055505b505080610ef090611d99565b9050610ce7565b506001835103610fb6576000610f1760008561091d90919063ffffffff16565b90506000610f2f60008561091d90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610fa7929190611d12565b60405180910390a45050611035565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161102c929190611e75565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156111e8578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161109d959493929190611f01565b6020604051808303816000875af19250505080156110d957506040513d601f19601f820116820180604052508101906110d69190611f70565b60015b61115d573d8060008114611109576040519150601f19603f3d011682016040523d82523d6000602084013e61110e565b606091505b50600081510361115557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161114c9190611de1565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111dd9190611de1565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561139c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611251959493929190611f9d565b6020604051808303816000875af192505050801561128d57506040513d601f19601f8201168201806040525081019061128a9190611f70565b60015b611311573d80600081146112bd576040519150601f19603f3d011682016040523d82523d6000602084013e6112c2565b606091505b50600081510361130957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113009190611de1565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461139a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113919190611de1565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113e3826113b8565b9050919050565b6113f3816113d8565b81146113fe57600080fd5b50565b600081359050611410816113ea565b92915050565b6000819050919050565b61142981611416565b811461143457600080fd5b50565b60008135905061144681611420565b92915050565b60008060408385031215611463576114626113ae565b5b600061147185828601611401565b925050602061148285828601611437565b9150509250929050565b61149581611416565b82525050565b60006020820190506114b0600083018461148c565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114eb816114b6565b81146114f657600080fd5b50565b600081359050611508816114e2565b92915050565b600060208284031215611524576115236113ae565b5b6000611532848285016114f9565b91505092915050565b60008115159050919050565b6115508161153b565b82525050565b600060208201905061156b6000830184611547565b92915050565b600060208284031215611587576115866113ae565b5b600061159584828501611437565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115d85780820151818401526020810190506115bd565b60008484015250505050565b6000601f19601f8301169050919050565b60006116008261159e565b61160a81856115a9565b935061161a8185602086016115ba565b611623816115e4565b840191505092915050565b6000602082019050818103600083015261164881846115f5565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61168d826115e4565b810181811067ffffffffffffffff821117156116ac576116ab611655565b5b80604052505050565b60006116bf6113a4565b90506116cb8282611684565b919050565b600067ffffffffffffffff8211156116eb576116ea611655565b5b602082029050602081019050919050565b600080fd5b600061171461170f846116d0565b6116b5565b90508083825260208201905060208402830185811115611737576117366116fc565b5b835b81811015611760578061174c8882611437565b845260208401935050602081019050611739565b5050509392505050565b600082601f83011261177f5761177e611650565b5b813561178f848260208601611701565b91505092915050565b600080fd5b600067ffffffffffffffff8211156117b8576117b7611655565b5b6117c1826115e4565b9050602081019050919050565b82818337600083830152505050565b60006117f06117eb8461179d565b6116b5565b90508281526020810184848401111561180c5761180b611798565b5b6118178482856117ce565b509392505050565b600082601f83011261183457611833611650565b5b81356118448482602086016117dd565b91505092915050565b600080600080600060a08688031215611869576118686113ae565b5b600061187788828901611401565b955050602061188888828901611401565b945050604086013567ffffffffffffffff8111156118a9576118a86113b3565b5b6118b58882890161176a565b935050606086013567ffffffffffffffff8111156118d6576118d56113b3565b5b6118e28882890161176a565b925050608086013567ffffffffffffffff811115611903576119026113b3565b5b61190f8882890161181f565b9150509295509295909350565b600067ffffffffffffffff82111561193757611936611655565b5b602082029050602081019050919050565b600061195b6119568461191c565b6116b5565b9050808382526020820190506020840283018581111561197e5761197d6116fc565b5b835b818110156119a757806119938882611401565b845260208401935050602081019050611980565b5050509392505050565b600082601f8301126119c6576119c5611650565b5b81356119d6848260208601611948565b91505092915050565b600080604083850312156119f6576119f56113ae565b5b600083013567ffffffffffffffff811115611a1457611a136113b3565b5b611a20858286016119b1565b925050602083013567ffffffffffffffff811115611a4157611a406113b3565b5b611a4d8582860161176a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a8c81611416565b82525050565b6000611a9e8383611a83565b60208301905092915050565b6000602082019050919050565b6000611ac282611a57565b611acc8185611a62565b9350611ad783611a73565b8060005b83811015611b08578151611aef8882611a92565b9750611afa83611aaa565b925050600181019050611adb565b5085935050505092915050565b60006020820190508181036000830152611b2f8184611ab7565b905092915050565b611b408161153b565b8114611b4b57600080fd5b50565b600081359050611b5d81611b37565b92915050565b60008060408385031215611b7a57611b796113ae565b5b6000611b8885828601611401565b9250506020611b9985828601611b4e565b9150509250929050565b60008060408385031215611bba57611bb96113ae565b5b6000611bc885828601611401565b9250506020611bd985828601611401565b9150509250929050565b600080600080600060a08688031215611bff57611bfe6113ae565b5b6000611c0d88828901611401565b9550506020611c1e88828901611401565b9450506040611c2f88828901611437565b9350506060611c4088828901611437565b925050608086013567ffffffffffffffff811115611c6157611c606113b3565b5b611c6d8882890161181f565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc157607f821691505b602082108103611cd457611cd3611c7a565b5b50919050565b611ce3816113d8565b82525050565b6000604082019050611cfe6000830185611cda565b611d0b6020830184611cda565b9392505050565b6000604082019050611d27600083018561148c565b611d34602083018461148c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611da482611416565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dd657611dd5611d6a565b5b600182019050919050565b6000602082019050611df66000830184611cda565b92915050565b6000608082019050611e116000830187611cda565b611e1e602083018661148c565b611e2b604083018561148c565b611e38606083018461148c565b95945050505050565b6000611e4c82611416565b9150611e5783611416565b9250828201905080821115611e6f57611e6e611d6a565b5b92915050565b60006040820190508181036000830152611e8f8185611ab7565b90508181036020830152611ea38184611ab7565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000611ed382611eac565b611edd8185611eb7565b9350611eed8185602086016115ba565b611ef6816115e4565b840191505092915050565b600060a082019050611f166000830188611cda565b611f236020830187611cda565b611f30604083018661148c565b611f3d606083018561148c565b8181036080830152611f4f8184611ec8565b90509695505050505050565b600081519050611f6a816114e2565b92915050565b600060208284031215611f8657611f856113ae565b5b6000611f9484828501611f5b565b91505092915050565b600060a082019050611fb26000830188611cda565b611fbf6020830187611cda565b8181036040830152611fd18186611ab7565b90508181036060830152611fe58185611ab7565b90508181036080830152611ff98184611ec8565b9050969550505050505056fea2646970667358221220685abd9d40300b98b3e3c754e946b49782ed1825c4e8366f2cd49a37e3302fe964736f6c6343000814003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
      "r": "0x0c0d8b260ea011c1673e9d09b003589925148b1d64b3f7c4b034b78127d5cb07",
      "s": "0x14185f39063769180f3d9765086c8f60a1173144584f4b6ec57dca0d6d27acca",
      "v": 1,
      "chainId": 11155111
    }
  }
}