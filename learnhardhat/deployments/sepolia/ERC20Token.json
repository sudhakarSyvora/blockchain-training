{
  "address": "0xE499d2d801CDEd9ad7B0C704B994Cfb1Fc2a22fe",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalSupplyValue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "nameValue",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimalsValue",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "symbolValue",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc721ContractAddress",
          "type": "address"
        }
      ],
      "name": "setERC721ContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferForNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x204a12644cdfd47687b4216acc26578ca3670947365fb99d3840acc6926f5bca",
  "receipt": {
    "to": null,
    "from": "0x641A423E170c8381a0aE0d6D6969f20f6D01f410",
    "contractAddress": "0xE499d2d801CDEd9ad7B0C704B994Cfb1Fc2a22fe",
    "transactionIndex": 111,
    "gasUsed": "1351687",
    "logsBloom": "0x
    "blockHash": "0xec7c311816e88e2366d0633d23a9a49998dbf371acac5c78d4432d18eb976be5",
    "transactionHash": "0x204a12644cdfd47687b4216acc26578ca3670947365fb99d3840acc6926f5bca",
    "logs": [],
    "blockNumber": 5189716,
    "cumulativeGasUsed": "13108630",
    "status": 1,
    "byzantium": true
  },
  "args": [
    2000,
    "Coins",
    5,
    "leth"
  ],
  "numDeployments": 2,
  "solcInputHash": "f7630e3612212e074e02ee49522bf6ca",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupplyValue\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"nameValue\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimalsValue\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"symbolValue\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc721ContractAddress\",\"type\":\"address\"}],\"name\":\"setERC721ContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferForNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Token/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/ERC20Token/ERC20Token.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.19;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract ERC20Token is IERC20 {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowed;\\n\\n    uint256 private _totalSupply;\\n\\n    string public name;\\n    uint8 public decimals;\\n    string public symbol;\\n    address private _contractOwner;\\n    address private _ERC721ContractAddress;\\n\\n    constructor(\\n        uint256 totalSupplyValue,\\n        string memory nameValue,\\n        uint8 decimalsValue,\\n        string memory symbolValue\\n    ) {\\n        _totalSupply = totalSupplyValue;\\n        _balances[msg.sender] = totalSupplyValue;\\n        name = nameValue;\\n        decimals = decimalsValue;\\n        symbol = symbolValue;\\n        _contractOwner = msg.sender;\\n    }\\n\\n    function setERC721ContractAddress(address _erc721ContractAddress) external {\\n        require(_contractOwner == msg.sender);\\n        _ERC721ContractAddress = _erc721ContractAddress;\\n    }\\n\\n    function totalSupply() external view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address _owner) external view returns (uint256 balance) {\\n        return _balances[_owner];\\n    }\\n\\n    function transfer(\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool success) {\\n        require(\\n            _balances[msg.sender] >= _value && _to != address(0),\\n            \\\"ERC20: Insufficient balance\\\"\\n        );\\n        _balances[msg.sender] = _balances[msg.sender] - _value;\\n        _balances[_to] = _balances[_to] + _value;\\n        emit Transfer(msg.sender, _to, _value);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool success) {\\n        require(\\n            _from != address(0) &&\\n                _to != address(0) &&\\n                _allowed[_from][msg.sender] >= _value &&\\n                _balances[_from] >= _value,\\n            \\\"Not approved\\\"\\n        );\\n        _allowed[_from][msg.sender] -= _value;\\n        _balances[_to] += _value;\\n        _balances[_from] -= _value;\\n        emit Transfer(_from, _to, _value);\\n        return true;\\n    }\\n\\n    function approve(\\n        address _spender,\\n        uint256 _value\\n    ) external returns (bool success) {\\n        require(_spender != address(0));\\n        _allowed[msg.sender][_spender] = _value;\\n        emit Approval(msg.sender, _spender, _value);\\n        return true;\\n    }\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256 remaining) {\\n        require(_owner != address(0) && _spender != address(0));\\n        return _allowed[_owner][_spender];\\n    }\\n\\n    function mint(address _to, uint256 _value) external returns (bool success) {\\n        require(msg.sender == _contractOwner, \\\"Owner can only mint new tokens\\\");\\n        _totalSupply = _totalSupply + _value;\\n        _balances[_to] = _balances[_to] + _value;\\n        return true;\\n    }\\n\\n    function transferForNFT(address _tokenOwner,address _buyer, uint _value) external {\\n        require(\\n            msg.sender == _ERC721ContractAddress,\\n            \\\"Not called by authorised contract!\\\"\\n        );\\n        _balances[_tokenOwner] += _value;\\n        _balances[_buyer] -= _value;\\n    }\\n}\\n\",\"keccak256\":\"0xcf2f41ea542b3ddc891d89288bc34e16368510c26e31fa323a9e2d657b1bca1e\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001b9638038062001b96833981810160405281019062000037919062000317565b83600281905550836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550826003908162000092919062000608565b5081600460006101000a81548160ff021916908360ff1602179055508060059081620000bf919062000608565b5033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620006ef565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b62000134816200011f565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001af8262000164565b810181811067ffffffffffffffff82111715620001d157620001d062000175565b5b80604052505050565b6000620001e66200010b565b9050620001f48282620001a4565b919050565b600067ffffffffffffffff82111562000217576200021662000175565b5b620002228262000164565b9050602081019050919050565b60005b838110156200024f57808201518184015260208101905062000232565b60008484015250505050565b6000620002726200026c84620001f9565b620001da565b9050828152602081018484840111156200029157620002906200015f565b5b6200029e8482856200022f565b509392505050565b600082601f830112620002be57620002bd6200015a565b5b8151620002d08482602086016200025b565b91505092915050565b600060ff82169050919050565b620002f181620002d9565b8114620002fd57600080fd5b50565b6000815190506200031181620002e6565b92915050565b6000806000806080858703121562000334576200033362000115565b5b6000620003448782880162000143565b945050602085015167ffffffffffffffff8111156200036857620003676200011a565b5b6200037687828801620002a6565b9350506040620003898782880162000300565b925050606085015167ffffffffffffffff811115620003ad57620003ac6200011a565b5b620003bb87828801620002a6565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200041a57607f821691505b60208210810362000430576200042f620003d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200049a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200045b565b620004a686836200045b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620004e9620004e3620004dd846200011f565b620004be565b6200011f565b9050919050565b6000819050919050565b6200050583620004c8565b6200051d6200051482620004f0565b84845462000468565b825550505050565b600090565b6200053462000525565b62000541818484620004fa565b505050565b5b8181101562000569576200055d6000826200052a565b60018101905062000547565b5050565b601f821115620005b857620005828162000436565b6200058d846200044b565b810160208510156200059d578190505b620005b5620005ac856200044b565b83018262000546565b50505b505050565b600082821c905092915050565b6000620005dd60001984600802620005bd565b1980831691505092915050565b6000620005f88383620005ca565b9150826002028217905092915050565b6200061382620003c7565b67ffffffffffffffff8111156200062f576200062e62000175565b5b6200063b825462000401565b620006488282856200056d565b600060209050601f8311600181146200068057600084156200066b578287015190505b620006778582620005ea565b865550620006e7565b601f198416620006908662000436565b60005b82811015620006ba5784890151825560018201915060208501945060208101905062000693565b86831015620006da5784890151620006d6601f891682620005ca565b8355505b6001600288020188555050505b505050505050565b61149780620006ff6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461018f57806370a08231146101bf578063792a1443146101ef57806395d89b411461020b578063a9059cbb14610229578063dd62ed3e14610259576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146101075780631e0f692e1461012557806323b872dd14610141578063313ce56714610171575b600080fd5b6100c1610289565b6040516100ce9190610f42565b60405180910390f35b6100f160048036038101906100ec9190610ffd565b610317565b6040516100fe9190611058565b60405180910390f35b61010f610441565b60405161011c9190611082565b60405180910390f35b61013f600480360381019061013a919061109d565b61044b565b005b61015b600480360381019061015691906110ca565b6104e9565b6040516101689190611058565b60405180910390f35b610179610812565b6040516101869190611139565b60405180910390f35b6101a960048036038101906101a49190610ffd565b610825565b6040516101b69190611058565b60405180910390f35b6101d960048036038101906101d4919061109d565b610961565b6040516101e69190611082565b60405180910390f35b610209600480360381019061020491906110ca565b6109a9565b005b610213610ae8565b6040516102209190610f42565b60405180910390f35b610243600480360381019061023e9190610ffd565b610b76565b6040516102509190611058565b60405180910390f35b610273600480360381019061026e9190611154565b610db9565b6040516102809190611082565b60405180910390f35b60038054610296906111c3565b80601f01602080910402602001604051908101604052809291908181526020018280546102c2906111c3565b801561030f5780601f106102e45761010080835404028352916020019161030f565b820191906000526020600020905b8154815290600101906020018083116102f257829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361035157600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161042f9190611082565b60405180910390a36001905092915050565b6000600254905090565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104a557600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156105545750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b80156105dc575081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156106265750816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90611240565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106f1919061128f565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461074691906112c3565b92505081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461079b919061128f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107ff9190611082565b60405180910390a3600190509392505050565b600460009054906101000a900460ff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae90611343565b60405180910390fd5b816002546108c591906112c3565b600281905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461091591906112c3565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a30906113d5565b60405180910390fd5b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a8791906112c3565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610adc919061128f565b92505081905550505050565b60058054610af5906111c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b21906111c3565b8015610b6e5780601f10610b4357610100808354040283529160200191610b6e565b820191906000526020600020905b815481529060010190602001808311610b5157829003601f168201915b505050505081565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610bf35750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2990611441565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c919061128f565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0891906112c3565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610da79190611082565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610e245750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610e2d57600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eec578082015181840152602081019050610ed1565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f1482610eb2565b610f1e8185610ebd565b9350610f2e818560208601610ece565b610f3781610ef8565b840191505092915050565b60006020820190508181036000830152610f5c8184610f09565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f9482610f69565b9050919050565b610fa481610f89565b8114610faf57600080fd5b50565b600081359050610fc181610f9b565b92915050565b6000819050919050565b610fda81610fc7565b8114610fe557600080fd5b50565b600081359050610ff781610fd1565b92915050565b6000806040838503121561101457611013610f64565b5b600061102285828601610fb2565b925050602061103385828601610fe8565b9150509250929050565b60008115159050919050565b6110528161103d565b82525050565b600060208201905061106d6000830184611049565b92915050565b61107c81610fc7565b82525050565b60006020820190506110976000830184611073565b92915050565b6000602082840312156110b3576110b2610f64565b5b60006110c184828501610fb2565b91505092915050565b6000806000606084860312156110e3576110e2610f64565b5b60006110f186828701610fb2565b935050602061110286828701610fb2565b925050604061111386828701610fe8565b9150509250925092565b600060ff82169050919050565b6111338161111d565b82525050565b600060208201905061114e600083018461112a565b92915050565b6000806040838503121561116b5761116a610f64565b5b600061117985828601610fb2565b925050602061118a85828601610fb2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111db57607f821691505b6020821081036111ee576111ed611194565b5b50919050565b7f4e6f7420617070726f7665640000000000000000000000000000000000000000600082015250565b600061122a600c83610ebd565b9150611235826111f4565b602082019050919050565b600060208201905081810360008301526112598161121d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129a82610fc7565b91506112a583610fc7565b92508282039050818111156112bd576112bc611260565b5b92915050565b60006112ce82610fc7565b91506112d983610fc7565b92508282019050808211156112f1576112f0611260565b5b92915050565b7f4f776e65722063616e206f6e6c79206d696e74206e657720746f6b656e730000600082015250565b600061132d601e83610ebd565b9150611338826112f7565b602082019050919050565b6000602082019050818103600083015261135c81611320565b9050919050565b7f4e6f742063616c6c656420627920617574686f726973656420636f6e7472616360008201527f7421000000000000000000000000000000000000000000000000000000000000602082015250565b60006113bf602283610ebd565b91506113ca82611363565b604082019050919050565b600060208201905081810360008301526113ee816113b2565b9050919050565b7f45524332303a20496e73756666696369656e742062616c616e63650000000000600082015250565b600061142b601b83610ebd565b9150611436826113f5565b602082019050919050565b6000602082019050818103600083015261145a8161141e565b905091905056fea2646970667358221220cac6b5d65d65e1d99c8ea26d97fbd7a5924d34c5598f1484272366cb21204ada64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461018f57806370a08231146101bf578063792a1443146101ef57806395d89b411461020b578063a9059cbb14610229578063dd62ed3e14610259576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146101075780631e0f692e1461012557806323b872dd14610141578063313ce56714610171575b600080fd5b6100c1610289565b6040516100ce9190610f42565b60405180910390f35b6100f160048036038101906100ec9190610ffd565b610317565b6040516100fe9190611058565b60405180910390f35b61010f610441565b60405161011c9190611082565b60405180910390f35b61013f600480360381019061013a919061109d565b61044b565b005b61015b600480360381019061015691906110ca565b6104e9565b6040516101689190611058565b60405180910390f35b610179610812565b6040516101869190611139565b60405180910390f35b6101a960048036038101906101a49190610ffd565b610825565b6040516101b69190611058565b60405180910390f35b6101d960048036038101906101d4919061109d565b610961565b6040516101e69190611082565b60405180910390f35b610209600480360381019061020491906110ca565b6109a9565b005b610213610ae8565b6040516102209190610f42565b60405180910390f35b610243600480360381019061023e9190610ffd565b610b76565b6040516102509190611058565b60405180910390f35b610273600480360381019061026e9190611154565b610db9565b6040516102809190611082565b60405180910390f35b60038054610296906111c3565b80601f01602080910402602001604051908101604052809291908181526020018280546102c2906111c3565b801561030f5780601f106102e45761010080835404028352916020019161030f565b820191906000526020600020905b8154815290600101906020018083116102f257829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361035157600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161042f9190611082565b60405180910390a36001905092915050565b6000600254905090565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104a557600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156105545750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b80156105dc575081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156106265750816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90611240565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106f1919061128f565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461074691906112c3565b92505081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461079b919061128f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107ff9190611082565b60405180910390a3600190509392505050565b600460009054906101000a900460ff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae90611343565b60405180910390fd5b816002546108c591906112c3565b600281905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461091591906112c3565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a30906113d5565b60405180910390fd5b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a8791906112c3565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610adc919061128f565b92505081905550505050565b60058054610af5906111c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b21906111c3565b8015610b6e5780601f10610b4357610100808354040283529160200191610b6e565b820191906000526020600020905b815481529060010190602001808311610b5157829003601f168201915b505050505081565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610bf35750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2990611441565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c919061128f565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0891906112c3565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610da79190611082565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610e245750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610e2d57600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eec578082015181840152602081019050610ed1565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f1482610eb2565b610f1e8185610ebd565b9350610f2e818560208601610ece565b610f3781610ef8565b840191505092915050565b60006020820190508181036000830152610f5c8184610f09565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f9482610f69565b9050919050565b610fa481610f89565b8114610faf57600080fd5b50565b600081359050610fc181610f9b565b92915050565b6000819050919050565b610fda81610fc7565b8114610fe557600080fd5b50565b600081359050610ff781610fd1565b92915050565b6000806040838503121561101457611013610f64565b5b600061102285828601610fb2565b925050602061103385828601610fe8565b9150509250929050565b60008115159050919050565b6110528161103d565b82525050565b600060208201905061106d6000830184611049565b92915050565b61107c81610fc7565b82525050565b60006020820190506110976000830184611073565b92915050565b6000602082840312156110b3576110b2610f64565b5b60006110c184828501610fb2565b91505092915050565b6000806000606084860312156110e3576110e2610f64565b5b60006110f186828701610fb2565b935050602061110286828701610fb2565b925050604061111386828701610fe8565b9150509250925092565b600060ff82169050919050565b6111338161111d565b82525050565b600060208201905061114e600083018461112a565b92915050565b6000806040838503121561116b5761116a610f64565b5b600061117985828601610fb2565b925050602061118a85828601610fb2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111db57607f821691505b6020821081036111ee576111ed611194565b5b50919050565b7f4e6f7420617070726f7665640000000000000000000000000000000000000000600082015250565b600061122a600c83610ebd565b9150611235826111f4565b602082019050919050565b600060208201905081810360008301526112598161121d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129a82610fc7565b91506112a583610fc7565b92508282039050818111156112bd576112bc611260565b5b92915050565b60006112ce82610fc7565b91506112d983610fc7565b92508282019050808211156112f1576112f0611260565b5b92915050565b7f4f776e65722063616e206f6e6c79206d696e74206e657720746f6b656e730000600082015250565b600061132d601e83610ebd565b9150611338826112f7565b602082019050919050565b6000602082019050818103600083015261135c81611320565b9050919050565b7f4e6f742063616c6c656420627920617574686f726973656420636f6e7472616360008201527f7421000000000000000000000000000000000000000000000000000000000000602082015250565b60006113bf602283610ebd565b91506113ca82611363565b604082019050919050565b600060208201905081810360008301526113ee816113b2565b9050919050565b7f45524332303a20496e73756666696369656e742062616c616e63650000000000600082015250565b600061142b601b83610ebd565b9150611436826113f5565b602082019050919050565b6000602082019050818103600083015261145a8161141e565b905091905056fea2646970667358221220cac6b5d65d65e1d99c8ea26d97fbd7a5924d34c5598f1484272366cb21204ada64736f6c63430008140033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "totalSupply()": {
        "details": "Returns the value of tokens in existence."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 233,
        "contract": "contracts/ERC20Token/ERC20Token.sol:ERC20Token",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 239,
        "contract": "contracts/ERC20Token/ERC20Token.sol:ERC20Token",
        "label": "_allowed",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 241,
        "contract": "contracts/ERC20Token/ERC20Token.sol:ERC20Token",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 243,
        "contract": "contracts/ERC20Token/ERC20Token.sol:ERC20Token",
        "label": "name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 245,
        "contract": "contracts/ERC20Token/ERC20Token.sol:ERC20Token",
        "label": "decimals",
        "offset": 0,
        "slot": "4",
        "type": "t_uint8"
      },
      {
        "astId": 247,
        "contract": "contracts/ERC20Token/ERC20Token.sol:ERC20Token",
        "label": "symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 249,
        "contract": "contracts/ERC20Token/ERC20Token.sol:ERC20Token",
        "label": "_contractOwner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 251,
        "contract": "contracts/ERC20Token/ERC20Token.sol:ERC20Token",
        "label": "_ERC721ContractAddress",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}